<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Octokit</name>
    </assembly>
    <members>
        <member name="M:Octokit.Internal.BasicAuthenticator.Authenticate(Octokit.Internal.IRequest,Octokit.Credentials)">
            <summary>
            Authenticate a request using the basic access authentication scheme
            </summary>
            <param name="request">The request to authenticate</param>
            <param name="credentials">The credentials to attach to the request</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/#basic-authentication">Basic Authentication documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Internal.TokenAuthenticator.Authenticate(Octokit.Internal.IRequest,Octokit.Credentials)">
            <summary>
            Authenticate a request using the OAuth2 Token (sent in a header) authentication scheme
            </summary>
            <param name="request">The request to authenticate</param>
            <param name="credentials">The credentials to attach to the request</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/#oauth2-token-sent-in-a-header">OAuth2 Token (sent in a header) documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.Internal.ParameterAttribute">
            <summary>
            Indicate to the serializer that this property or value 
            has a different representation when being serialized to JSON
            </summary>
        </member>
        <member name="P:Octokit.Internal.ParameterAttribute.Key">
            <summary>
            The key to use in place of the property's name
            </summary>
        </member>
        <member name="P:Octokit.Internal.ParameterAttribute.Value">
            <summary>
            The name to use in place of the enum's value
            </summary>
        </member>
        <member name="T:Octokit.Internal.SerializeNullAttribute">
            <summary>
            Indicate to the serializer that this property or field
            should be included, even when currently set to `null`
            </summary>
        </member>
        <member name="T:Octokit.Internal.ApiResponse`1">
            <summary>
            Wrapper for a response from the API
            </summary>
            <typeparam name="T">Payload contained in the response</typeparam>
        </member>
        <member name="M:Octokit.Internal.ApiResponse`1.#ctor(Octokit.IResponse)">
            <summary>
            Create a ApiResponse from an existing request
            </summary>
            <param name="response">An existing request to wrap</param>
        </member>
        <member name="M:Octokit.Internal.ApiResponse`1.#ctor(Octokit.IResponse,`0)">
            <summary>
            Create a ApiResponse from an existing request and object
            </summary>
            <param name="response">An existing request to wrap</param>
            <param name="bodyAsObject">The payload from an existing request</param>
        </member>
        <member name="P:Octokit.Internal.ApiResponse`1.Body">
            <summary>
            The payload of the response
            </summary>
        </member>
        <member name="P:Octokit.Internal.ApiResponse`1.HttpResponse">
            <summary>
            The context of the response
            </summary>
        </member>
        <member name="T:Octokit.Internal.HttpClientAdapter">
            <summary>
            Generic Http client. Useful for those who want to swap out System.Net.HttpClient with something else.
            </summary>
            <remarks>
            Most folks won't ever need to swap this out. But if you're trying to run this on Windows Phone, you might.
            </remarks>
        </member>
        <member name="M:Octokit.Internal.HttpClientAdapter.Send(Octokit.Internal.IRequest,System.Threading.CancellationToken,System.Func{System.Object,System.Object})">
            <summary>
            Sends the specified request and returns a response.
            </summary>
            <param name="request">A <see cref="T:Octokit.Internal.IRequest"/> that represents the HTTP request</param>
            <param name="cancellationToken">Used to cancel the request</param>
            <param name="preprocessResponseBody">Function to preprocess HTTP response prior to deserialization (can be null)</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> of <see cref="T:Octokit.IResponse"/></returns>
        </member>
        <member name="M:Octokit.Internal.HttpClientAdapter.SetRequestTimeout(System.TimeSpan)">
            <summary>
            Set the GitHub Api request timeout.
            </summary>
            <param name="timeout">The Timeout value</param>
        </member>
        <member name="T:Octokit.Internal.IHttpClient">
            <summary>
            Generic Http client. Useful for those who want to swap out System.Net.HttpClient with something else.
            </summary>
            <remarks>
            Most folks won't ever need to swap this out. But if you're trying to run this on Windows Phone, you might.
            </remarks>
        </member>
        <member name="M:Octokit.Internal.IHttpClient.Send(Octokit.Internal.IRequest,System.Threading.CancellationToken,System.Func{System.Object,System.Object})">
            <summary>
            Sends the specified request and returns a response.
            </summary>
            <param name="request">A <see cref="T:Octokit.Internal.IRequest"/> that represents the HTTP request</param>
            <param name="cancellationToken">Used to cancel the request</param>
            <param name="preprocessResponseBody">Function to preprocess HTTP response prior to deserialization (can be null)</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> of <see cref="T:Octokit.IResponse"/></returns>
        </member>
        <member name="M:Octokit.Internal.IHttpClient.SetRequestTimeout(System.TimeSpan)">
            <summary>
            Sets the timeout for the connection between the client and the server.
            </summary>
            <param name="timeout">The Timeout value</param>
        </member>
        <member name="T:Octokit.Internal.InMemoryCredentialStore">
            <summary>
            Abstraction for interacting with credentials
            </summary>
        </member>
        <member name="M:Octokit.Internal.InMemoryCredentialStore.#ctor(Octokit.Credentials)">
            <summary>
            Create an instance of the InMemoryCredentialStore
            </summary>
            <param name="credentials"></param>
        </member>
        <member name="M:Octokit.Internal.InMemoryCredentialStore.GetCredentials">
            <summary>
            Retrieve the credentials from the underlying store
            </summary>
            <returns>A continuation containing credentials</returns>
        </member>
        <member name="T:Octokit.Internal.JsonHttpPipeline">
            <summary>
                Responsible for serializing the request and response as JSON and
                adding the proper JSON response header.
            </summary>
        </member>
        <member name="T:Octokit.Internal.Response">
            <summary>
            Represents a generic HTTP response
            </summary>
        </member>
        <member name="P:Octokit.Internal.Response.Body">
            <inheritdoc />
        </member>
        <member name="P:Octokit.Internal.Response.Headers">
            <summary>
            Information about the API.
            </summary>
        </member>
        <member name="P:Octokit.Internal.Response.ApiInfo">
            <summary>
            Information about the API response parsed from the response headers.
            </summary>
        </member>
        <member name="P:Octokit.Internal.Response.StatusCode">
            <summary>
            The response status code.
            </summary>
        </member>
        <member name="P:Octokit.Internal.Response.ContentType">
            <summary>
            The content type of the response.
            </summary>
        </member>
        <member name="P:Octokit.Internal.SearchResult`1.TotalCount">
            <summary>
            Total number of matching items.
            </summary>
        </member>
        <member name="P:Octokit.Internal.SearchResult`1.IncompleteResults">
            <summary>
            True if the query timed out and it's possible that the results are incomplete.
            </summary>
        </member>
        <member name="P:Octokit.Internal.SearchResult`1.Items">
            <summary>
            The found items. Up to 100 per page.
            </summary>
        </member>
        <member name="T:Octokit.AuthenticationType">
            <summary>
            Authentication protocols supported by the GitHub API
            </summary>
        </member>
        <member name="F:Octokit.AuthenticationType.Anonymous">
            <summary>
            No credentials provided
            </summary>
        </member>
        <member name="F:Octokit.AuthenticationType.Basic">
            <summary>
            Username &amp; password
            </summary>
        </member>
        <member name="F:Octokit.AuthenticationType.Oauth">
            <summary>
            Delegated access to a third party
            </summary>
        </member>
        <member name="F:Octokit.AuthenticationType.Bearer">
            <summary>
            Credential for GitHub App using signed JWT
            </summary>
        </member>
        <member name="T:Octokit.Caching.CachedResponse">
            <remarks>
            When implementation details of <see cref="T:Octokit.Internal.Response"/> changes:
            <list type="number">
            <item>mark <see cref="T:Octokit.Caching.CachedResponse.V1"/> as Obsolete</item>
            <item>create a V2</item>
            <item>update usages of <see cref="T:Octokit.Caching.CachedResponse.V1"/> to V2</item>
            </list>
            </remarks>
        </member>
        <member name="P:Octokit.Caching.CachedResponse.V1.Body">
            <inheritdoc/>
        </member>
        <member name="P:Octokit.Caching.CachedResponse.V1.Headers">
            <summary>
            Information about the API.
            </summary>
        </member>
        <member name="P:Octokit.Caching.CachedResponse.V1.ApiInfo">
            <summary>
            Information about the API response parsed from the response headers.
            </summary>
        </member>
        <member name="P:Octokit.Caching.CachedResponse.V1.StatusCode">
            <summary>
            The response status code.
            </summary>
        </member>
        <member name="P:Octokit.Caching.CachedResponse.V1.ContentType">
            <summary>
            The content type of the response.
            </summary>
        </member>
        <member name="T:Octokit.ActionsArtifactsClient">
            <summary>
            A client for GitHub's Actions Artifacts API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/artifacts/">Actions Artifacts API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ActionsArtifactsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Actions Artifacts API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.ActionsArtifactsClient.ListArtifacts(System.String,System.String,Octokit.ListArtifactsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.ActionsArtifactsClient.GetArtifact(System.String,System.String,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.ActionsArtifactsClient.DeleteArtifact(System.String,System.String,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.ActionsArtifactsClient.DownloadArtifact(System.String,System.String,System.Int64,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.ActionsArtifactsClient.ListWorkflowArtifacts(System.String,System.String,System.Int64,Octokit.ListArtifactsRequest)">
            <inheritdoc/>
        </member>
        <member name="T:Octokit.ActionsCacheClient">
            <summary>
            A client for GitHub's Actions Cache API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/cache/">Actions Cache API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ActionsCacheClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Actions Cache API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="T:Octokit.ActionsClient">
            <summary>
            A client for GitHub's Actions API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/actions/">Actions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ActionsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiate a new GitHub Actions API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="P:Octokit.ActionsClient.Artifacts">
            <summary>
            Client for the Artifacts API.
            </summary>
        </member>
        <member name="P:Octokit.ActionsClient.Cache">
            <summary>
            Client for the Cache API.
            </summary>
        </member>
        <member name="P:Octokit.ActionsClient.Oidc">
            <summary>
            Client for the OIDC API.
            </summary>
        </member>
        <member name="P:Octokit.ActionsClient.Permissions">
            <summary>
            Client for the Permissions API.
            </summary>
        </member>
        <member name="P:Octokit.ActionsClient.SelfHostedRunnerGroups">
            <summary>
            Client for the Self-hosted runner groups API.
            </summary>
        </member>
        <member name="P:Octokit.ActionsClient.SelfHostedRunners">
            <summary>
            Client for the Self-hosted runners API.
            </summary>
        </member>
        <member name="P:Octokit.ActionsClient.Workflows">
            <summary>
            Client for the Workflows API.
            </summary>
        </member>
        <member name="T:Octokit.Clients.ActionsOidcClient">
            <summary>
            A client for GitHub's Actions OIDC API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/oidc/">Actions OIDC API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Clients.ActionsOidcClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Actions OIDC API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.Clients.ActionsOidcClient.GetOrganizationOidcSubjectClaim(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.Clients.ActionsOidcClient.SetOrganizationOidcSubjectClaim(System.String,Octokit.OrganizationOidcSubjectClaimRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.Clients.ActionsOidcClient.GetRepositoryOidcSubjectClaim(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.Clients.ActionsOidcClient.SetRepositoryOidcSubjectClaim(System.String,System.String,Octokit.RepositoryOidcSubjectClaimRequest)">
            <inheritdoc/>
        </member>
        <member name="T:Octokit.ActionsPermissionsClient">
            <summary>
            A client for GitHub's Actions Permissions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/permissions/">Actions Permissions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ActionsPermissionsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Actions Permissions API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="T:Octokit.ActionsSelfHostedRunnerGroupsClient">
            <summary>
            A client for GitHub's Actions Self-hosted runner groups API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/self-hosted-runner-groups/">Actions Self-hosted runner groups API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Actions Self-hosted runner groups API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.GetRunnerGroupForEnterprise(System.String,System.Int64)">
            <summary>
            Get a self-hosted runner group for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#get-a-self-hosted-runner-group-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise name.</param>
            <param name="runnerGroupId">Unique identifier of the self-hosted runner group.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.GetRunnerGroupForOrganization(System.String,System.Int64)">
            <summary>
            Get a self-hosted runner group for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#get-a-self-hosted-runner-group-for-an-organization
            </remarks>
            <param name="org">The organization name.</param>
            <param name="runnerGroupId">Unique identifier of the self-hosted runner group.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupsForEnterprise(System.String)">
            <summary>
            List self-hosted runner groups for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runner-groups-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise name</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupsForEnterprise(System.String,Octokit.ApiOptions)">
            <summary>
            List self-hosted runner groups for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runner-groups-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise name</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupsForOrganization(System.String)">
            <summary>
            List self-hosted runners groups for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runner-groups-for-an-organization
            </remarks>
            <param name="org">The organization name</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupsForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            List self-hosted runners groups for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runner-groups-for-an-organization
            </remarks>
            <param name="org">The organization name</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnersForEnterpriseRunnerGroup(System.String,System.Int64)">
            <summary>
            List self-hosted runners in a group for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runners-in-a-group-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="runnerGroupId">The runner group ID.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnersForEnterpriseRunnerGroup(System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            List self-hosted runners in a group for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runners-in-a-group-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="runnerGroupId">The runner group ID.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnersForOrganizationRunnerGroup(System.String,System.Int64)">
            <summary>
            List self-hosted runners in a group for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runners-in-a-group-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="runnerGroupId">The runner group ID.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnersForOrganizationRunnerGroup(System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            List self-hosted runners in a group for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runners-in-a-group-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="runnerGroupId">The runner group ID.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupOrganizationsForEnterprise(System.String,System.Int64)">
            <summary>
            List organization access to a self-hosted runner group in an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-organization-access-to-a-self-hosted-runner-group-in-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise name</param>
            <param name="runnerGroupId">The runner group id</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupOrganizationsForEnterprise(System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            List organization access to a self-hosted runner group in an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-organization-access-to-a-self-hosted-runner-group-in-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise name</param>
            <param name="runnerGroupId">The runner group id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupRepositoriesForOrganization(System.String,System.Int64)">
            <summary>
            List repository access to a self-hosted runner group in an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-repository-access-to-a-self-hosted-runner-group-in-an-organization
            </remarks>
            <param name="org">The organization name</param>
            <param name="runnerGroupId">The runner group id</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupRepositoriesForOrganization(System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            List repository access to a self-hosted runner group in an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-repository-access-to-a-self-hosted-runner-group-in-an-organization
            </remarks>
            <param name="org">The organization name</param>
            <param name="runnerGroupId">The runner group id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.ActionsSelfHostedRunnersClient">
            <summary>
            A client for GitHub's Actions Self-hosted runners API.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#about-self-hosted-runners-in-github-actions">Actions Self-hosted runners API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Actions Self-hosted runners API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnersForEnterprise(System.String)">
            <summary>
            Lists all self-hosted runners for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-self-hosted-runners-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnersForEnterprise(System.String,Octokit.ApiOptions)">
            <summary>
            Lists all self-hosted runners for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-self-hosted-runners-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnersForOrganization(System.String)">
            <summary>
            Lists all self-hosted runners for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-self-hosted-runners-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnersForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Lists all self-hosted runners for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-self-hosted-runners-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnersForRepository(System.String,System.String)">
            <summary>
            Lists all self-hosted runners for a repository
            </summary>
            <remarks>
            https://docs.github.com/en/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-self-hosted-runners-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnersForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Lists all self-hosted runners for a repository
            </summary>
            <remarks>
            https://docs.github.com/en/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-self-hosted-runners-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForEnterprise(System.String)">
            <summary>
            List runner applications for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForEnterprise(System.String,Octokit.ApiOptions)">
            <summary>
            List runner applications for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForOrganization(System.String)">
            <summary>
            List runner applications for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            List runner applications for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForRepository(System.String,System.String)">
            <summary>
            List runner applications for a repository
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-a-repository
            </remarks>
            <param name="owner">The owner.</param>
            <param name="repo">The repo.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            List runner applications for a repository
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-a-repository
            </remarks>
            <param name="owner">The owner.</param>
            <param name="repo">The repo.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.DeleteEnterpriseRunner(System.String,System.Int64)">
            <summary>
            Delete a self-hosted runner from an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#delete-a-self-hosted-runner-from-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="runnerId">The runner id.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.DeleteOrganizationRunner(System.String,System.Int64)">
            <summary>
            Delete a self-hosted runner from an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#delete-a-self-hosted-runner-from-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="runnerId">The runner id.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.DeleteRepositoryRunner(System.String,System.String,System.Int64)">
            <summary>
            Delete a self-hosted runner from a repository
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#delete-a-self-hosted-runner-from-a-repository
            </remarks>
            <param name="owner">The owner.</param>
            <param name="repo">The repo.</param>
            <param name="runnerId">The runner id.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.CreateEnterpriseRegistrationToken(System.String)">
            <summary>
            Create a self-hosted runner registration token for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#create-a-self-hosted-runner-registration-token-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.CreateEnterpriseRegistrationToken(System.String,System.Threading.CancellationToken)">
            <summary>
            Create a self-hosted runner registration token for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#create-a-self-hosted-runner-registration-token-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.CreateOrganizationRegistrationToken(System.String)">
            <summary>
            Create a self-hosted runner registration token for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#create-a-self-hosted-runner-registration-token-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.CreateOrganizationRegistrationToken(System.String,System.Threading.CancellationToken)">
            <summary>
            Create a self-hosted runner registration token for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#create-a-self-hosted-runner-registration-token-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.CreateRepositoryRegistrationToken(System.String,System.String)">
            <summary>
            Create a self-hosted runner registration token for a repository
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#create-a-self-hosted-runner-registration-token-for-a-repository
            </remarks>
            <param name="owner">The owner.</param>
            <param name="repo">The repo.</param>
        </member>
        <member name="M:Octokit.ActionsSelfHostedRunnersClient.CreateRepositoryRegistrationToken(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a self-hosted runner registration token for a repository
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#create-a-self-hosted-runner-registration-token-for-a-repository
            </remarks>
            <param name="owner">The owner.</param>
            <param name="repo">The repo.</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="T:Octokit.ActionsWorkflowJobsClient">
            <summary>
            A client for GitHub's Actions Workflows jobs API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/workflow-jobs/">Actions Workflows jobs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ActionsWorkflowJobsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Actions Workflows jobs API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowJobsClient.Rerun(System.String,System.String,System.Int64)">
            <summary>
            Re-runs a specific workflow job in a repository.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#re-run-a-job-from-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="jobId">The Id of the workflow job.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowJobsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a specific job in a workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-jobs/#get-a-job-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="jobId">The unique identifier of the job.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowJobsClient.GetLogs(System.String,System.String,System.Int64)">
            <summary>
            Gets the plain text log file for a workflow job.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-jobs/#download-job-logs-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="jobId">The Id of the workflow job.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowJobsClient.List(System.String,System.String,System.Int64)">
            <summary>
            Lists jobs for a specific workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-jobs-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowJobsClient.List(System.String,System.String,System.Int64,Octokit.WorkflowRunJobsRequest)">
            <summary>
            Lists jobs for a specific workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-jobs-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="workflowRunJobsRequest">Details to filter the request, such as by when completed.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowJobsClient.List(System.String,System.String,System.Int64,Octokit.WorkflowRunJobsRequest,Octokit.ApiOptions)">
            <summary>
            Lists jobs for a specific workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-jobs-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="workflowRunJobsRequest">Details to filter the request, such as by when completed.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowJobsClient.List(System.String,System.String,System.Int64,System.Int32)">
            <summary>
            Lists jobs for a specific workflow run attempt.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-jobs-for-a-workflow-run-attempt
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="attemptNumber">The attempt number of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowJobsClient.List(System.String,System.String,System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Lists jobs for a specific workflow run attempt.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-jobs-for-a-workflow-run-attempt
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="attemptNumber">The attempt number of the workflow run.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="T:Octokit.ActionsWorkflowRunsClient">
            <summary>
            A client for GitHub's Actions Workflows runs API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/workflow-runs/">Actions Workflows runs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Actions Workflows runs API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.List(System.String,System.String)">
            <summary>
            Lists all workflow runs for a repository.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.List(System.String,System.String,Octokit.WorkflowRunsRequest)">
            <summary>
            Lists all workflow runs for a repository.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.List(System.String,System.String,Octokit.WorkflowRunsRequest,Octokit.ApiOptions)">
            <summary>
            Lists all workflow runs for a repository.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a specific workflow run in a repository. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#get-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.Delete(System.String,System.String,System.Int64)">
            <summary>
            Deletes a specific workflow run. Anyone with write access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#delete-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.GetReviewHistory(System.String,System.String,System.Int64)">
            <summary>
            Get the review history for a workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#get-the-review-history-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.Approve(System.String,System.String,System.Int64)">
            <summary>
            Approves a workflow run for a pull request from a public fork of a first time contributor.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#approve-a-workflow-run-for-a-fork-pull-request
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.GetAttempt(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            Gets a specific workflow run attempt. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#get-a-workflow-run-attempt
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="attemptNumber">The attempt number of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.GetAttemptLogs(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            Gets a byte array containing an archive of log files for a specific workflow run attempt.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#download-workflow-run-attempt-logs
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="attemptNumber">The attempt number of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.Cancel(System.String,System.String,System.Int64)">
            <summary>
            Cancels a workflow run using its Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#cancel-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.GetLogs(System.String,System.String,System.Int64)">
            <summary>
            Gets a byte array containing an archive of log files for a workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#download-workflow-run-logs
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.DeleteLogs(System.String,System.String,System.Int64)">
            <summary>
            Deletes all logs for a workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#delete-workflow-run-logs
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.ReviewPendingDeployments(System.String,System.String,System.Int64,Octokit.PendingDeploymentReview)">
            <summary>
            Approve or reject pending deployments that are waiting on approval by a required reviewer.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#review-pending-deployments-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="review">The review for the pending deployment.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.Rerun(System.String,System.String,System.Int64)">
            <summary>
            Re-runs your workflow run using its Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#re-run-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.RerunFailedJobs(System.String,System.String,System.Int64)">
            <summary>
            Re-run all of the failed jobs and their dependent jobs in a workflow run using the Id of the workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#re-run-failed-jobs-from-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.GetUsage(System.String,System.String,System.Int64)">
            <summary>
            Gets the number of billable minutes and total run time for a specific workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#get-workflow-run-usage
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.Int64)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.Int64,Octokit.WorkflowRunsRequest)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.Int64,Octokit.WorkflowRunsRequest,Octokit.ApiOptions)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.String)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The Id of the workflow.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.String,Octokit.WorkflowRunsRequest)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.String,Octokit.WorkflowRunsRequest,Octokit.ApiOptions)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="T:Octokit.ActionsWorkflowsClient">
            <summary>
            A client for GitHub's Actions Workflows API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/workflows/">Actions Workflows API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Actions Workflows API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.CreateDispatch(System.String,System.String,System.String,Octokit.CreateWorkflowDispatch)">
            <summary>
            Manually triggers a GitHub Actions workflow run in a repository by file name.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#create-a-workflow-dispatch-event
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
            <param name="createDispatch">The parameters to use to trigger the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.CreateDispatch(System.String,System.String,System.Int64,Octokit.CreateWorkflowDispatch)">
            <summary>
            Manually triggers a GitHub Actions workflow run in a repository by Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#create-a-workflow-dispatch-event
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
            <param name="createDispatch">The parameters to use to trigger the workflow run.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.Disable(System.String,System.String,System.String)">
            <summary>
            Disables a specific workflow in a repository by file name.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#disable-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.Disable(System.String,System.String,System.Int64)">
            <summary>
            Disables a specific workflow in a repository by Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#disable-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.Enable(System.String,System.String,System.String)">
            <summary>
            Enables a specific workflow in a repository by file name.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#enable-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.Enable(System.String,System.String,System.Int64)">
            <summary>
            Enables a specific workflow in a repository by Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#enable-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a specific workflow in a repository by file name. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#get-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a specific workflow in a repository by Id. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#get-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.GetUsage(System.String,System.String,System.String)">
            <summary>
            Gets useage of a specific workflow in a repository by file name. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#get-workflow-usage
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.GetUsage(System.String,System.String,System.Int64)">
            <summary>
            Gets useage of a specific workflow in a repository by Id. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#get-workflow-usage
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.List(System.String,System.String)">
            <summary>
            Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#list-repository-workflows
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
        </member>
        <member name="M:Octokit.ActionsWorkflowsClient.List(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#list-repository-workflows
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="P:Octokit.ActionsWorkflowsClient.Jobs">
            <summary>
            Client for the Workflow jobs API.
            </summary>
        </member>
        <member name="P:Octokit.ActionsWorkflowsClient.Runs">
            <summary>
            Client for the Workflow runs API.
            </summary>
        </member>
        <member name="T:Octokit.ActivitiesClient">
            <summary>
            A client for GitHub's Activity API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/">Activity API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ActivitiesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiate a new GitHub Activities API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="P:Octokit.ActivitiesClient.Events">
            <summary>
            Client for the Events API
            </summary>
        </member>
        <member name="P:Octokit.ActivitiesClient.Starring">
            <summary>
            Client for the Starring API
            </summary>
        </member>
        <member name="P:Octokit.ActivitiesClient.Watching">
            <summary>
            Client for the Watching API
            </summary>
        </member>
        <member name="P:Octokit.ActivitiesClient.Feeds">
            <summary>
            Client for the Feeds API
            </summary>
        </member>
        <member name="P:Octokit.ActivitiesClient.Notifications">
            <summary>
            Client for the Notifications API
            </summary>
        </member>
        <member name="T:Octokit.ApiClient">
            <summary>
            Base class for an API client.
            </summary>
        </member>
        <member name="M:Octokit.ApiClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new API client.
            </summary>
            <param name="apiConnection">The client's connection</param>
        </member>
        <member name="P:Octokit.ApiClient.ApiConnection">
            <summary>
            Gets the API client's connection.
            </summary>
            <value>
            The API client's connection
            </value>
        </member>
        <member name="P:Octokit.ApiClient.Connection">
            <summary>
            Returns the underlying <see cref="T:Octokit.IConnection"/> used by the <see cref="T:Octokit.IApiConnection"/>. This is useful
            for requests that need to access the HTTP response and not just the response model.
            </summary>
        </member>
        <member name="T:Octokit.ApiPagination">
            <summary>
            Used to paginate through API response results.
            </summary>
            <remarks>
            This is meant to be internal, but I factored it out so we can change our mind more easily later.
            </remarks>
        </member>
        <member name="T:Octokit.AssigneesClient">
            <summary>
            A client for GitHub's Issue Assignees API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/assignees/">Issue Assignees API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.AssigneesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Issue Assignees API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.AssigneesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.AssigneesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.AssigneesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">The options to change API's response.</param>
        </member>
        <member name="M:Octokit.AssigneesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">The options to change API's response.</param>
        </member>
        <member name="M:Octokit.AssigneesClient.CheckAssignee(System.String,System.String,System.String)">
            <summary>
            Checks to see if a user is an assignee for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="assignee">Username of the prospective assignee</param>
        </member>
        <member name="M:Octokit.AssigneesClient.AddAssignees(System.String,System.String,System.Int32,Octokit.AssigneesUpdate)">
            <summary>
            Add assignees to a specified Issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="assignees">List of names of assignees to add</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.AssigneesClient.RemoveAssignees(System.String,System.String,System.Int32,Octokit.AssigneesUpdate)">
            <summary>
            Remove assignees from a specified Issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="assignees">List of assignees to remove</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.AssigneesClient.CheckAssignee(System.Int64,System.String)">
            <summary>
            Checks to see if a user is an assignee for a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assignee">Username of the prospective assignee</param>
        </member>
        <member name="T:Octokit.AuthorizationsClient">
            <summary>
            A client for GitHub's OAuth API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/oauth/">OAuth API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.AuthorizationsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub OAuth API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.AuthorizationsClient.GetAll">
            <summary>
            Gets all <see cref="T:Octokit.Authorization"/>s for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#list-your-authorizations">API documentation</a> for more information.
            </remarks>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of <see cref="T:Octokit.Authorization"/>s for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.Authorization"/>s for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#list-your-authorizations">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of <see cref="T:Octokit.Authorization"/>s for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.Get(System.Int32)">
            <summary>
            Gets a specific <see cref="T:Octokit.Authorization"/> for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-a-single-authorization">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the <see cref="T:Octokit.Authorization"/> to get</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The specified <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.Create(Octokit.NewAuthorization)">
            <summary>
            Creates a new personal token for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization">API documentation</a> for more information.
            </remarks>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.Create(Octokit.NewAuthorization,System.String)">
            <summary>
            Creates a new personal token for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization">API documentation</a> for more information.
            </remarks>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.Create(System.String,System.String,Octokit.NewAuthorization)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application
            doesn’t already exist for the user; otherwise, it fails.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.Create(System.String,System.String,Octokit.NewAuthorization,System.String)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application
            doesn’t already exist for the user; otherwise, it fails.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.GetOrCreateApplicationAuthentication(System.String,System.String,Octokit.NewAuthorization)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application doesn’t already
            exist for the user; otherwise, returns the user’s existing authorization for that application.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.GetOrCreateApplicationAuthentication(System.String,System.String,Octokit.NewAuthorization,System.String)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application doesn’t already
            exist for the user; otherwise, returns the user’s existing authorization for that application.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.CheckApplicationAuthentication(System.String,System.String)">
            <summary>
            Checks the validity of an OAuth token without running afoul of normal rate limits for failed login attempts.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#check-an-authorization">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to check</param>
            <returns>The valid <see cref="T:Octokit.ApplicationAuthorization"/>.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.ResetApplicationAuthentication(System.String,System.String)">
            <summary>
            Resets a valid OAuth token for an OAuth application without end user involvement.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#reset-an-authorization">API documentation</a> for more information.
            </remarks>
            <param name="clientId">ClientID of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to reset</param>
            <returns>The valid <see cref="T:Octokit.ApplicationAuthorization"/> with a new OAuth token</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.RevokeApplicationAuthentication(System.String,System.String)">
            <summary>
            Revokes a single OAuth token for an OAuth application.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#revoke-an-authorization-for-an-application">API documentation for more information.</a>
            </remarks>
            <param name="clientId">ClientID of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to revoke</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.Update(System.Int32,Octokit.AuthorizationUpdate)">
            <summary>
            Updates the specified <see cref="T:Octokit.Authorization"/>.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#update-an-existing-authorization">API
            documentation</a> for more details.
            </remarks>
            <param name="id">Id of the <see cref="T:Octokit.Authorization"/> to update</param>
            <param name="authorizationUpdate">Describes the changes to make to the authorization</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The updated <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.Delete(System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.Authorization"/>.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#delete-an-authorization">API
            documentation</a> for more details.
            </remarks>
            <param name="id">The system-wide Id of the authorization to delete</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.AuthorizationsClient.Delete(System.Int32,System.String)">
            <summary>
            Deletes the specified <see cref="T:Octokit.Authorization"/>.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#delete-an-authorization">API
            documentation</a> for more details.
            </remarks>
            <param name="id">The system-wide Id of the authorization to delete</param>
            <param name="twoFactorAuthenticationCode">Two factor authorization code</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="T:Octokit.AutolinksClient">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.AutolinksClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Repository Autolinks API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.AutolinksClient.Get(System.String,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.AutolinksClient.GetAll(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.AutolinksClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.AutolinksClient.Create(System.String,System.String,Octokit.AutolinkRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.AutolinksClient.Delete(System.String,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Octokit.BlobsClient">
            <summary>
            A client for GitHub's Git Blobs API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/blobs/">Git Blobs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.BlobsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Git Blobs API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.BlobsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single Blob by SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#get-a-blob
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA of the blob</param>
        </member>
        <member name="M:Octokit.BlobsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single Blob by SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#get-a-blob
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA of the blob</param>
        </member>
        <member name="M:Octokit.BlobsClient.Create(System.String,System.String,Octokit.NewBlob)">
            <summary>
            Creates a new Blob
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#create-a-blob
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newBlob">The new Blob</param>
        </member>
        <member name="M:Octokit.BlobsClient.Create(System.Int64,Octokit.NewBlob)">
            <summary>
            Creates a new Blob
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#create-a-blob
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newBlob">The new Blob</param>
        </member>
        <member name="T:Octokit.CheckRunsClient">
            <summary>
            A client for GitHub's Check Runs API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/">Check Runs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.CheckRunsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Check Runs API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.Create(System.String,System.String,Octokit.NewCheckRun)">
            <summary>
            Creates a new check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#create-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newCheckRun">Details of the Check Run to create</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.Create(System.Int64,Octokit.NewCheckRun)">
            <summary>
            Creates a new check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#create-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newCheckRun">Details of the Check Run to create</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.Update(System.String,System.String,System.Int64,Octokit.CheckRunUpdate)">
            <summary>
            Updates a check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#update-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="checkRunUpdate">The updates to the check run</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.Update(System.Int64,System.Int64,Octokit.CheckRunUpdate)">
            <summary>
            Updates a check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#update-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="checkRunUpdate">The updates to the check run</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForReference(System.String,System.String,System.String)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForReference(System.Int64,System.String)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForReference(System.Int64,System.String,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForReference(System.Int64,System.String,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a single check run using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#get-a-single-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.Get(System.Int64,System.Int64)">
            <summary>
            Gets a single check run using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#get-a-single-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllAnnotations(System.String,System.String,System.Int64)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllAnnotations(System.Int64,System.Int64)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllAnnotations(System.String,System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.CheckRunsClient.GetAllAnnotations(System.Int64,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="T:Octokit.ChecksClient">
            <summary>
            A client for GitHub's Checks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/">Checks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ChecksClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Checks API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="P:Octokit.ChecksClient.Run">
            <summary>
            A client for GitHub's Check Runs API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/">Check Runs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.ChecksClient.Suite">
            <summary>
            A client for GitHub's Check Suites API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/">Check Suites API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.CheckSuitesClient">
            <summary>
            A client for GitHub's Check Suites API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/">Check Suites API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.CheckSuitesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Check Suites API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a single Check Suite by Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#get-a-single-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.Get(System.Int64,System.Int64)">
            <summary>
            Gets a single Check Suite by Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#get-a-single-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.GetAllForReference(System.String,System.String,System.String)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.GetAllForReference(System.Int64,System.String)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckSuiteRequest)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.GetAllForReference(System.Int64,System.String,Octokit.CheckSuiteRequest)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckSuiteRequest,Octokit.ApiOptions)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.GetAllForReference(System.Int64,System.String,Octokit.CheckSuiteRequest,Octokit.ApiOptions)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.UpdatePreferences(System.String,System.String,Octokit.CheckSuitePreferences)">
            <summary>
            Updates Check Suites preferences on a repository, such as disabling automatic creation when code is pushed
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="preferences">The check suite preferences</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.UpdatePreferences(System.Int64,Octokit.CheckSuitePreferences)">
            <summary>
            Updates Check Suites preferences on a repository, such as disabling automatic creation when code is pushed
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="preferences">The check suite preferences</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.Create(System.String,System.String,Octokit.NewCheckSuite)">
            <summary>
            Creates a new Check Suite
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#create-a-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newCheckSuite">Details of the Check Suite to create</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.Create(System.Int64,Octokit.NewCheckSuite)">
            <summary>
            Creates a new Check Suite
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#create-a-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newCheckSuite">Details of the Check Suite to create</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.Rerequest(System.String,System.String,System.Int64)">
            <summary>
            Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.CheckSuitesClient.Rerequest(System.Int64,System.Int64)">
            <summary>
            Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="T:Octokit.CodespacesClient">
            <summary>
            A client for GitHub's Codespaces API.
            Gets and creates Codespaces.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/codespaces/codespaces?apiVersion=2022-11-28">Codespaces API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.CodespacesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Codespaces API client.
            </summary>
            <param name="apiConnection"></param>
        </member>
        <member name="M:Octokit.CodespacesClient.GetAll">
            <summary>
            Returns all the codespaces for the authenticated user.
            </summary>
            <returns>A codespaces collection</returns>
        </member>
        <member name="M:Octokit.CodespacesClient.GetForRepository(System.String,System.String)">
            <summary>
            Returns all the codespaces for the specified repository.
            </summary>
            <param name="owner"></param>
            <param name="repo"></param>
            <returns>A codespaces collection</returns>
        </member>
        <member name="M:Octokit.CodespacesClient.Get(System.String)">
            <summary>
            Gets a codespace for the authenticated user.
            </summary>
            <param name="codespaceName"></param>
            <returns>A codespace</returns>
        </member>
        <member name="M:Octokit.CodespacesClient.Start(System.String)">
            <summary>
            Starts a codespace for the authenticated user.
            </summary>
            <param name="codespaceName"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.CodespacesClient.Stop(System.String)">
            <summary>
            Stops a codespace for the authenticated user.
            </summary>
            <param name="codespaceName"></param>
            <returns></returns>
        </member>
        <member name="T:Octokit.CommitCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.CommitCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.CommitCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.CommitCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Get all reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.CommitCommentReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.CommitCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Get all reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.CommitCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.CommitCommentReactionsClient.Delete(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Commit Comment
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-a-commit-comment-reaction</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="commentId">The comment id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.CommitCommentReactionsClient.Delete(System.Int64,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Commit Comment
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-a-commit-comment-reaction</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="commentId">The comment id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.CommitsClient">
            <summary>
            A client for GitHub's Git Commits API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/commits/">Git Commits API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.CommitsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Git Commits API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.CommitsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a commit for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#get-a-commit
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">Tha sha reference of the commit</param>
        </member>
        <member name="M:Octokit.CommitsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a commit for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#get-a-commit
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">Tha sha reference of the commit</param>
        </member>
        <member name="M:Octokit.CommitsClient.Create(System.String,System.String,Octokit.NewCommit)">
            <summary>
            Create a commit for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#create-a-commit
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="commit">The commit to create</param>
        </member>
        <member name="M:Octokit.CommitsClient.Create(System.Int64,Octokit.NewCommit)">
            <summary>
            Create a commit for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#create-a-commit
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="commit">The commit to create</param>
        </member>
        <member name="T:Octokit.CommitStatusClient">
            <summary>
            A client for GitHub's Git Repository Status API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/statuses/">Repository Statuses API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.CommitStatusClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new Commit Status API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.CommitStatusClient.GetAll(System.String,System.String,System.String)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.CommitStatusClient.GetAll(System.Int64,System.String)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.CommitStatusClient.GetAll(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.CommitStatusClient.GetAll(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.CommitStatusClient.GetCombined(System.String,System.String,System.String)">
            <summary>
            Retrieves a combined view of statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.CommitStatusClient.GetCombined(System.Int64,System.String)">
            <summary>
            Retrieves a combined view of statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.CommitStatusClient.Create(System.String,System.String,System.String,Octokit.NewCommitStatus)">
            <summary>
            Creates a commit status for the specified ref.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#create-a-status
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="newCommitStatus">The commit status to create</param>
        </member>
        <member name="M:Octokit.CommitStatusClient.Create(System.Int64,System.String,Octokit.NewCommitStatus)">
            <summary>
            Creates a commit status for the specified ref.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#create-a-status
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="newCommitStatus">The commit status to create</param>
        </member>
        <member name="T:Octokit.CopilotClient">
            <summary>
            A client for GitHub's Copilot for Business API.
            Allows listing, creating, and deleting Copilot licenses.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/copilot/copilot-business?apiVersion=2022-11-28">Copilot for Business API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.CopilotClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Copilot API client.
            </summary>
            <param name="apiConnection"></param>
        </member>
        <member name="M:Octokit.CopilotClient.GetSummaryForOrganization(System.String)">
            <summary>
            Returns a summary of the Copilot for Business configuration for an organization. Includes a seat 
            details summary of the current billing cycle, and the mode of seat management.
            </summary>
            <param name="organization">the organization name to retrieve billing settings for</param>
            <returns>A <see cref="T:Octokit.BillingSettings"/> instance</returns>
        </member>
        <member name="P:Octokit.CopilotClient.Licensing">
            <summary>
            Client for maintaining Copilot licenses for users in an organization.
            </summary>
        </member>
        <member name="T:Octokit.ICopilotClient">
            <summary>
            Access GitHub's Copilot for Business API.
            </summary>
        </member>
        <member name="M:Octokit.ICopilotClient.GetSummaryForOrganization(System.String)">
            <summary>
            Returns a summary of the Copilot for Business configuration for an organization. Includes a seat 
            details summary of the current billing cycle, and the mode of seat management.
            </summary>
            <param name="organization">the organization name to retrieve billing settings for</param>
            <returns>A <see cref="T:Octokit.BillingSettings"/> instance</returns>
        </member>
        <member name="P:Octokit.ICopilotClient.Licensing">
            <summary>
            For checking and managing licenses for GitHub Copilot for Business
            </summary>
        </member>
        <member name="T:Octokit.ICopilotLicenseClient">
            <summary>
            A client for managing licenses for GitHub Copilot for Business
            </summary>
        </member>
        <member name="M:Octokit.ICopilotLicenseClient.Remove(System.String,System.String)">
            <summary>
            Removes a license for a user
            </summary>
            <param name="organization">The organization name</param>
            <param name="userName">The github users profile name to remove a license from</param>
            <returns>A <see cref="T:Octokit.CopilotSeatAllocation"/> instance with results</returns>
        </member>
        <member name="M:Octokit.ICopilotLicenseClient.Remove(System.String,Octokit.UserSeatAllocation)">
            <summary>
            Removes a license for one or many users
            </summary>
            <param name="organization">The organization name</param>
            <param name="userSeatAllocation">A <see cref="T:Octokit.UserSeatAllocation"/> instance, containing the names of the user(s) to remove licenses for</param>
            <returns>A <see cref="T:Octokit.CopilotSeatAllocation"/> instance with results</returns>
        </member>
        <member name="M:Octokit.ICopilotLicenseClient.Assign(System.String,System.String)">
            <summary>
            Assigns a license to a user
            </summary>
            <param name="organization">The organization name</param>
            <param name="userName">The github users profile name to add a license to</param>
            <returns>A <see cref="T:Octokit.CopilotSeatAllocation"/> instance with results</returns>
        </member>
        <member name="M:Octokit.ICopilotLicenseClient.Assign(System.String,Octokit.UserSeatAllocation)">
            <summary>
            Assigns a license for one or many users
            </summary>
            <param name="organization">The organization name</param>
            <param name="userSeatAllocation">A <see cref="T:Octokit.UserSeatAllocation"/> instance, containing the names of the user(s) to add licenses to</param>
            <returns>A <see cref="T:Octokit.CopilotSeatAllocation"/> instance with results</returns>
        </member>
        <member name="M:Octokit.ICopilotLicenseClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all of the currently allocated licenses for an organization
            </summary>
            <param name="organization">The organization</param>
            <param name="options">The api options to use when making the API call, such as paging</param>
            <returns>A <see cref="T:Octokit.CopilotSeats"/> instance containing the currently allocated user licenses</returns>
        </member>
        <member name="T:Octokit.DeploymentEnvironmentsClient">
            <summary>
            A client for GitHub's Repository Deployment Environments API.
            Gets Deployment Environments.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/deployments/environments">Repository Deployment Environments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.DeploymentEnvironmentsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Repository Environments API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.DeploymentEnvironmentsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the environments for the specified repository. Any user with pull access
            to a repository can view environments.
            </summary>
            <remarks>
            https://docs.github.com/en/rest/deployments/environments#list-environments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.DeploymentEnvironmentsClient.GetAll(System.Int64)">
            <summary>
            Gets all the environments for the specified repository. Any user with pull access
            to a repository can view environments.
            </summary>
            <remarks>
            https://docs.github.com/en/rest/deployments/environments#list-environments
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.DeploymentEnvironmentsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the environments for the specified repository. Any user with pull access
            to a repository can view environments.
            </summary>
            <remarks>
            https://docs.github.com/en/rest/deployments/environments#list-environments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Paging options</param>
        </member>
        <member name="M:Octokit.DeploymentEnvironmentsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the environments for the specified repository. Any user with pull access
            to a repository can view environments.
            </summary>
            <remarks>
            https://docs.github.com/en/rest/deployments/environments#list-environments
            </remarks>
            <param name="repositoryId">Repository ID</param>
            <param name="options">Paging options</param>
        </member>
        <member name="T:Octokit.DeploymentsClient">
            <summary>
            A client for GitHub's Repository Deployments API.
            Gets and creates Deployments.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/deployments/">Repository Deployments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.DeploymentsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Repository Deployments API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.DeploymentsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.DeploymentsClient.GetAll(System.Int64)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.DeploymentsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.DeploymentsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.DeploymentsClient.Create(System.String,System.String,Octokit.NewDeployment)">
            <summary>
            Creates a new deployment for the specified repository.
            Users with push access can create a deployment for a given ref.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newDeployment">A <see cref="T:Octokit.NewDeployment"/> instance describing the new deployment to create</param>
        </member>
        <member name="M:Octokit.DeploymentsClient.Create(System.Int64,Octokit.NewDeployment)">
            <summary>
            Creates a new deployment for the specified repository.
            Users with push access can create a deployment for a given ref.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newDeployment">A <see cref="T:Octokit.NewDeployment"/> instance describing the new deployment to create</param>
        </member>
        <member name="P:Octokit.DeploymentsClient.Status">
            <summary>
            Client for managing deployment status.
            </summary>
        </member>
        <member name="T:Octokit.DeploymentStatusClient">
            <summary>
            A client for GitHub's Repository Deployment Statuses API.
            Gets and creates Deployment Statuses.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/deployments/">Repository Deployment Statuses API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.DeploymentStatusClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
        </member>
        <member name="M:Octokit.DeploymentStatusClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
        </member>
        <member name="M:Octokit.DeploymentStatusClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.DeploymentStatusClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.DeploymentStatusClient.Create(System.String,System.String,System.Int32,Octokit.NewDeploymentStatus)">
            <summary>
            Creates a new status for the given deployment. Users with push access can create deployment
            statuses for a given deployment.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment-status
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="newDeploymentStatus">The new deployment status to create.</param>
        </member>
        <member name="M:Octokit.DeploymentStatusClient.Create(System.Int64,System.Int32,Octokit.NewDeploymentStatus)">
            <summary>
            Creates a new status for the given deployment. Users with push access can create deployment
            statuses for a given deployment.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment-status
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="newDeploymentStatus">The new deployment status to create.</param>
        </member>
        <member name="T:Octokit.EmojisClient">
            <summary>
            A client for GitHub's Emojis APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/emojis">Emojis API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.EmojisClient.#ctor(Octokit.IApiConnection)">
            <summary>
                Initializes a new GitHub emojis API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.EmojisClient.GetAllEmojis">
            <summary>
            Gets all the emojis available to use on GitHub.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> of emoji and their URI.</returns>
        </member>
        <member name="T:Octokit.EnterpriseAdminStatsClient">
             <summary>
             A client for GitHub's Enterprise Admin Stats API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/admin_stats/">Enterprise Admin Stats API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.EnterpriseAdminStatsClient.GetStatisticsIssues">
            <summary>
            Gets GitHub Enterprise Issue statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsIssues"/> statistics.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAdminStatsClient.GetStatisticsHooks">
            <summary>
            Gets GitHub Enterprise Hook statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsHooks"/> statistics.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAdminStatsClient.GetStatisticsMilestones">
            <summary>
            Gets GitHub Enterprise Milestone statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsMilestones"/> statistics.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAdminStatsClient.GetStatisticsOrgs">
            <summary>
            Gets GitHub Enterprise Organization statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsOrgs"/> statistics.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAdminStatsClient.GetStatisticsComments">
            <summary>
            Gets GitHub Enterprise Comment statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsComments"/> statistics.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAdminStatsClient.GetStatisticsPages">
            <summary>
            Gets GitHub Enterprise Pages statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsPages"/> statistics.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAdminStatsClient.GetStatisticsUsers">
            <summary>
            Gets GitHub Enterprise User statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsUsers"/> statistics.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAdminStatsClient.GetStatisticsGists">
            <summary>
            Gets GitHub Enterprise Gist statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsGists"/> statistics.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAdminStatsClient.GetStatisticsPulls">
            <summary>
            Gets GitHub Enterprise PullRequest statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsPulls"/> statistics.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAdminStatsClient.GetStatisticsRepos">
            <summary>
            Gets GitHub Enterprise Repository statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsRepos"/> statistics.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAdminStatsClient.GetStatisticsAll">
            <summary>
            Gets GitHub Enterprise statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStats"/> collection of statistics.</returns>
        </member>
        <member name="T:Octokit.EnterpriseAuditLogClient">
             <summary>
             A client for GitHub's Enterprise Admin Stats API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/admin_stats/">Enterprise Admin Stats API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.EnterpriseAuditLogClient.GetAll(System.String)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries (must be Site Admin user).  Note: Defaults to 100 entries per page (max count).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAuditLogClient.GetAll(System.String,Octokit.Models.Request.Enterprise.AuditLogRequest)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries (must be Site Admin user). Note: Defaults to 100 entries per page (max count).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAuditLogClient.GetAll(System.String,Octokit.Models.Request.Enterprise.AuditLogApiOptions)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="auditLogApiOptions">Options for changing the API response</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAuditLogClient.GetAll(System.String,Octokit.Models.Request.Enterprise.AuditLogRequest,Octokit.Models.Request.Enterprise.AuditLogApiOptions)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="request">Used to filter and sort the list of events returned</param>
            <param name="auditLogApiOptions">Options for changing the API response</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAuditLogClient.GetAllJson(System.String)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries as raw Json (must be Site Admin user). Note: Defaults to 100 entries per page (max count).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAuditLogClient.GetAllJson(System.String,Octokit.Models.Request.Enterprise.AuditLogRequest)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries as raw Json (must be Site Admin user). Note: Defaults to 100 entries per page (max count).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="request">Used to filter and sort the list of events returned</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAuditLogClient.GetAllJson(System.String,Octokit.Models.Request.Enterprise.AuditLogApiOptions)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries as raw Json (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="auditLogApiOptions">Options for changing the API response</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.EnterpriseAuditLogClient.GetAllJson(System.String,Octokit.Models.Request.Enterprise.AuditLogRequest,Octokit.Models.Request.Enterprise.AuditLogApiOptions)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries as raw Json (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="request">Used to filter and sort the list of events returned</param>
            <param name="auditLogApiOptions">Options for changing the API response</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="T:Octokit.EnterpriseClient">
            <summary>
            A client for GitHub's Enterprise API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/enterprise/">Enterprise API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.EnterpriseClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Enterprise API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="P:Octokit.EnterpriseClient.AdminStats">
            <summary>
            A client for GitHub's Enterprise Admin Stats API
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/enterprise/admin_stats/">Enterprise Admin Stats API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.EnterpriseClient.AuditLog">
            <summary>
            A client for GitHub's Enterprise Audit Log API
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log">Enterprise Audit Log API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.EnterpriseClient.Ldap">
            <summary>
            A client for GitHub's Enterprise LDAP API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/ldap/">Enterprise LDAP API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.EnterpriseClient.License">
            <summary>
            A client for GitHub's Enterprise License API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/license/">Enterprise License API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.EnterpriseClient.ManagementConsole">
            <summary>
            A client for GitHub's Enterprise Management Console API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/management_console/">Enterprise Management Console API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.EnterpriseClient.Organization">
            <summary>
            A client for GitHub's Enterprise Organization API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/orgs/">Enterprise Organization API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.EnterpriseClient.SearchIndexing">
            <summary>
            A client for GitHub's Enterprise Search Indexing API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/search_indexing/">Enterprise Search Indexing API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.EnterpriseClient.PreReceiveEnvironment">
             <summary>
             A client for GitHub's Enterprise Pre-receive Environments API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/">Enterprise Pre-receive Environments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.EnterpriseClient.PreReceiveHook">
             <summary>
             A client for GitHub's Enterprise Pre-receive Hooks API
             </summary>
             <remarks>
             See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#pre-receive-hooks">Enterprise Pre-receive Hooks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.EnterpriseLdapClient">
             <summary>
             A client for GitHub's Enterprise LDAP API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/ldap/">Enterprise LDAP API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.EnterpriseLdapClient.UpdateUserMapping(System.String,Octokit.NewLdapMapping)">
            <summary>
            Update the LDAP mapping for a user on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#update-ldap-mapping-for-a-user
            </remarks>
            <param name="userName">The username to update LDAP mapping</param>
            <param name="newLdapMapping">The <see cref="T:Octokit.NewLdapMapping"/></param>
            <returns>The <see cref="T:Octokit.User"/> object.</returns>
        </member>
        <member name="M:Octokit.EnterpriseLdapClient.QueueSyncUserMapping(System.String)">
            <summary>
            Queue an LDAP Sync job for a user on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#sync-ldap-mapping-for-a-user
            </remarks>
            <param name="userName">The userName to sync LDAP mapping</param>
            <returns>The <see cref="T:Octokit.LdapSyncResponse"/> of the queue request.</returns>
        </member>
        <member name="M:Octokit.EnterpriseLdapClient.UpdateTeamMapping(System.Int32,Octokit.NewLdapMapping)">
            <summary>
            Update the LDAP mapping for a team on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#update-ldap-mapping-for-a-team
            </remarks>
            <param name="teamId">The teamId to update LDAP mapping</param>
            <param name="newLdapMapping">The <see cref="T:Octokit.NewLdapMapping"/></param>
            <returns>The <see cref="T:Octokit.Team"/> object.</returns>
        </member>
        <member name="M:Octokit.EnterpriseLdapClient.QueueSyncTeamMapping(System.Int32)">
            <summary>
            Queue an LDAP Sync job for a team on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#sync-ldap-mapping-for-a-team
            </remarks>
            <param name="teamId">The teamId to update LDAP mapping</param>
            <returns>The <see cref="T:Octokit.LdapSyncResponse"/> of the queue request.</returns>
        </member>
        <member name="T:Octokit.EnterpriseLicenseClient">
             <summary>
             A client for GitHub's Enterprise License API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/license/">Enterprise License API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.EnterpriseLicenseClient.Get">
            <summary>
            Gets GitHub Enterprise License Information (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/license/#get-license-information
            </remarks>
            <returns>The <see cref="T:Octokit.LicenseInfo"/> statistics.</returns>
        </member>
        <member name="T:Octokit.EnterpriseManagementConsoleClient">
             <summary>
             A client for GitHub's Enterprise Management Console API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/management_console/">Enterprise Management Console API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.EnterpriseManagementConsoleClient.GetMaintenanceMode(System.String)">
            <summary>
            Gets GitHub Enterprise Maintenance Mode Status
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/management_console/#check-maintenance-status
            </remarks>
            <returns>The <see cref="T:Octokit.MaintenanceModeResponse"/>.</returns>
        </member>
        <member name="M:Octokit.EnterpriseManagementConsoleClient.EditMaintenanceMode(Octokit.UpdateMaintenanceRequest,System.String)">
            <summary>
            Sets GitHub Enterprise Maintenance Mode
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/management_console/#check-maintenance-status
            </remarks>
            <returns>The <see cref="T:Octokit.MaintenanceModeResponse"/>.</returns>
        </member>
        <member name="T:Octokit.EnterpriseOrganizationClient">
             <summary>
             A client for GitHub's Enterprise Organization API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/orgs/">Enterprise Organization API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.EnterpriseOrganizationClient.Create(Octokit.NewOrganization)">
            <summary>
            Creates an Organization on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/orgs/#create-an-organization
            </remarks>
            <param name="newOrganization">A <see cref="T:Octokit.NewOrganization"/> instance describing the organization to be created</param>
            <returns>The <see cref="T:Octokit.Organization"/> created.</returns>
        </member>
        <member name="T:Octokit.EnterprisePreReceiveEnvironmentsClient">
             <summary>
             A client for GitHub's Enterprise Pre-receive Environments API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/">Enterprise Pre-receive Environments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveEnvironmentsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new instance of <see cref="T:Octokit.EnterprisePreReceiveEnvironmentsClient"/>.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveEnvironmentsClient.GetAll">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveEnvironment"/>s.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments">API documentation</a> for more information.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveEnvironmentsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveEnvironment"/>s.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveEnvironmentsClient.Get(System.Int64)">
            <summary>
            Gets a single <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#get-a-single-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveEnvironmentsClient.Create(Octokit.NewPreReceiveEnvironment)">
            <summary>
            Creates a new <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#create-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="newPreReceiveEnvironment">A description of the pre-receive environment to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveEnvironmentsClient.Edit(System.Int64,Octokit.UpdatePreReceiveEnvironment)">
            <summary>
            Edits an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#edit-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <param name="updatePreReceiveEnvironment">A description of the pre-receive environment to edit</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveEnvironmentsClient.Delete(System.Int64)">
            <summary>
            Deletes an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#delete-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveEnvironmentsClient.DownloadStatus(System.Int64)">
            <summary>
            Gets the download status for an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#get-a-pre-receive-environments-download-status">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveEnvironmentsClient.TriggerDownload(System.Int64)">
            <summary>
            Triggers a new download of the <see cref="T:Octokit.PreReceiveEnvironment"/>'s tarball from the environment's <see cref="P:Octokit.PreReceiveEnvironment.ImageUrl"/>.
            When the download is finished, the newly downloaded tarball will overwrite the existing environment.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#trigger-a-pre-receive-environment-download">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.EnterprisePreReceiveHooksClient">
             <summary>
             A client for GitHub's Enterprise Pre-receive Hooks API
             </summary>
             <remarks>
             See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#pre-receive-hooks">Enterprise Pre-receive Hooks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveHooksClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new instance of <see cref="T:Octokit.EnterprisePreReceiveHooksClient"/>.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveHooksClient.GetAll">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveHook"/>s.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#list-pre-receive-hooks">API documentation</a> for more information.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveHooksClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveHook"/>s.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#list-pre-receive-hooks">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveHooksClient.Get(System.Int64)">
            <summary>
            Gets a single <see cref="T:Octokit.PreReceiveHook"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#get-a-pre-receive-hook">API documentation</a> for more information.
            </remarks>
            <param name="hookId">The id of the pre-receive hook</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="hookId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveHooksClient.Create(Octokit.NewPreReceiveHook)">
            <summary>
            Creates a new <see cref="T:Octokit.PreReceiveHook"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#create-a-pre-receive-hook">API documentation</a> for more information.
            </remarks>
            <param name="newPreReceiveHook">A description of the pre-receive hook to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveHooksClient.Edit(System.Int64,Octokit.UpdatePreReceiveHook)">
            <summary>
            Edits an existing <see cref="T:Octokit.PreReceiveHook"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#update-a-pre-receive-hook">API documentation</a> for more information.
            </remarks>
            <param name="hookId">The id of the pre-receive hook</param>
            <param name="updatePreReceiveHook">A description of the pre-receive hook to edit</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="hookId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.EnterprisePreReceiveHooksClient.Delete(System.Int64)">
            <summary>
            Deletes an existing <see cref="T:Octokit.PreReceiveHook"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#delete-a-pre-receive-hook">API documentation</a> for more information.
            </remarks>
            <param name="hookId">The id of the pre-receive hook</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="hookId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.EnterpriseProbe">
            <summary>
            Service used to check if a GitHub Enterprise instance lives at a given URL.
            </summary>
        </member>
        <member name="M:Octokit.EnterpriseProbe.#ctor(Octokit.ProductHeaderValue)">
            <summary>
            Creates a new EnterpriseProbe, used to check for the existence of GitHub Enterprise Instances
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
        </member>
        <member name="M:Octokit.EnterpriseProbe.#ctor(Octokit.ProductHeaderValue,Octokit.Internal.IHttpClient)">
            <summary>
            Creates a new EnterpriseProbe, used to check for the existence of GitHub Enterprise Instances
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
            <param name="httpClient">
            The client to use for executing requests
            </param>
        </member>
        <member name="M:Octokit.EnterpriseProbe.Probe(System.Uri)">
            <summary>
            Makes a request to the specified URL and returns whether or not the probe could definitively determine that a GitHub
            Enterprise Instance exists at the specified URL.
            </summary>
            <remarks>
            The probe checks the absolute path /site/sha at the specified <paramref name="enterpriseBaseUrl" />.
            </remarks>
            <param name="enterpriseBaseUrl">The URL to test</param>
            <returns>An <see cref="T:Octokit.EnterpriseProbeResult" /> with either <see cref="F:Octokit.EnterpriseProbeResult.Ok"/>,
            <see cref="F:Octokit.EnterpriseProbeResult.NotFound"/>, or <see cref="F:Octokit.EnterpriseProbeResult.Failed"/> in the case the request failed</returns>
        </member>
        <member name="F:Octokit.EnterpriseProbeResult.Ok">
            <summary>
            Yep! It's an Enterprise server
            </summary>
        </member>
        <member name="F:Octokit.EnterpriseProbeResult.NotFound">
            <summary>
            Got a response from a server, but it wasn't an Enterprise server
            </summary>
        </member>
        <member name="F:Octokit.EnterpriseProbeResult.Failed">
            <summary>
            Request timed out or DNS failed. So it's probably the case it's not an enterprise server but
            we can't know for sure.
            </summary>
        </member>
        <member name="T:Octokit.EnterpriseSearchIndexingClient">
             <summary>
             A client for GitHub's Enterprise Search Indexing API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/search_indexing/">Enterprise Search Indexing API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.EnterpriseSearchIndexingClient.Queue(System.String)">
            <summary>
            Queue an indexing job for a user or organization account (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.EnterpriseSearchIndexingClient.Queue(System.String,System.String)">
            <summary>
            Queue an indexing job for a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.EnterpriseSearchIndexingClient.QueueAll(System.String)">
            <summary>
            Queue an indexing job for all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.EnterpriseSearchIndexingClient.QueueAllIssues(System.String,System.String)">
            <summary>
            Queue an indexing job for all the issues in a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.EnterpriseSearchIndexingClient.QueueAllIssues(System.String)">
            <summary>
            Queue an indexing job for all the issues in all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.EnterpriseSearchIndexingClient.QueueAllCode(System.String,System.String)">
            <summary>
            Queue an indexing job for all the source code in a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.EnterpriseSearchIndexingClient.QueueAllCode(System.String)">
            <summary>
            Queue an indexing job for all the source code in all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="T:Octokit.IEnterpriseAdminStatsClient">
             <summary>
             A client for GitHub's Enterprise Admin Stats API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/admin_stats/">Enterprise Admin Stats API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IEnterpriseAdminStatsClient.GetStatisticsIssues">
            <summary>
            Gets GitHub Enterprise Issue statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsIssues"/> statistics.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAdminStatsClient.GetStatisticsHooks">
            <summary>
            Gets GitHub Enterprise Hook statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsHooks"/> statistics.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAdminStatsClient.GetStatisticsMilestones">
            <summary>
            Gets GitHub Enterprise Milestone statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsMilestones"/> statistics.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAdminStatsClient.GetStatisticsOrgs">
            <summary>
            Gets GitHub Enterprise Organization statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsOrgs"/> statistics.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAdminStatsClient.GetStatisticsComments">
            <summary>
            Gets GitHub Enterprise Comment statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsComments"/> statistics.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAdminStatsClient.GetStatisticsPages">
            <summary>
            Gets GitHub Enterprise Pages statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsPages"/> statistics.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAdminStatsClient.GetStatisticsUsers">
            <summary>
            Gets GitHub Enterprise User statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsUsers"/> statistics.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAdminStatsClient.GetStatisticsGists">
            <summary>
            Gets GitHub Enterprise Gist statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsGists"/> statistics.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAdminStatsClient.GetStatisticsPulls">
            <summary>
            Gets GitHub Enterprise PullRequest statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsPulls"/> statistics.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAdminStatsClient.GetStatisticsRepos">
            <summary>
            Gets GitHub Enterprise Repository statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsRepos"/> statistics.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAdminStatsClient.GetStatisticsAll">
            <summary>
            Gets GitHub Enterprise statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStats"/> collection of statistics.</returns>
        </member>
        <member name="T:Octokit.IEnterpriseAuditLogClient">
             <summary>
             A client for GitHub's Enterprise Audit Log API
             </summary>
             <remarks>
             See the <a href="https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log">Enterprise Audit Log API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IEnterpriseAuditLogClient.GetAll(System.String)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAuditLogClient.GetAll(System.String,Octokit.Models.Request.Enterprise.AuditLogRequest)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="request">Used to filter and sort the list of events returned</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAuditLogClient.GetAll(System.String,Octokit.Models.Request.Enterprise.AuditLogApiOptions)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="auditLogApiOptions">Options for changing the API response</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAuditLogClient.GetAll(System.String,Octokit.Models.Request.Enterprise.AuditLogRequest,Octokit.Models.Request.Enterprise.AuditLogApiOptions)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="request">Used to filter and sort the list of events returned</param>
            <param name="auditLogApiOptions">Options for changing the API response</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAuditLogClient.GetAllJson(System.String)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries as raw Json (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAuditLogClient.GetAllJson(System.String,Octokit.Models.Request.Enterprise.AuditLogRequest)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries as raw Json (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="request">Used to filter and sort the list of events returned</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAuditLogClient.GetAllJson(System.String,Octokit.Models.Request.Enterprise.AuditLogApiOptions)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries as raw Json (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="auditLogApiOptions">Options for changing the API response</param>
            <returns>The <see cref="T:Octokit.AuditLogEvent"/> list.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseAuditLogClient.GetAllJson(System.String,Octokit.Models.Request.Enterprise.AuditLogRequest,Octokit.Models.Request.Enterprise.AuditLogApiOptions)">
            <summary>
            Gets GitHub Enterprise Audit Log Entries as raw Json (must be Site Admin user).
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log/#get-the-audit-log-for-an-enterprise
            </remarks>
            <param name="enterprise">Name of enterprise</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="auditLogApiOptions">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.IEnterpriseClient">
            <summary>
            A client for GitHub's Enterprise API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/enterprise/">Enterprise API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IEnterpriseClient.AdminStats">
            <summary>
            A client for GitHub's Enterprise Admin Stats API
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/enterprise/admin_stats/">Enterprise Admin Stats API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IEnterpriseClient.AuditLog">
            <summary>
            A client for GitHub's Enterprise Audit Log API
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log">Enterprise Audit Log API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IEnterpriseClient.Ldap">
            <summary>
            A client for GitHub's Enterprise LDAP API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/ldap/">Enterprise LDAP API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IEnterpriseClient.License">
            <summary>
            A client for GitHub's Enterprise License API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/license/">Enterprise License API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IEnterpriseClient.ManagementConsole">
            <summary>
            A client for GitHub's Enterprise Management Console API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/management_console/">Enterprise Management Console API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IEnterpriseClient.Organization">
            <summary>
            A client for GitHub's Enterprise Organization API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/orgs/">Enterprise Organization API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IEnterpriseClient.SearchIndexing">
            <summary>
            A client for GitHub's Enterprise Search Indexing API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/search_indexing/">Enterprise Search Indexing API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IEnterpriseClient.PreReceiveEnvironment">
             <summary>
             A client for GitHub's Enterprise Pre-receive Environments API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/">Enterprise Pre-receive Environments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IEnterpriseClient.PreReceiveHook">
             <summary>
             A client for GitHub's Enterprise Pre-receive Hooks API
             </summary>
             <remarks>
             See the <a href="https://docs.github.com/enterprise-server@3.3/rest/reference/enterprise-admin#pre-receive-hooks">Enterprise Pre-receive Hooks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.IEnterpriseLdapClient">
             <summary>
             A client for GitHub's Enterprise LDAP API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/ldap/">Enterprise LDAP API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IEnterpriseLdapClient.UpdateUserMapping(System.String,Octokit.NewLdapMapping)">
            <summary>
            Update the LDAP mapping for a user on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#update-ldap-mapping-for-a-user
            </remarks>
            <param name="userName">The username to update LDAP mapping</param>
            <param name="newLdapMapping">The <see cref="T:Octokit.NewLdapMapping"/></param>
            <returns>The <see cref="T:Octokit.User"/> object.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseLdapClient.QueueSyncUserMapping(System.String)">
            <summary>
            Queue an LDAP Sync job for a user on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#sync-ldap-mapping-for-a-user
            </remarks>
            <param name="userName">The username to sync LDAP mapping</param>
            <returns>The <see cref="T:Octokit.LdapSyncResponse"/> of the queue request.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseLdapClient.UpdateTeamMapping(System.Int32,Octokit.NewLdapMapping)">
            <summary>
            Update the LDAP mapping for a team on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#update-ldap-mapping-for-a-team
            </remarks>
            <param name="teamId">The teamId to update LDAP mapping</param>
            <param name="newLdapMapping">The <see cref="T:Octokit.NewLdapMapping"/></param>
            <returns>The <see cref="T:Octokit.Team"/> object.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseLdapClient.QueueSyncTeamMapping(System.Int32)">
            <summary>
            Queue an LDAP Sync job for a team on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#sync-ldap-mapping-for-a-team
            </remarks>
            <param name="teamId">The teamId to update LDAP mapping</param>
            <returns>The <see cref="T:Octokit.LdapSyncResponse"/> of the queue request.</returns>
        </member>
        <member name="T:Octokit.IEnterpriseLicenseClient">
             <summary>
             A client for GitHub's Enterprise License API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/license/">Enterprise License API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IEnterpriseLicenseClient.Get">
            <summary>
            Gets GitHub Enterprise License Information (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/license/#get-license-information
            </remarks>
            <returns>The <see cref="T:Octokit.LicenseInfo"/> statistics.</returns>
        </member>
        <member name="T:Octokit.IEnterpriseManagementConsoleClient">
             <summary>
             A client for GitHub's Enterprise Management Console API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/management_console/">Enterprise Management Console API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IEnterpriseManagementConsoleClient.GetMaintenanceMode(System.String)">
            <summary>
            Gets GitHub Enterprise Maintenance Mode Status
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/management_console/#check-maintenance-status
            </remarks>
            <returns>The <see cref="T:Octokit.MaintenanceModeResponse"/>.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseManagementConsoleClient.EditMaintenanceMode(Octokit.UpdateMaintenanceRequest,System.String)">
            <summary>
            Sets GitHub Enterprise Maintenance Mode
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/management_console/#check-maintenance-status
            </remarks>
            <returns>The <see cref="T:Octokit.MaintenanceModeResponse"/>.</returns>
        </member>
        <member name="T:Octokit.IEnterpriseOrganizationClient">
             <summary>
             A client for GitHub's Enterprise Organization API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/orgs/">Enterprise Organization API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IEnterpriseOrganizationClient.Create(Octokit.NewOrganization)">
            <summary>
            Creates an Organization on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/orgs/#create-an-organization
            </remarks>
            <param name="newOrganization">A <see cref="T:Octokit.NewOrganization"/> instance describing the organization to be created</param>
            <returns>The <see cref="T:Octokit.Organization"/> created.</returns>
        </member>
        <member name="T:Octokit.IEnterprisePreReceiveEnvironmentsClient">
             <summary>
             A client for GitHub's Enterprise Pre-receive Environments API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/">Enterprise Pre-receive Environments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveEnvironmentsClient.GetAll">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveEnvironment"/>s.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments">API documentation</a> for more information.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveEnvironmentsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveEnvironment"/>s.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveEnvironmentsClient.Get(System.Int64)">
            <summary>
            Gets a single <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#get-a-single-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveEnvironmentsClient.Create(Octokit.NewPreReceiveEnvironment)">
            <summary>
            Creates a new <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#create-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="newPreReceiveEnvironment">A description of the pre-receive environment to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveEnvironmentsClient.Edit(System.Int64,Octokit.UpdatePreReceiveEnvironment)">
            <summary>
            Edits an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#edit-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <param name="updatePreReceiveEnvironment">A description of the pre-receive environment to edit</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveEnvironmentsClient.Delete(System.Int64)">
            <summary>
            Deletes an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#delete-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveEnvironmentsClient.DownloadStatus(System.Int64)">
            <summary>
            Gets the download status for an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#get-a-pre-receive-environments-download-status">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveEnvironmentsClient.TriggerDownload(System.Int64)">
            <summary>
            Triggers a new download of the <see cref="T:Octokit.PreReceiveEnvironment"/>'s tarball from the environment's <see cref="P:Octokit.PreReceiveEnvironment.ImageUrl"/>.
            When the download is finished, the newly downloaded tarball will overwrite the existing environment.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#trigger-a-pre-receive-environment-download">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.IEnterprisePreReceiveHooksClient">
             <summary>
             A client for GitHub's Enterprise Pre-receive Hooks API
             </summary>
             <remarks>
             See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#pre-receive-hooks">Enterprise Pre-receive Hooks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveHooksClient.GetAll">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveHook"/>s.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#list-pre-receive-hooks">API documentation</a> for more information.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveHooksClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveHook"/>s.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#list-pre-receive-hooks">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveHooksClient.Get(System.Int64)">
            <summary>
            Gets a single <see cref="T:Octokit.PreReceiveHook"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#get-a-pre-receive-hook">API documentation</a> for more information.
            </remarks>
            <param name="hookId">The id of the pre-receive hook</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="hookId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveHooksClient.Create(Octokit.NewPreReceiveHook)">
            <summary>
            Creates a new <see cref="T:Octokit.PreReceiveHook"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#create-a-pre-receive-hook">API documentation</a> for more information.
            </remarks>
            <param name="newPreReceiveHook">A description of the pre-receive hook to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveHooksClient.Edit(System.Int64,Octokit.UpdatePreReceiveHook)">
            <summary>
            Edits an existing <see cref="T:Octokit.PreReceiveHook"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#update-a-pre-receive-hook">API documentation</a> for more information.
            </remarks>
            <param name="hookId">The id of the pre-receive hook</param>
            <param name="updatePreReceiveHook">A description of the pre-receive hook to edit</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="hookId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IEnterprisePreReceiveHooksClient.Delete(System.Int64)">
            <summary>
            Deletes an existing <see cref="T:Octokit.PreReceiveHook"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/enterprise-server/rest/reference/enterprise-admin#delete-a-pre-receive-hook">API documentation</a> for more information.
            </remarks>
            <param name="hookId">The id of the pre-receive hook</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="hookId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.IEnterpriseProbe">
            <summary>
            Service used to check if a GitHub Enterprise instance lives at a given URL.
            </summary>
        </member>
        <member name="M:Octokit.IEnterpriseProbe.Probe(System.Uri)">
            <summary>
            Makes a request to the specified URL and returns whether or not the probe could definitively determine that a GitHub
            Enterprise Instance exists at the specified URL.
            </summary>
            <remarks>
            The probe checks the absolute path /site/sha at the specified <paramref name="enterpriseBaseUrl" />.
            </remarks>
            <param name="enterpriseBaseUrl">The URL to test</param>
            <returns>An <see cref="T:Octokit.EnterpriseProbeResult" /> with either <see cref="F:Octokit.EnterpriseProbeResult.Ok"/>,
            <see cref="F:Octokit.EnterpriseProbeResult.NotFound"/>, or <see cref="F:Octokit.EnterpriseProbeResult.Failed"/> in the case the request failed</returns>
        </member>
        <member name="T:Octokit.IEnterpriseSearchIndexingClient">
             <summary>
             A client for GitHub's Enterprise Search Indexing API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/search_indexing/">Enterprise Search Indexing API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IEnterpriseSearchIndexingClient.Queue(System.String)">
            <summary>
            Queue an indexing job for a user or organization account (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseSearchIndexingClient.Queue(System.String,System.String)">
            <summary>
            Queue an indexing job for a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseSearchIndexingClient.QueueAll(System.String)">
            <summary>
            Queue an indexing job for all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseSearchIndexingClient.QueueAllIssues(System.String,System.String)">
            <summary>
            Queue an indexing job for all the issues in a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseSearchIndexingClient.QueueAllIssues(System.String)">
            <summary>
            Queue an indexing job for all the issues in all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseSearchIndexingClient.QueueAllCode(System.String,System.String)">
            <summary>
            Queue an indexing job for all the source code in a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.IEnterpriseSearchIndexingClient.QueueAllCode(System.String)">
            <summary>
            Queue an indexing job for all the source code in all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="T:Octokit.EventsClient">
            <summary>
            A client for GitHub's Activity Events API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/events/">Activity Events API documentation</a> for more information
            </remarks>
        </member>
        <member name="M:Octokit.EventsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Issue Events API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAll">
            <summary>
            Gets all the public events
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events
            </remarks>
        </member>
        <member name="M:Octokit.EventsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all the public events
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events
            </remarks>
            <param name="options">Options for changing the API response</param>
            <returns>All the public <see cref="T:Octokit.Activity"/>s for the particular user.</returns>
        </member>
        <member name="M:Octokit.EventsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            https://developer.github.com/v3/activity/events/#list-repository-events
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            https://developer.github.com/v3/activity/events/#list-repository-events
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllIssuesForRepository(System.String,System.String)">
            <summary>
            Gets all the event issues for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllIssuesForRepository(System.Int64)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllIssuesForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the event issues for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllIssuesForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllForRepositoryNetwork(System.String,System.String)">
            <summary>
            Gets all the events for a given repository network
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllForRepositoryNetwork(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository network
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllForOrganization(System.String)">
            <summary>
            Gets all the events for a given organization
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-an-organization
            </remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given organization
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-an-organization
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllUserReceived(System.String)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllUserReceived(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllUserReceivedPublic(System.String)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllUserReceivedPublic(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllUserPerformed(System.String)">
            <summary>
            Gets all the events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllUserPerformed(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllUserPerformedPublic(System.String)">
            <summary>
            Gets all the public events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllUserPerformedPublic(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the public events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllForAnOrganization(System.String,System.String)">
            <summary>
            Gets all the events that are associated with an organization.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-for-an-organization
            </remarks>
            <param name="user">The login of the user</param>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.EventsClient.GetAllForAnOrganization(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that are associated with an organization.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-for-an-organization
            </remarks>
            <param name="user">The login of the user</param>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.FeedsClient">
            <summary>
            A client for GitHub's Feeds API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/feeds/">Feeds API documentation</a> for more information
            </remarks>
        </member>
        <member name="M:Octokit.FeedsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Feeds API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.FeedsClient.GetFeeds">
            <summary>
            Gets all the feeds available to the authenticating user
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/feeds/#list-feeds
            </remarks>
            <returns>All the public <see cref="T:Octokit.Feed"/>s for the particular user.</returns>
        </member>
        <member name="T:Octokit.FollowersClient">
             <summary>
             A client for GitHub's User Followers API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/followers/">Followers API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.FollowersClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub User Followers API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.FollowersClient.GetAllForCurrent">
            <summary>
            List the authenticated user’s followers
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that follow the authenticated user.</returns>
        </member>
        <member name="M:Octokit.FollowersClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s followers
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that follow the authenticated user.</returns>
        </member>
        <member name="M:Octokit.FollowersClient.GetAll(System.String)">
            <summary>
            List a user’s followers
            </summary>
            <param name="login">The login name for the user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that follow the passed user.</returns>
        </member>
        <member name="M:Octokit.FollowersClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            List a user’s followers
            </summary>
            <param name="login">The login name for the user</param>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that follow the passed user.</returns>
        </member>
        <member name="M:Octokit.FollowersClient.GetAllFollowingForCurrent">
            <summary>
            List who the authenticated user is following
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that the authenticated user follows.</returns>
        </member>
        <member name="M:Octokit.FollowersClient.GetAllFollowingForCurrent(Octokit.ApiOptions)">
            <summary>
            List who the authenticated user is following
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that the authenticated user follows.</returns>
        </member>
        <member name="M:Octokit.FollowersClient.GetAllFollowing(System.String)">
            <summary>
            List who a user is following
            </summary>
            <param name="login">The login name of the user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that the passed user follows.</returns>
        </member>
        <member name="M:Octokit.FollowersClient.GetAllFollowing(System.String,Octokit.ApiOptions)">
            <summary>
            List who a user is following
            </summary>
            <param name="login">The login name of the user</param>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that the passed user follows.</returns>
        </member>
        <member name="M:Octokit.FollowersClient.IsFollowingForCurrent(System.String)">
            <summary>
            Check if the authenticated user follows another user
            </summary>
            <param name="following">The login name of the other user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#check-if-you-are-following-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.FollowersClient.IsFollowing(System.String,System.String)">
            <summary>
            Check if one user follows another user
            </summary>
            <param name="login">The login name of the user</param>
            <param name="following">The login name of the other user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#check-if-one-user-follows-another">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.FollowersClient.Follow(System.String)">
            <summary>
            Follow a user
            </summary>
            <param name="login">The login name of the user to follow</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#follow-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.FollowersClient.Unfollow(System.String)">
            <summary>
            Unfollow a user
            </summary>
            <param name="login">The login name of the user to unfollow</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#unfollow-a-user">API documentation</a> for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="T:Octokit.GistCommentsClient">
            <summary>
            A client for GitHub's Gist Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/gists/comments/">Gist Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.GistCommentsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Gist Comments API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.GistCommentsClient.Get(System.String,System.Int32)">
            <summary>
            Gets a single comment by gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#get-a-single-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <returns>Task{GistComment}.</returns>
        </member>
        <member name="M:Octokit.GistCommentsClient.GetAllForGist(System.String)">
            <summary>
            Gets all comments for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#list-comments-on-a-gist</remarks>
            <param name="gistId">The id of the gist</param>
            <returns>Task{IReadOnlyList{GistComment}}.</returns>
        </member>
        <member name="M:Octokit.GistCommentsClient.GetAllForGist(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all comments for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#list-comments-on-a-gist</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
            <returns>Task{IReadOnlyList{GistComment}}.</returns>
        </member>
        <member name="M:Octokit.GistCommentsClient.Create(System.String,System.String)">
            <summary>
            Creates a comment for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#create-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="comment">The body of the comment</param>
            <returns>Task{GistComment}.</returns>
        </member>
        <member name="M:Octokit.GistCommentsClient.Update(System.String,System.Int32,System.String)">
            <summary>
            Updates the comment with the specified gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#edit-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <param name="comment">The updated body of the comment</param>
            <returns>Task{GistComment}.</returns>
        </member>
        <member name="M:Octokit.GistCommentsClient.Delete(System.String,System.Int32)">
            <summary>
            Deletes the comment with the specified gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#delete-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Octokit.GistsClient">
            <summary>
            A client for GitHub's Gists API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/gists/">Gists API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.GistsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Gists API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.GistsClient.Get(System.String)">
            <summary>
            Gets a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#get-a-single-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.GistsClient.Create(Octokit.NewGist)">
            <summary>
            Creates a new gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#create-a-gist
            </remarks>
            <param name="newGist">The new gist to create</param>
        </member>
        <member name="M:Octokit.GistsClient.Fork(System.String)">
            <summary>
            Creates a fork of a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#fork-a-gist
            </remarks>
            <param name="id">The id of the gist to fork</param>
        </member>
        <member name="M:Octokit.GistsClient.Delete(System.String)">
            <summary>
            Deletes a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#delete-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAll">
            <summary>
            List the authenticated user’s gists or if called anonymously,
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.GistsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s gists or if called anonymously,
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAll(System.DateTimeOffset)">
            <summary>
            List the authenticated user’s gists or if called anonymously,
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAll(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s gists or if called anonymously,
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllPublic">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.GistsClient.GetAllPublic(Octokit.ApiOptions)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllPublic(System.DateTimeOffset)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllPublic(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllStarred">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.GistsClient.GetAllStarred(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllStarred(System.DateTimeOffset)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllStarred(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllForUser(System.String)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllForUser(System.String,System.DateTimeOffset)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllForUser(System.String,System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllCommits(System.String)">
            <summary>
            List gist commits
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-commits
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllCommits(System.String,Octokit.ApiOptions)">
            <summary>
            List gist commits
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-commits
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllForks(System.String)">
            <summary>
            List gist forks
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-forks
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.GistsClient.GetAllForks(System.String,Octokit.ApiOptions)">
            <summary>
            List gist forks
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-forks
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.GistsClient.Edit(System.String,Octokit.GistUpdate)">
            <summary>
            Edits a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#delete-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="gistUpdate">The update to the gist</param>
        </member>
        <member name="M:Octokit.GistsClient.Star(System.String)">
            <summary>
            Stars a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#star-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.GistsClient.Unstar(System.String)">
            <summary>
            Unstars a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#unstar-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.GistsClient.IsStarred(System.String)">
            <summary>
            Checks if the gist is starred
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#check-if-a-gist-is-starred
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="T:Octokit.GitDatabaseClient">
            <summary>
            A client for GitHub's Git Database API. Gives you access to read and write raw Git objects and to list and update your references.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/">Git API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.GitDatabaseClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Git API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="T:Octokit.GitHubAppInstallationsClient">
            <summary>
            A client for GitHub Applications Installations API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/apps/installations/">GitHub Apps Installations API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.GitHubAppInstallationsClient.GetAllRepositoriesForCurrent">
            <summary>
            List repositories of the authenticated GitHub App Installation (requires GitHubApp Installation-Token auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories</remarks>
        </member>
        <member name="M:Octokit.GitHubAppInstallationsClient.GetAllRepositoriesForCurrent(Octokit.ApiOptions)">
            <summary>
            List repositories of the authenticated GitHub App Installation (requires GitHubApp Installation-Token auth).
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories</remarks>
        </member>
        <member name="M:Octokit.GitHubAppInstallationsClient.GetAllRepositoriesForCurrentUser(System.Int64)">
            <summary>
            List repositories accessible to the user for an installation (requires GitHubApp User-To-Server Auth).
            </summary>
            <param name="installationId">The Id of the installation</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation</remarks>
        </member>
        <member name="M:Octokit.GitHubAppInstallationsClient.GetAllRepositoriesForCurrentUser(System.Int64,Octokit.ApiOptions)">
            <summary>
            List repositories accessible to the user for an installation (requires GitHubApp User-To-Server Auth).
            </summary>
            <param name="installationId">The Id of the installation</param>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation</remarks>
        </member>
        <member name="T:Octokit.GitHubAppsClient">
            <summary>
            A client for GitHub Applications API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/apps/">GitHub Apps API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.GitHubAppsClient.Installation">
            <summary>
            Access GitHub's Apps Installations API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/apps/installations/
            </remarks>
        </member>
        <member name="M:Octokit.GitHubAppsClient.Get(System.String)">
            <summary>
            Get a single GitHub App (if private, requires Personal Access Token or GitHubApp auth)
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-github-app</remarks>
            <param name="slug">The URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App.</param>
        </member>
        <member name="M:Octokit.GitHubAppsClient.GetCurrent">
            <summary>
            Returns the GitHub App associated with the authentication credentials used (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-the-authenticated-github-app</remarks>
        </member>
        <member name="M:Octokit.GitHubAppsClient.GetAllInstallationsForCurrent">
            <summary>
            List installations of the authenticated GitHub App (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-installations</remarks>
        </member>
        <member name="M:Octokit.GitHubAppsClient.GetAllInstallationsForCurrent(Octokit.ApiOptions)">
            <summary>
            List installations of the authenticated GitHub App (requires GitHubApp auth).
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/#find-installations</remarks>
        </member>
        <member name="M:Octokit.GitHubAppsClient.GetInstallation(System.Int64)">
            <summary>
            Get a single GitHub App Installation (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-installation</remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.GitHubAppsClient.GetInstallationForCurrent(System.Int64)">
            <summary>
            Get a single GitHub App Installation (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-installation</remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.GitHubAppsClient.GetAllInstallationsForCurrentUser">
            <summary>
            List installations for the currently authenticated user (requires GitHubApp User-To-Server Auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#list-installations-for-user</remarks>
        </member>
        <member name="M:Octokit.GitHubAppsClient.GetAllInstallationsForCurrentUser(Octokit.ApiOptions)">
            <summary>
            List installations for the currently authenticated user (requires GitHubApp User-To-Server Auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#list-installations-for-user</remarks>
        </member>
        <member name="M:Octokit.GitHubAppsClient.CreateInstallationToken(System.Int64)">
            <summary>
            Create a time bound access token for a GitHubApp Installation that can be used to access other API endpoints (requires GitHubApp auth).
            </summary>
            <remarks>
            https://developer.github.com/v3/apps/#create-a-new-installation-token
            https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/#authenticating-as-an-installation
            https://developer.github.com/v3/apps/available-endpoints/
            </remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.GitHubAppsClient.GetOrganizationInstallationForCurrent(System.String)">
            <summary>
            Enables an authenticated GitHub App to find the organization's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-organization-installation</remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.GitHubAppsClient.GetRepositoryInstallationForCurrent(System.String,System.String)">
            <summary>
            Enables an authenticated GitHub App to find the repository's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-repository-installation</remarks>
            <param name="owner">The owner of the repo</param>
            <param name="repo">The name of the repo</param>
        </member>
        <member name="M:Octokit.GitHubAppsClient.GetRepositoryInstallationForCurrent(System.Int64)">
            <summary>
            Enables an authenticated GitHub App to find the repository's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-repository-installation</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.GitHubAppsClient.GetUserInstallationForCurrent(System.String)">
            <summary>
            Enables an authenticated GitHub App to find the users's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-user-installation</remarks>
            <param name="user">The name of the user</param>
        </member>
        <member name="T:Octokit.GitIgnoreClient">
            <summary>
            A client for GitHub's gitignore APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/gitignore">GitIgnore API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.GitIgnoreClient.#ctor(Octokit.IApiConnection)">
            <summary>
                Initializes a new GitHub gitignore API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.GitIgnoreClient.GetAllGitIgnoreTemplates">
            <summary>
            List all templates available to pass as an option when creating a repository.
            </summary>
            <returns>A list of template names</returns>
        </member>
        <member name="M:Octokit.GitIgnoreClient.GetGitIgnoreTemplate(System.String)">
            <summary>
            Retrieves the source for a single GitIgnore template
            </summary>
            <param name="templateName"></param>
            <returns>A template and its source</returns>
        </member>
        <member name="T:Octokit.IActionsArtifactsClient">
            <summary>
            A client for GitHub's Actions Artifacts API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/artifacts/">Actions Artifacts API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IActionsArtifactsClient.ListArtifacts(System.String,System.String,Octokit.ListArtifactsRequest)">
            <summary>
            Lists artifacts for a repository
            </summary>
            <param name="owner"></param>
            <param name="repository"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IActionsArtifactsClient.GetArtifact(System.String,System.String,System.Int64)">
            <summary>
            Gets the specified artifact
            </summary>
            <param name="owner"></param>
            <param name="repository"></param>
            <param name="artifactId"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IActionsArtifactsClient.DeleteArtifact(System.String,System.String,System.Int64)">
            <summary>
            Deletes the specified artifact
            </summary>
            <param name="owner"></param>
            <param name="repository"></param>
            <param name="artifactId"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IActionsArtifactsClient.DownloadArtifact(System.String,System.String,System.Int64,System.String)">
            <summary>
            Downloads the specified artifact's contents
            </summary>
            <param name="owner"></param>
            <param name="repository"></param>
            <param name="artifactId"></param>
            <param name="archiveFormat"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IActionsArtifactsClient.ListWorkflowArtifacts(System.String,System.String,System.Int64,Octokit.ListArtifactsRequest)">
            <summary>
            Lists the artifacts for a specific workflow run
            </summary>
            <param name="owner"></param>
            <param name="repository"></param>
            <param name="runId"></param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IActionsCacheClient">
            <summary>
            A client for GitHub's Actions Cache API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/cache/">Actions Cache API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.IActionsClient">
            <summary>
            A client for GitHub's Actions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/">Actions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IActionsClient.Artifacts">
            <summary>
            Client for the Artifacts API.
            </summary>
        </member>
        <member name="P:Octokit.IActionsClient.Cache">
            <summary>
            Client for the Cache API.
            </summary>
        </member>
        <member name="P:Octokit.IActionsClient.Oidc">
            <summary>
            Client for the OIDC API.
            </summary>
        </member>
        <member name="P:Octokit.IActionsClient.Permissions">
            <summary>
            Client for the Permissions API.
            </summary>
        </member>
        <member name="P:Octokit.IActionsClient.SelfHostedRunnerGroups">
            <summary>
            Client for the Self-hosted runner groups API.
            </summary>
        </member>
        <member name="P:Octokit.IActionsClient.SelfHostedRunners">
            <summary>
            Client for the Self-hosted runners API.
            </summary>
        </member>
        <member name="P:Octokit.IActionsClient.Workflows">
            <summary>
            Client for the Workflows API.
            </summary>
        </member>
        <member name="T:Octokit.IActionsOidcClient">
            <summary>
            A client for GitHub's Actions OIDC API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/oidc/">Actions OIDC API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IActionsOidcClient.GetOrganizationOidcSubjectClaim(System.String)">
            <summary>
            Get the customization template for an OIDC subject claim for an organization.
            </summary>
            <remarks>
            https://docs.github.com/en/rest/actions/oidc?apiVersion=2022-11-28#get-the-customization-template-for-an-oidc-subject-claim-for-an-organization
            </remarks>
            <param name="organization">The organization name.</param>
        </member>
        <member name="M:Octokit.IActionsOidcClient.SetOrganizationOidcSubjectClaim(System.String,Octokit.OrganizationOidcSubjectClaimRequest)">
            <summary>
            Set the customization template for an OIDC subject claim for an organization.
            </summary>
            <remarks>
            https://docs.github.com/en/rest/actions/oidc?apiVersion=2022-11-28#set-the-customization-template-for-an-oidc-subject-claim-for-an-organization
            </remarks>
            <param name="organization">The organization name.</param>
            <param name="oidcSubjectClaim">The OIDC subject claim to set for the organization.</param>
        </member>
        <member name="M:Octokit.IActionsOidcClient.GetRepositoryOidcSubjectClaim(System.String,System.String)">
            <summary>
            Get the customization template for an OIDC subject claim for a repository.
            </summary>
            <remarks>
            https://docs.github.com/en/rest/actions/oidc?apiVersion=2022-11-28#get-the-customization-template-for-an-oidc-subject-claim-for-a-repository
            </remarks>
            <param name="owner">The account owner of the repository.</param>
            <param name="repository">The name of the repository.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IActionsOidcClient.SetRepositoryOidcSubjectClaim(System.String,System.String,Octokit.RepositoryOidcSubjectClaimRequest)">
            <summary>
            
            </summary>
            <remarks>
            https://docs.github.com/en/rest/actions/oidc?apiVersion=2022-11-28#set-the-customization-template-for-an-oidc-subject-claim-for-a-repository
            </remarks>
            <param name="owner">The account owner of the repository.</param>
            <param name="repository">The name of the repository.</param>
            <param name="oidcSubjectClaim">The OIDC subject claim to set for the repository.</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IActionsPermissionsClient">
            <summary>
            A client for GitHub's Actions Permissions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/permissions/">Actions Permissions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.IActionsSelfHostedRunnerGroupsClient">
            <summary>
            A client for GitHub's Actions Self-hosted runner groups API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/self-hosted-runner-groups/">Actions Self-hosted runner groups API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.GetRunnerGroupForEnterprise(System.String,System.Int64)">
            <summary>
            Get a self-hosted runner group for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#get-a-self-hosted-runner-group-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise name.</param>
            <param name="runnerGroupId">Unique identifier of the self-hosted runner group.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.GetRunnerGroupForOrganization(System.String,System.Int64)">
            <summary>
            Get a self-hosted runner group for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#get-a-self-hosted-runner-group-for-an-organization
            </remarks>
            <param name="org">The organization name.</param>
            <param name="runnerGroupId">Unique identifier of the self-hosted runner group.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupsForEnterprise(System.String)">
            <summary>
            List self-hosted runner groups for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runner-groups-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise name</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupsForEnterprise(System.String,Octokit.ApiOptions)">
            <summary>
            List self-hosted runner groups for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runner-groups-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise name</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupsForOrganization(System.String)">
            <summary>
            List self-hosted runners groups for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runner-groups-for-an-organization
            </remarks>
            <param name="org">The organization name</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupsForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            List self-hosted runners groups for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runner-groups-for-an-organization
            </remarks>
            <param name="org">The organization name</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnersForEnterpriseRunnerGroup(System.String,System.Int64)">
            <summary>
            List self-hosted runners in a group for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runners-in-a-group-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="runnerGroupId">The runner group ID.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnersForEnterpriseRunnerGroup(System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            List self-hosted runners in a group for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runners-in-a-group-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="runnerGroupId">The runner group ID.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnersForOrganizationRunnerGroup(System.String,System.Int64)">
            <summary>
            List self-hosted runners in a group for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runners-in-a-group-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="runnerGroupId">The runner group ID.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnersForOrganizationRunnerGroup(System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            List self-hosted runners in a group for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-self-hosted-runners-in-a-group-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="runnerGroupId">The runner group ID.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupOrganizationsForEnterprise(System.String,System.Int64)">
            <summary>
            List organization access to a self-hosted runner group in an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-organization-access-to-a-self-hosted-runner-group-in-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise name</param>
            <param name="runnerGroupId">The runner group id</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupOrganizationsForEnterprise(System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            List organization access to a self-hosted runner group in an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-organization-access-to-a-self-hosted-runner-group-in-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise name</param>
            <param name="runnerGroupId">The runner group id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupRepositoriesForOrganization(System.String,System.Int64)">
            <summary>
            List repository access to a self-hosted runner group in an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-repository-access-to-a-self-hosted-runner-group-in-an-organization
            </remarks>
            <param name="org">The organization name</param>
            <param name="runnerGroupId">The runner group id</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnerGroupsClient.ListAllRunnerGroupRepositoriesForOrganization(System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            List repository access to a self-hosted runner group in an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runner-groups?apiVersion=2022-11-28#list-repository-access-to-a-self-hosted-runner-group-in-an-organization
            </remarks>
            <param name="org">The organization name</param>
            <param name="runnerGroupId">The runner group id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.IActionsSelfHostedRunnersClient">
            <summary>
            A client for GitHub's Actions Self-hosted runners API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/self-hosted-runners/">Actions Self-hosted runners API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnersForEnterprise(System.String)">
            <summary>
            List self-hosted runners for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-self-hosted-runners-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnersForEnterprise(System.String,Octokit.ApiOptions)">
            <summary>
            List self-hosted runners for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-self-hosted-runners-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnersForOrganization(System.String)">
            <summary>
            List self-hosted runners for an organization
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/self-hosted-runners/#list-self-hosted-runners-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnersForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            List self-hosted runners for an organization
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/self-hosted-runners/#list-self-hosted-runners-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnersForRepository(System.String,System.String)">
            <summary>
            List self-hosted runners for a repository
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/self-hosted-runners/#list-self-hosted-runners-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnersForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            List self-hosted runners for a repository
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/self-hosted-runners/#list-self-hosted-runners-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForEnterprise(System.String)">
            <summary>
            List runner applications for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForEnterprise(System.String,Octokit.ApiOptions)">
            <summary>
            List runner applications for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForOrganization(System.String)">
            <summary>
            List runner applications for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            List runner applications for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForRepository(System.String,System.String)">
            <summary>
            List runner applications for a repository
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.ListAllRunnerApplicationsForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            List runner applications for a repository
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#list-runner-applications-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.DeleteEnterpriseRunner(System.String,System.Int64)">
            <summary>
            Delete a self-hosted runner from an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#delete-a-self-hosted-runner-from-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="runnerId">The runner ID.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.DeleteOrganizationRunner(System.String,System.Int64)">
            <summary>
            Delete a self-hosted runner from an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#delete-a-self-hosted-runner-from-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="runnerId">The runner ID.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.DeleteRepositoryRunner(System.String,System.String,System.Int64)">
            <summary>
            Delete a self-hosted runner from a repository
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#delete-a-self-hosted-runner-from-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runnerId">The runner ID.</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.CreateEnterpriseRegistrationToken(System.String,System.Threading.CancellationToken)">
            <summary>
            Create a registration token for an enterprise
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#create-a-registration-token-for-an-enterprise
            </remarks>
            <param name="enterprise">The enterprise.</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.CreateOrganizationRegistrationToken(System.String,System.Threading.CancellationToken)">
            <summary>
            Create a registration token for an organization
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#create-a-registration-token-for-an-organization
            </remarks>
            <param name="organization">The organization.</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.IActionsSelfHostedRunnersClient.CreateRepositoryRegistrationToken(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a registration token for a repository
            </summary>
            <remarks>
            https://docs.github.com/en/enterprise-cloud@latest/rest/actions/self-hosted-runners?apiVersion=2022-11-28#create-a-registration-token-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="T:Octokit.IActionsWorkflowJobsClient">
            <summary>
            A client for GitHub's Actions Workflow jobs API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/workflow-jobs/">Actions Workflow jobs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IActionsWorkflowJobsClient.Rerun(System.String,System.String,System.Int64)">
            <summary>
            Re-runs a specific workflow job in a repository.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#re-run-a-job-from-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="jobId">The Id of the workflow job.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowJobsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a specific job in a workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-jobs/#get-a-job-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="jobId">The unique identifier of the job.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowJobsClient.GetLogs(System.String,System.String,System.Int64)">
            <summary>
            Gets the plain text log file for a workflow job.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-jobs/#download-job-logs-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="jobId">The Id of the workflow job.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowJobsClient.List(System.String,System.String,System.Int64)">
            <summary>
            Lists jobs for a specific workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-jobs-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowJobsClient.List(System.String,System.String,System.Int64,Octokit.WorkflowRunJobsRequest)">
            <summary>
            Lists jobs for a specific workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-jobs-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="workflowRunJobsRequest">Details to filter the request, such as by when completed.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowJobsClient.List(System.String,System.String,System.Int64,Octokit.WorkflowRunJobsRequest,Octokit.ApiOptions)">
            <summary>
            Lists jobs for a specific workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-jobs-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="workflowRunJobsRequest">Details to filter the request, such as by when completed.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowJobsClient.List(System.String,System.String,System.Int64,System.Int32)">
            <summary>
            Lists jobs for a specific workflow run attempt.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-jobs-for-a-workflow-run-attempt
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="attemptNumber">The attempt number of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowJobsClient.List(System.String,System.String,System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Lists jobs for a specific workflow run attempt.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-jobs-for-a-workflow-run-attempt
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="attemptNumber">The attempt number of the workflow run.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="T:Octokit.IActionsWorkflowRunsClient">
            <summary>
            A client for GitHub's Actions Workflow runs API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/workflow-runs/">Actions Workflow runs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.List(System.String,System.String)">
            <summary>
            Lists all workflow runs for a repository.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.List(System.String,System.String,Octokit.WorkflowRunsRequest)">
            <summary>
            Lists all workflow runs for a repository.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.List(System.String,System.String,Octokit.WorkflowRunsRequest,Octokit.ApiOptions)">
            <summary>
            Lists all workflow runs for a repository.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a specific workflow run in a repository. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#get-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.Delete(System.String,System.String,System.Int64)">
            <summary>
            Deletes a specific workflow run. Anyone with write access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#delete-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.GetReviewHistory(System.String,System.String,System.Int64)">
            <summary>
            Get the review history for a workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#get-the-review-history-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.ReviewPendingDeployments(System.String,System.String,System.Int64,Octokit.PendingDeploymentReview)">
            <summary>
            Approve or reject pending deployments that are waiting on approval by a required reviewer.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#review-pending-deployments-for-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="review">The review for the pending deployment.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.Approve(System.String,System.String,System.Int64)">
            <summary>
            Approves a workflow run for a pull request from a public fork of a first time contributor.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#approve-a-workflow-run-for-a-fork-pull-request
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.GetAttempt(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            Gets a specific workflow run attempt. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#get-a-workflow-run-attempt
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="attemptNumber">The attempt number of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.GetAttemptLogs(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            Gets a byte array containing an archive of log files for a specific workflow run attempt.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#download-workflow-run-attempt-logs
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="attemptNumber">The attempt number of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.Cancel(System.String,System.String,System.Int64)">
            <summary>
            Cancels a workflow run using its Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#cancel-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.GetLogs(System.String,System.String,System.Int64)">
            <summary>
            Gets a byte array containing an archive of log files for a workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#download-workflow-run-logs
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.DeleteLogs(System.String,System.String,System.Int64)">
            <summary>
            Deletes all logs for a workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#delete-workflow-run-logs
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.Rerun(System.String,System.String,System.Int64)">
            <summary>
            Re-runs your workflow run using its Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#re-run-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.RerunFailedJobs(System.String,System.String,System.Int64)">
            <summary>
            Re-run all of the failed jobs and their dependent jobs in a workflow run using the Id of the workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#re-run-failed-jobs-from-a-workflow-run
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.GetUsage(System.String,System.String,System.Int64)">
            <summary>
            Gets the number of billable minutes and total run time for a specific workflow run.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#get-workflow-run-usage
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="runId">The Id of the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.Int64)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.String)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.Int64,Octokit.WorkflowRunsRequest)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.String,Octokit.WorkflowRunsRequest)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.Int64,Octokit.WorkflowRunsRequest,Octokit.ApiOptions)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowRunsClient.ListByWorkflow(System.String,System.String,System.String,Octokit.WorkflowRunsRequest,Octokit.ApiOptions)">
            <summary>
            List all workflow runs for a workflow.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflow-runs/#list-workflow-runs-for-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
            <param name="workflowRunsRequest">Details to filter the request, such as by check suite Id.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="T:Octokit.IActionsWorkflowsClient">
            <summary>
            A client for GitHub's Actions Workflows API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/workflows/">Actions Workflows API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.CreateDispatch(System.String,System.String,System.String,Octokit.CreateWorkflowDispatch)">
            <summary>
            Manually triggers a GitHub Actions workflow run in a repository by Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#create-a-workflow-dispatch-event
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
            <param name="createDispatch">The parameters to use to trigger the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.CreateDispatch(System.String,System.String,System.Int64,Octokit.CreateWorkflowDispatch)">
            <summary>
            Manually triggers a GitHub Actions workflow run in a repository by Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#create-a-workflow-dispatch-event
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
            <param name="createDispatch">The parameters to use to trigger the workflow run.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.Disable(System.String,System.String,System.String)">
            <summary>
            Disables a specific workflow in a repository by Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#disable-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.Disable(System.String,System.String,System.Int64)">
            <summary>
            Disables a specific workflow in a repository by Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#disable-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.Enable(System.String,System.String,System.String)">
            <summary>
            Enables a specific workflow in a repository by Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#enable-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.Enable(System.String,System.String,System.Int64)">
            <summary>
            Enables a specific workflow in a repository by Id.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#enable-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a specific workflow in a repository by Id. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#get-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a specific workflow in a repository by Id. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#get-a-workflow
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.GetUsage(System.String,System.String,System.String)">
            <summary>
            Gets useage of a specific workflow in a repository by Id. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#get-workflow-usage
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowFileName">The workflow file name.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.GetUsage(System.String,System.String,System.Int64)">
            <summary>
            Gets useage of a specific workflow in a repository by Id. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#get-workflow-usage
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="workflowId">The Id of the workflow.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.List(System.String,System.String)">
            <summary>
            Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#list-repository-workflows
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
        </member>
        <member name="M:Octokit.IActionsWorkflowsClient.List(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint.
            </summary>
            <remarks>
            https://developer.github.com/v3/actions/workflows/#list-repository-workflows
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options to change the API response.</param>
        </member>
        <member name="P:Octokit.IActionsWorkflowsClient.Jobs">
            <summary>
            Client for the Workflow jobs API.
            </summary>
        </member>
        <member name="P:Octokit.IActionsWorkflowsClient.Runs">
            <summary>
            Client for the Workflow runs API.
            </summary>
        </member>
        <member name="T:Octokit.IActivitiesClient">
            <summary>
            A client for GitHub's Activity API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/">Activity API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IActivitiesClient.Events">
            <summary>
            Client for the Events API
            </summary>
        </member>
        <member name="P:Octokit.IActivitiesClient.Starring">
            <summary>
            Client for the Starring API
            </summary>
        </member>
        <member name="P:Octokit.IActivitiesClient.Watching">
            <summary>
            Client for the Watching API
            </summary>
        </member>
        <member name="P:Octokit.IActivitiesClient.Feeds">
            <summary>
            Client for the Feeds API
            </summary>
        </member>
        <member name="P:Octokit.IActivitiesClient.Notifications">
            <summary>
            Client for the Notifications API
            </summary>
        </member>
        <member name="T:Octokit.IAssigneesClient">
            <summary>
            A client for GitHub's Issue Assignees API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/assignees/">Issue Assignees API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IAssigneesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IAssigneesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IAssigneesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">The options to change API's response.</param>
        </member>
        <member name="M:Octokit.IAssigneesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">The options to change API's response.</param>
        </member>
        <member name="M:Octokit.IAssigneesClient.CheckAssignee(System.String,System.String,System.String)">
            <summary>
            Checks to see if a user is an assignee for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="assignee">Username of the prospective assignee</param>
        </member>
        <member name="M:Octokit.IAssigneesClient.AddAssignees(System.String,System.String,System.Int32,Octokit.AssigneesUpdate)">
            <summary>
            Add assignees to a specified Issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="assignees">List of names of assignees to add</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IAssigneesClient.RemoveAssignees(System.String,System.String,System.Int32,Octokit.AssigneesUpdate)">
            <summary>
            Remove assignees from a specified Issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="assignees">List of assignees to remove</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IAssigneesClient.CheckAssignee(System.Int64,System.String)">
            <summary>
            Checks to see if a user is an assignee for a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assignee">Username of the prospective assignee</param>
        </member>
        <member name="T:Octokit.IAuthorizationsClient">
            <summary>
            A client for GitHub's OAuth API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/oauth/">OAuth API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.GetAll">
            <summary>
            Gets all <see cref="T:Octokit.Authorization"/>s for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#list-your-authorizations">API documentation</a> for more information.
            </remarks>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of <see cref="T:Octokit.Authorization"/>s for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.Authorization"/>s for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#list-your-authorizations">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of <see cref="T:Octokit.Authorization"/>s for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.Get(System.Int32)">
            <summary>
            Gets a specific <see cref="T:Octokit.Authorization"/> for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-a-single-authorization">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the <see cref="T:Octokit.Authorization"/> to get</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The specified <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.Create(Octokit.NewAuthorization)">
            <summary>
            Creates a new personal token for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization">API documentation</a> for more information.
            </remarks>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.Create(Octokit.NewAuthorization,System.String)">
            <summary>
            Creates a new personal token for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization">API documentation</a> for more information.
            </remarks>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.Create(System.String,System.String,Octokit.NewAuthorization)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application
            doesn’t already exist for the user; otherwise, it fails.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.Create(System.String,System.String,Octokit.NewAuthorization,System.String)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application
            doesn’t already exist for the user; otherwise, it fails.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.GetOrCreateApplicationAuthentication(System.String,System.String,Octokit.NewAuthorization)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application doesn’t already 
            exist for the user; otherwise, returns the user’s existing authorization for that application.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.GetOrCreateApplicationAuthentication(System.String,System.String,Octokit.NewAuthorization,System.String)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application doesn’t already 
            exist for the user; otherwise, returns the user’s existing authorization for that application.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.CheckApplicationAuthentication(System.String,System.String)">
            <summary>
            Checks the validity of an OAuth token without running afoul of normal rate limits for failed login attempts.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#check-an-authorization">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to check</param>
            <returns>The valid <see cref="T:Octokit.ApplicationAuthorization"/>.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.ResetApplicationAuthentication(System.String,System.String)">
            <summary>
            Resets a valid OAuth token for an OAuth application without end user involvement.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#reset-an-authorization">API documentation</a> for more information.
            </remarks>
            <param name="clientId">ClientID of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to reset</param>
            <returns>The valid <see cref="T:Octokit.ApplicationAuthorization"/> with a new OAuth token</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.RevokeApplicationAuthentication(System.String,System.String)">
            <summary>
            Revokes a single OAuth token for an OAuth application.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#revoke-an-authorization-for-an-application">API documentation for more information.</a>
            </remarks>
            <param name="clientId">ClientID of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to revoke</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.Update(System.Int32,Octokit.AuthorizationUpdate)">
            <summary>
            Updates the specified <see cref="T:Octokit.Authorization"/>.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#update-an-existing-authorization">API 
            documentation</a> for more details.
            </remarks>
            <param name="id">Id of the <see cref="T:Octokit.Authorization"/> to update</param>
            <param name="authorizationUpdate">Describes the changes to make to the authorization</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The updated <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.Delete(System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.Authorization"/>.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#delete-an-authorization">API 
            documentation</a> for more details.
            </remarks>
            <param name="id">The system-wide Id of the authorization to delete</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.IAuthorizationsClient.Delete(System.Int32,System.String)">
            <summary>
            Deletes the specified <see cref="T:Octokit.Authorization"/>.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#delete-an-authorization">API 
            documentation</a> for more details.
            </remarks>
            <param name="id">The system-wide Id of the authorization to delete</param>
            <param name="twoFactorAuthenticationCode">Two factor authorization code</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="T:Octokit.IAutolinksClient">
            <summary>
            A client for GitHub's Repository Autolinks API
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/repos/autolinks">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IAutolinksClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Returns a single autolink reference by ID that was configured for the given repository
            </summary>
            <param name="owner">The account owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="autolinkId">The unique identifier of the autolink</param>
            <remarks>See the <a href="https://docs.github.com/en/rest/repos/autolinks#get-an-autolink-reference-of-a-repository">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IAutolinksClient.GetAll(System.String,System.String)">
            <summary>
            Returns a list of autolinks configured for the given repository
            </summary>
            <param name="owner">The account owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <remarks>See the <a href="https://docs.github.com/en/rest/repos/autolinks#list-all-autolinks-of-a-repository">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IAutolinksClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Returns a list of autolinks configured for the given repository
            </summary>
            <param name="owner">The account owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <remarks>See the <a href="https://docs.github.com/en/rest/repos/autolinks#list-all-autolinks-of-a-repository">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IAutolinksClient.Create(System.String,System.String,Octokit.AutolinkRequest)">
            <summary>
            Create an autolink reference for a repository
            </summary>
            <param name="owner">The account owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="autolink">The Autolink object to be created for the repository</param>
            <remarks>See the <a href="https://docs.github.com/en/rest/repos/autolinks#create-an-autolink-reference-for-a-repository">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IAutolinksClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a single autolink reference by ID that was configured for the given repository
            </summary>
            <param name="owner">The account owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="autolinkId">The unique identifier of the autolink</param>
            <remarks>See the <a href="https://docs.github.com/en/rest/repos/autolinks#delete-an-autolink-reference-from-a-repository">API documentation</a> for more information.</remarks>
        </member>
        <member name="T:Octokit.IBlobsClient">
            <summary>
            A client for GitHub's Git Blobs API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/blobs/">Git Blobs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IBlobsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single Blob by SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#get-a-blob
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA of the blob</param>
        </member>
        <member name="M:Octokit.IBlobsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single Blob by SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#get-a-blob
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA of the blob</param>
        </member>
        <member name="M:Octokit.IBlobsClient.Create(System.String,System.String,Octokit.NewBlob)">
            <summary>
            Creates a new Blob
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#create-a-blob
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newBlob">The new Blob</param>
        </member>
        <member name="M:Octokit.IBlobsClient.Create(System.Int64,Octokit.NewBlob)">
            <summary>
            Creates a new Blob
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#create-a-blob
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newBlob">The new Blob</param>
        </member>
        <member name="T:Octokit.ICheckRunsClient">
            <summary>
            A client for GitHub's Check Runs API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/">Check Runs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ICheckRunsClient.Create(System.String,System.String,Octokit.NewCheckRun)">
            <summary>
            Creates a new check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#create-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newCheckRun">Details of the Check Run to create</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.Create(System.Int64,Octokit.NewCheckRun)">
            <summary>
            Creates a new check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#create-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newCheckRun">Details of the Check Run to create</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.Update(System.String,System.String,System.Int64,Octokit.CheckRunUpdate)">
            <summary>
            Updates a check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#update-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="checkRunUpdate">The updates to the check run</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.Update(System.Int64,System.Int64,Octokit.CheckRunUpdate)">
            <summary>
            Updates a check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#update-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="checkRunUpdate">The updates to the check run</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForReference(System.String,System.String,System.String)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForReference(System.Int64,System.String)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForReference(System.Int64,System.String,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForReference(System.Int64,System.String,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a single check run using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#get-a-single-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.Get(System.Int64,System.Int64)">
            <summary>
            Gets a single check run using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#get-a-single-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllAnnotations(System.String,System.String,System.Int64)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllAnnotations(System.Int64,System.Int64)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllAnnotations(System.String,System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.ICheckRunsClient.GetAllAnnotations(System.Int64,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="T:Octokit.IChecksClient">
            <summary>
            A client for GitHub's Checks API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/">Checks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IChecksClient.Run">
            <summary>
            A client for GitHub's Check Runs API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/">Check Runs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IChecksClient.Suite">
            <summary>
            A client for GitHub's Check Suites API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/">Check Suites API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.ICheckSuitesClient">
            <summary>
            A client for GitHub's Check Suites API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/">Check Suites API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a single Check Suite by Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#get-a-single-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.Get(System.Int64,System.Int64)">
            <summary>
            Gets a single Check Suite by Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#get-a-single-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.GetAllForReference(System.String,System.String,System.String)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.GetAllForReference(System.Int64,System.String)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckSuiteRequest)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.GetAllForReference(System.Int64,System.String,Octokit.CheckSuiteRequest)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckSuiteRequest,Octokit.ApiOptions)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.GetAllForReference(System.Int64,System.String,Octokit.CheckSuiteRequest,Octokit.ApiOptions)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.UpdatePreferences(System.String,System.String,Octokit.CheckSuitePreferences)">
            <summary>
            Updates Check Suites preferences on a repository, such as disabling automatic creation when code is pushed
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="preferences">The check suite preferences</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.UpdatePreferences(System.Int64,Octokit.CheckSuitePreferences)">
            <summary>
            Updates Check Suites preferences on a repository, such as disabling automatic creation when code is pushed
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="preferences">The check suite preferences</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.Create(System.String,System.String,Octokit.NewCheckSuite)">
            <summary>
            Creates a new Check Suite
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#create-a-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newCheckSuite">Details of the Check Suite to create</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.Create(System.Int64,Octokit.NewCheckSuite)">
            <summary>
            Creates a new Check Suite
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#create-a-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newCheckSuite">Details of the Check Suite to create</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.Rerequest(System.String,System.String,System.Int64)">
            <summary>
            Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.ICheckSuitesClient.Rerequest(System.Int64,System.Int64)">
            <summary>
            Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="T:Octokit.ICommitCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ICommitCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ICommitCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ICommitCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Get all reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ICommitCommentReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ICommitCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Get all reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ICommitCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ICommitCommentReactionsClient.Delete(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Commit Comment
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-a-commit-comment-reaction</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="commentId">The comment id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ICommitCommentReactionsClient.Delete(System.Int64,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Commit Comment
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-a-commit-comment-reaction</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="commentId">The comment id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.ICommitsClient">
            <summary>
            A client for GitHub's Git Commits API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/commits/">Git Commits API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ICommitsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a commit for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#get-a-commit
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">Tha sha reference of the commit</param>
        </member>
        <member name="M:Octokit.ICommitsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a commit for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#get-a-commit
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">Tha sha reference of the commit</param>
        </member>
        <member name="M:Octokit.ICommitsClient.Create(System.String,System.String,Octokit.NewCommit)">
            <summary>
            Create a commit for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#create-a-commit
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="commit">The commit to create</param>
        </member>
        <member name="M:Octokit.ICommitsClient.Create(System.Int64,Octokit.NewCommit)">
            <summary>
            Create a commit for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#create-a-commit
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="commit">The commit to create</param>
        </member>
        <member name="T:Octokit.ICommitStatusClient">
            <summary>
            A client for GitHub's Git Repository Status API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/statuses/">Repository Statuses API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ICommitStatusClient.GetAll(System.String,System.String,System.String)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.ICommitStatusClient.GetAll(System.Int64,System.String)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.ICommitStatusClient.GetAll(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>        
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ICommitStatusClient.GetAll(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ICommitStatusClient.GetCombined(System.String,System.String,System.String)">
            <summary>
            Retrieves a combined view of statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.ICommitStatusClient.GetCombined(System.Int64,System.String)">
            <summary>
            Retrieves a combined view of statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.ICommitStatusClient.Create(System.String,System.String,System.String,Octokit.NewCommitStatus)">
            <summary>
            Creates a commit status for the specified ref.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#create-a-status
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="newCommitStatus">The commit status to create</param>
        </member>
        <member name="M:Octokit.ICommitStatusClient.Create(System.Int64,System.String,Octokit.NewCommitStatus)">
            <summary>
            Creates a commit status for the specified ref.
            </summary>
            <remarks>
            https://developer.github.com/v3/repos/statuses/#create-a-status
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="newCommitStatus">The commit status to create</param>
        </member>
        <member name="T:Octokit.IDeploymentsClient">
            <summary>
            A client for GitHub's Repository Deployments API.
            Gets and creates Deployments.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/deployments/">Repository Deployments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IDeploymentsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IDeploymentsClient.GetAll(System.Int64)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IDeploymentsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IDeploymentsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IDeploymentsClient.Create(System.String,System.String,Octokit.NewDeployment)">
            <summary>
            Creates a new deployment for the specified repository.
            Users with push access can create a deployment for a given ref.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newDeployment">A <see cref="T:Octokit.NewDeployment"/> instance describing the new deployment to create</param>
        </member>
        <member name="M:Octokit.IDeploymentsClient.Create(System.Int64,Octokit.NewDeployment)">
            <summary>
            Creates a new deployment for the specified repository.
            Users with push access can create a deployment for a given ref.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newDeployment">A <see cref="T:Octokit.NewDeployment"/> instance describing the new deployment to create</param>
        </member>
        <member name="P:Octokit.IDeploymentsClient.Status">
            <summary>
            Client for managing deployment status.
            </summary>
        </member>
        <member name="T:Octokit.IDeploymentStatusClient">
            <summary>
            A client for GitHub's Repository Deployment Statuses API.
            Gets and creates Deployment Statuses.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/deployments/">Repository Deployment Statuses API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IDeploymentStatusClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
        </member>
        <member name="M:Octokit.IDeploymentStatusClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
        </member>
        <member name="M:Octokit.IDeploymentStatusClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IDeploymentStatusClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IDeploymentStatusClient.Create(System.String,System.String,System.Int32,Octokit.NewDeploymentStatus)">
            <summary>
            Creates a new status for the given deployment. Users with push access can create deployment
            statuses for a given deployment.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment-status
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="newDeploymentStatus">The new deployment status to create.</param>
        </member>
        <member name="M:Octokit.IDeploymentStatusClient.Create(System.Int64,System.Int32,Octokit.NewDeploymentStatus)">
            <summary>
            Creates a new status for the given deployment. Users with push access can create deployment
            statuses for a given deployment.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment-status
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="newDeploymentStatus">The new deployment status to create.</param>
        </member>
        <member name="T:Octokit.IEmojisClient">
            <summary>
            A client for GitHub's Emojis APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/emojis">Emojis API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IEmojisClient.GetAllEmojis">
            <summary>
            Gets all the emojis available to use on GitHub.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> of emoji and their URI.</returns>
        </member>
        <member name="T:Octokit.IEventsClient">
            <summary>
            A client for GitHub's Activity Events API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/events/">Activity Events API documentation</a> for more information
            </remarks>
        </member>
        <member name="M:Octokit.IEventsClient.GetAll">
            <summary>
            Gets all the public events
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events
            </remarks>
        </member>
        <member name="M:Octokit.IEventsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all the public events
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events
            </remarks>
            <param name="options">Options for changing the API response</param>
            <returns>All the public <see cref="T:Octokit.Activity"/>s for the particular user.</returns>        
        </member>
        <member name="M:Octokit.IEventsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllIssuesForRepository(System.String,System.String)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllIssuesForRepository(System.Int64)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllIssuesForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllIssuesForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllForRepositoryNetwork(System.String,System.String)">
            <summary>
            Gets all the events for a given repository network
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllForRepositoryNetwork(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository network
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllForOrganization(System.String)">
            <summary>
            Gets all the events for a given organization
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-an-organization
            </remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given organization
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-an-organization
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllUserReceived(System.String)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllUserReceived(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllUserReceivedPublic(System.String)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllUserReceivedPublic(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllUserPerformed(System.String)">
            <summary>
            Gets all the events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllUserPerformed(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllUserPerformedPublic(System.String)">
            <summary>
            Gets all the public events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllUserPerformedPublic(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the public events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllForAnOrganization(System.String,System.String)">
            <summary>
            Gets all the events that are associated with an organization.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-for-an-organization
            </remarks>
            <param name="user">The login of the user</param>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.IEventsClient.GetAllForAnOrganization(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that are associated with an organization.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-for-an-organization
            </remarks>
            <param name="user">The login of the user</param>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.IFeedsClient">
            <summary>
            A client for GitHub's Feeds API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/feeds/">Feeds API documentation</a> for more information
            </remarks>
        </member>
        <member name="M:Octokit.IFeedsClient.GetFeeds">
            <summary>
            Gets all the feeds available to the authenticating user
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/feeds/#list-feeds
            </remarks>
            <returns>All the public <see cref="T:Octokit.Feed"/>s for the particular user.</returns>
        </member>
        <member name="T:Octokit.IFollowersClient">
             <summary>
             A client for GitHub's User Followers API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/followers/">Followers API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IFollowersClient.GetAllForCurrent">
            <summary>
            List the authenticated user’s followers
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that follow the authenticated user.</returns>
        </member>
        <member name="M:Octokit.IFollowersClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s followers
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>        
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that follow the authenticated user.</returns>        
        </member>
        <member name="M:Octokit.IFollowersClient.GetAll(System.String)">
            <summary>
            List a user’s followers
            </summary>
            <param name="login">The login name for the user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that follow the passed user.</returns>
        </member>
        <member name="M:Octokit.IFollowersClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            List a user’s followers
            </summary>
            <param name="login">The login name for the user</param>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that follow the passed user.</returns>
        </member>
        <member name="M:Octokit.IFollowersClient.GetAllFollowingForCurrent">
            <summary>
            List who the authenticated user is following
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that the authenticated user follows.</returns>
        </member>
        <member name="M:Octokit.IFollowersClient.GetAllFollowingForCurrent(Octokit.ApiOptions)">
            <summary>
            List who the authenticated user is following
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that the authenticated user follows.</returns>        
        </member>
        <member name="M:Octokit.IFollowersClient.GetAllFollowing(System.String)">
            <summary>
            List who a user is following
            </summary>
            <param name="login">The login name of the user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that the passed user follows.</returns>
        </member>
        <member name="M:Octokit.IFollowersClient.GetAllFollowing(System.String,Octokit.ApiOptions)">
            <summary>
            List who a user is following
            </summary>
            <param name="login">The login name of the user</param>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.User"/>s that the passed user follows.</returns>
        </member>
        <member name="M:Octokit.IFollowersClient.IsFollowingForCurrent(System.String)">
            <summary>
            Check if the authenticated user follows another user
            </summary>
            <param name="following">The login name of the other user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#check-if-you-are-following-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.IFollowersClient.IsFollowing(System.String,System.String)">
            <summary>
            Check if one user follows another user
            </summary>
            <param name="login">The login name of the user</param>
            <param name="following">The login name of the other user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#check-if-one-user-follows-another">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.IFollowersClient.Follow(System.String)">
            <summary>
            Follow a user
            </summary>
            <param name="login">The login name of the user to follow</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#follow-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.IFollowersClient.Unfollow(System.String)">
            <summary>
            Unfollow a user
            </summary>
            <param name="login">The login name of the user to unfollow</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#unfollow-a-user">API documentation</a> for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="T:Octokit.IGistCommentsClient">
            <summary>
            A client for GitHub's Gist Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/gists/comments/">Gist Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IGistCommentsClient.Get(System.String,System.Int32)">
            <summary>
            Gets a single comment by gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#get-a-single-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <returns>Task{GistComment}.</returns>
        </member>
        <member name="M:Octokit.IGistCommentsClient.GetAllForGist(System.String)">
            <summary>
            Gets all comments for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#list-comments-on-a-gist</remarks>
            <param name="gistId">The id of the gist</param>
            <returns>Task{IReadOnlyList{GistComment}}.</returns>
        </member>
        <member name="M:Octokit.IGistCommentsClient.GetAllForGist(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all comments for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#list-comments-on-a-gist</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
            <returns>Task{IReadOnlyList{GistComment}}.</returns>
        </member>
        <member name="M:Octokit.IGistCommentsClient.Create(System.String,System.String)">
            <summary>
            Creates a comment for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#create-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="comment">The body of the comment</param>
            <returns>Task{GistComment}.</returns>
        </member>
        <member name="M:Octokit.IGistCommentsClient.Update(System.String,System.Int32,System.String)">
            <summary>
            Updates the comment with the specified gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#edit-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <param name="comment">The updated body of the comment</param>
            <returns>Task{GistComment}.</returns>
        </member>
        <member name="M:Octokit.IGistCommentsClient.Delete(System.String,System.Int32)">
            <summary>
            Deletes the comment with the specified gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#delete-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Octokit.IGistsClient">
            <summary>
            A client for GitHub's Gists API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/gists/">Gists API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IGistsClient.Get(System.String)">
            <summary>
            Gets a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#get-a-single-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAll">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.IGistsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>        
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAll(System.DateTimeOffset)">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAll(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllPublic">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllPublic(Octokit.ApiOptions)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllPublic(System.DateTimeOffset)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllPublic(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllStarred">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllStarred(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllStarred(System.DateTimeOffset)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllStarred(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllForUser(System.String)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllForUser(System.String,System.DateTimeOffset)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllForUser(System.String,System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllCommits(System.String)">
            <summary>
            List gist commits
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-commits
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllCommits(System.String,Octokit.ApiOptions)">
            <summary>
            List gist commits
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-commits
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllForks(System.String)">
            <summary>
            List gist forks
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-forks
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.IGistsClient.GetAllForks(System.String,Octokit.ApiOptions)">
            <summary>
            List gist forks
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-forks
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IGistsClient.Create(Octokit.NewGist)">
            <summary>
            Creates a new gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#create-a-gist
            </remarks>
            <param name="newGist">The new gist to create</param>
        </member>
        <member name="M:Octokit.IGistsClient.Fork(System.String)">
            <summary>
            Creates a fork of a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#fork-a-gist
            </remarks>
            <param name="id">The id of the gist to fork</param>
        </member>
        <member name="M:Octokit.IGistsClient.Edit(System.String,Octokit.GistUpdate)">
            <summary>
            Edits a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#delete-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="gistUpdate">The update to the gist</param>
        </member>
        <member name="M:Octokit.IGistsClient.Delete(System.String)">
            <summary>
            Deletes a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#delete-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.IGistsClient.Star(System.String)">
            <summary>
            Stars a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#star-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.IGistsClient.Unstar(System.String)">
            <summary>
            Unstars a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#unstar-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.IGistsClient.IsStarred(System.String)">
            <summary>
            Checks if the gist is starred
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#check-if-a-gist-is-starred
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="T:Octokit.IGitDatabaseClient">
            <summary>
            A client for GitHub's Git Database API. Gives you access to read and write raw Git objects and to list and update your references.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/">Git API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.IGitHubAppInstallationsClient">
            <summary>
            A client for GitHub Applications Installations API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/apps/installations/">GitHub Apps Installations API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IGitHubAppInstallationsClient.GetAllRepositoriesForCurrent">
            <summary>
            List repositories of the authenticated GitHub App Installation (requires GitHubApp Installation-Token auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories</remarks>
        </member>
        <member name="M:Octokit.IGitHubAppInstallationsClient.GetAllRepositoriesForCurrent(Octokit.ApiOptions)">
            <summary>
            List repositories of the authenticated GitHub App Installation (requires GitHubApp Installation-Token auth).
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories</remarks>
        </member>
        <member name="M:Octokit.IGitHubAppInstallationsClient.GetAllRepositoriesForCurrentUser(System.Int64)">
            <summary>
            List repositories accessible to the user for an installation (requires GitHubApp User-To-Server Auth).
            </summary>
            <param name="installationId">The Id of the installation</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation</remarks>
        </member>
        <member name="M:Octokit.IGitHubAppInstallationsClient.GetAllRepositoriesForCurrentUser(System.Int64,Octokit.ApiOptions)">
            <summary>
            List repositories accessible to the user for an installation (requires GitHubApp User-To-Server Auth).
            </summary>
            <param name="installationId">The Id of the installation</param>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation</remarks>
        </member>
        <member name="T:Octokit.IGitHubAppsClient">
            <summary>
            A client for GitHub Applications API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/apps/">GitHub Apps API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubAppsClient.Installation">
            <summary>
            Access GitHub's Apps Installations API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/apps/installations/
            </remarks>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.Get(System.String)">
            <summary>
            Get a single GitHub App (if private, requires Personal Access Token or GitHubApp auth)
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-github-app</remarks>
            <param name="slug">The URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App.</param>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.GetCurrent">
            <summary>
            Returns the GitHub App associated with the authentication credentials used (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-the-authenticated-github-app</remarks>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.GetAllInstallationsForCurrent">
            <summary>
            List installations of the authenticated GitHub App (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-installations</remarks>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.GetAllInstallationsForCurrent(Octokit.ApiOptions)">
            <summary>
            List installations of the authenticated GitHub App (requires GitHubApp auth).
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/#find-installations</remarks>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.GetInstallation(System.Int64)">
            <summary>
            Get a single GitHub App Installation (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-installation</remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.GetInstallationForCurrent(System.Int64)">
            <summary>
            Get a single GitHub App Installation (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-installation</remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.GetAllInstallationsForCurrentUser">
            <summary>
            List installations for the currently authenticated user (requires GitHubApp User-To-Server Auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#list-installations-for-user</remarks>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.GetAllInstallationsForCurrentUser(Octokit.ApiOptions)">
            <summary>
            List installations for the currently authenticated user (requires GitHubApp User-To-Server Auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#list-installations-for-user</remarks>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.CreateInstallationToken(System.Int64)">
            <summary>
            Create a time bound access token for a GitHubApp Installation that can be used to access other API endpoints (requires GitHubApp auth).
            </summary>
            <remarks>
            https://developer.github.com/v3/apps/#create-a-new-installation-token
            https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/#authenticating-as-an-installation
            https://developer.github.com/v3/apps/available-endpoints/
            </remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.GetOrganizationInstallationForCurrent(System.String)">
            <summary>
            Enables an authenticated GitHub App to find the organization's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-organization-installation</remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.GetRepositoryInstallationForCurrent(System.String,System.String)">
            <summary>
            Enables an authenticated GitHub App to find the repository's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-repository-installation</remarks>
            <param name="owner">The owner of the repo</param>
            <param name="repo">The name of the repo</param>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.GetRepositoryInstallationForCurrent(System.Int64)">
            <summary>
            Enables an authenticated GitHub App to find the repository's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-repository-installation</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IGitHubAppsClient.GetUserInstallationForCurrent(System.String)">
            <summary>
            Enables an authenticated GitHub App to find the users's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-user-installation</remarks>
            <param name="user">The name of the user</param>
        </member>
        <member name="T:Octokit.IGitIgnoreClient">
            <summary>
            A client for GitHub's gitignore APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/gitignore">GitIgnore API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IGitIgnoreClient.GetAllGitIgnoreTemplates">
            <summary>
            List all templates available to pass as an option when creating a repository.
            </summary>
            <returns>A list of template names</returns>
        </member>
        <member name="M:Octokit.IGitIgnoreClient.GetGitIgnoreTemplate(System.String)">
            <summary>
            Retrieves the source for a single GitIgnore template
            </summary>
            <param name="templateName"></param>
            <returns>A template and its source</returns>
        </member>
        <member name="T:Octokit.IIssueCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IIssueCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.IIssueCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.IIssueCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Get all reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.IIssueCommentReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Get all reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.IIssueCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueCommentReactionsClient.Delete(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Commit Comment
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-a-commit-comment-reaction</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="commentId">The comment id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IIssueCommentReactionsClient.Delete(System.Int64,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Commit Comment
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-a-commit-comment-reaction</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="commentId">The comment id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IIssueCommentsClient">
            <summary>
            A client for GitHub's Issue Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/comments/">Issue Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Issue Comment by id.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#get-a-single-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The issue comment id</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Issue Comment by id.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#get-a-single-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The issue comment id</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForRepository(System.Int64,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForRepository(System.Int64,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.Create(System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates a new Issue Comment for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="newComment">The new comment to add to the issue</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.Create(System.Int64,System.Int32,System.String)">
            <summary>
            Creates a new Issue Comment for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="newComment">The new comment to add to the issue</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.Update(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates a specified Issue Comment.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#edit-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The comment id</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.Update(System.Int64,System.Int32,System.String)">
            <summary>
            Updates a specified Issue Comment.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#edit-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The comment id</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified Issue Comment
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#delete-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The comment id</param>
        </member>
        <member name="M:Octokit.IIssueCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes the specified Issue Comment
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#delete-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The comment id</param>
        </member>
        <member name="T:Octokit.IIssueReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions/">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IIssueReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Get all reactions for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>
        </member>
        <member name="M:Octokit.IIssueReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Get all reactions for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>
        </member>
        <member name="M:Octokit.IIssueReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssueReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.IIssueReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.IIssueReactionsClient.Delete(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Issue
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-an-issue-reaction</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="issueNumber">The issue number</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IIssueReactionsClient.Delete(System.Int64,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Issue
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-an-issue-reaction</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="issueNumber">The issue number</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IIssuesClient">
            <summary>
            A client for GitHub's Issues API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/">Issues API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IIssuesClient.Assignee">
            <summary>
            Client for managing assignees.
            </summary>
        </member>
        <member name="P:Octokit.IIssuesClient.Events">
            <summary>
            Client for reading various event information associated with issues/pull requests.  
            This is useful both for display on issue/pull request information pages and also to 
            determine who should be notified of comments.
            </summary>
        </member>
        <member name="P:Octokit.IIssuesClient.Milestone">
            <summary>
            Client for managing milestones.
            </summary>
        </member>
        <member name="P:Octokit.IIssuesClient.Labels">
            <summary>
            Client for managing labels.
            </summary>
        </member>
        <member name="P:Octokit.IIssuesClient.Comment">
            <summary>
            Client for managing comments.
            </summary>
        </member>
        <member name="M:Octokit.IIssuesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Issue by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#get-a-single-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IIssuesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Issue by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#get-a-single-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForCurrent">
            <summary>
            Gets all open issues assigned to the authenticated user across all the authenticated user’s visible
            repositories including owned repositories, member repositories, and organization repositories.
            </summary>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user across all the authenticated user’s visible
            repositories including owned repositories, member repositories, and organization repositories.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForCurrent(Octokit.IssueRequest)">
            <summary>
            Gets all issues across all the authenticated user’s visible repositories including owned repositories, 
            member repositories, and organization repositories.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForCurrent(Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues across all the authenticated user’s visible repositories including owned repositories, 
            member repositories, and organization repositories.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForOwnedAndMemberRepositories">
            <summary>
            Gets all open issues assigned to the authenticated user across owned and member repositories for the
            authenticated user.
            </summary>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user across owned and member repositories for the
            authenticated user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.IssueRequest)">
            <summary>
            Gets all issues across owned and member repositories for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues across owned and member repositories for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForOrganization(System.String)">
            <summary>
            Gets all open issues assigned to the authenticated user for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForOrganization(System.String,Octokit.IssueRequest)">
            <summary>
            Gets all issues for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForOrganization(System.String,Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForRepository(System.String,System.String,Octokit.RepositoryIssueRequest)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForRepository(System.Int64,Octokit.RepositoryIssueRequest)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForRepository(System.String,System.String,Octokit.RepositoryIssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesClient.GetAllForRepository(System.Int64,Octokit.RepositoryIssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesClient.Create(System.String,System.String,Octokit.NewIssue)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newIssue">A <see cref="T:Octokit.NewIssue"/> instance describing the new issue to create</param>
        </member>
        <member name="M:Octokit.IIssuesClient.Create(System.Int64,Octokit.NewIssue)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newIssue">A <see cref="T:Octokit.NewIssue"/> instance describing the new issue to create</param>
        </member>
        <member name="M:Octokit.IIssuesClient.Update(System.String,System.String,System.Int32,Octokit.IssueUpdate)">
            <summary>
            Updates an issue for the specified repository. Any user with pull access to a repository can update an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#edit-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="issueUpdate">An <see cref="T:Octokit.IssueUpdate"/> instance describing the changes to make to the issue
            </param>
        </member>
        <member name="M:Octokit.IIssuesClient.Update(System.Int64,System.Int32,Octokit.IssueUpdate)">
            <summary>
            Updates an issue for the specified repository. Any user with pull access to a repository can update an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#edit-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="issueUpdate">An <see cref="T:Octokit.IssueUpdate"/> instance describing the changes to make to the issue
            </param>
        </member>
        <member name="T:Octokit.IIssuesEventsClient">
            <summary>
            A client for GitHub's Issue Events API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/events/">Issue Events API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IIssuesEventsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IIssuesEventsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IIssuesEventsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesEventsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesEventsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IIssuesEventsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IIssuesEventsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesEventsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesEventsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a single event
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#get-a-single-event
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="eventId">The event id</param>
        </member>
        <member name="M:Octokit.IIssuesEventsClient.Get(System.Int64,System.Int64)">
            <summary>
            Gets a single event
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#get-a-single-event
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="eventId">The event id</param>
        </member>
        <member name="T:Octokit.IIssuesLabelsClient">
            <summary>
            A client for GitHub's Issue Labels API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/">Issue Labels API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForMilestone(System.String,System.String,System.Int32)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the milestone</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForMilestone(System.Int64,System.Int32)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the milestone</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForMilestone(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the milestone</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.GetAllForMilestone(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the milestone</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single Label by name.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-a-single-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single Label by name.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-a-single-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#delete-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#delete-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.Create(System.String,System.String,Octokit.NewLabel)">
            <summary>
            Creates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#create-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newLabel">The data for the label to be created</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.Create(System.Int64,Octokit.NewLabel)">
            <summary>
            Creates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#create-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newLabel">The data for the label to be created</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.Update(System.String,System.String,System.String,Octokit.LabelUpdate)">
            <summary>
            Updates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#update-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
            <param name="labelUpdate">The data for the label to be updated</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.Update(System.Int64,System.String,Octokit.LabelUpdate)">
            <summary>
            Updates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#update-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
            <param name="labelUpdate">The data for the label to be updated</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.AddToIssue(System.String,System.String,System.Int32,System.String[])">
            <summary>
            Adds a label to an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#add-labels-to-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to add</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.AddToIssue(System.Int64,System.Int32,System.String[])">
            <summary>
            Adds a label to an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#add-labels-to-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to add</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.RemoveFromIssue(System.String,System.String,System.Int32,System.String)">
            <summary>
            Removes a label from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labelName">The name of the label to remove</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.RemoveFromIssue(System.Int64,System.Int32,System.String)">
            <summary>
            Removes a label from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labelName">The name of the label to remove</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.ReplaceAllForIssue(System.String,System.String,System.Int32,System.String[])">
            <summary>
            Replaces all labels on the specified issues with the provided labels
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to set</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.ReplaceAllForIssue(System.Int64,System.Int32,System.String[])">
            <summary>
            Replaces all labels on the specified issues with the provided labels
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to set</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.RemoveAllFromIssue(System.String,System.String,System.Int32)">
            <summary>
            Removes all labels from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.IIssuesLabelsClient.RemoveAllFromIssue(System.Int64,System.Int32)">
            <summary>
            Removes all labels from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="T:Octokit.IIssueTimelineClient">
            <summary>
            A client for GitHub's Issue Timeline API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/issues/timeline/">Issue Timeline API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IIssueTimelineClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IIssueTimelineClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API repsonse</param>
        </member>
        <member name="M:Octokit.IIssueTimelineClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IIssueTimelineClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.ILicensesClient">
            <summary>
            A client for GitHub's licenses APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/licenses">Licenses API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.ILicensesClient.GetAllLicenses">
            <summary>
            Returns a list of the licenses shown in the license picker on GitHub.com. This is not a comprehensive
            list of all possible OSS licenses.
            </summary>
            <returns>A list of licenses available on the site</returns>
        </member>
        <member name="M:Octokit.ILicensesClient.GetAllLicenses(Octokit.ApiOptions)">
            <summary>
            Returns a list of the licenses shown in the license picker on GitHub.com. This is not a comprehensive
            list of all possible OSS licenses.
            </summary>
            <param name="options">Options for changing the API response</param>
            <returns>A list of licenses available on the site</returns>
        </member>
        <member name="M:Octokit.ILicensesClient.GetLicense(System.String)">
            <summary>
            Retrieves a license based on the license key such as "mit"
            </summary>
            <param name="key"></param>
            <returns>A <see cref="T:Octokit.License" /> that includes the license key, text, and attributes of the license.</returns>
        </member>
        <member name="T:Octokit.ILockUnlockClient">
            <summary>
            Client to manage locking/unlocking a conversation for an Issue or a Pull request
            </summary>
        </member>
        <member name="M:Octokit.ILockUnlockClient.Lock(System.String,System.String,System.Int32,System.Nullable{Octokit.LockReason})">
            <summary>
            Locks an issue for the specified repository. Issue owners and users with push access can lock an issue or pull request's conversation.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#lock-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="lockReason">The reason for locking the issue</param>
        </member>
        <member name="M:Octokit.ILockUnlockClient.Lock(System.Int64,System.Int32,System.Nullable{Octokit.LockReason})">
            <summary>
            Locks an issue for the specified repository. Issue owners and users with push access can lock an issue or pull request's conversation.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#lock-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="lockReason">The reason for locking the issue</param>
        </member>
        <member name="M:Octokit.ILockUnlockClient.Unlock(System.String,System.String,System.Int32)">
            <summary>
            Unlocks an issue for the specified repository. Issue owners and users with push access can unlock an issue or pull request's conversation.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#unlock-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.ILockUnlockClient.Unlock(System.Int64,System.Int32)">
            <summary>
            Unlocks an issue for the specified repository. Issue owners and users with push access can unlock an issue or pull request's conversation.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#unlock-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="T:Octokit.IMarkdownClient">
            <summary>
            A client for GitHub's markdown APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/markdown">Markdown API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IMarkdownClient.RenderArbitraryMarkdown(Octokit.NewArbitraryMarkdown)">
            <summary>
            Gets the rendered Markdown for the specified plain-text Markdown document.
            </summary>
            <param name="markdown">A plain-text Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="M:Octokit.IMarkdownClient.RenderRawMarkdown(System.String)">
            <summary>
            Gets the rendered Markdown for an arbitrary markdown document.
            </summary>
            <param name="markdown">An arbitrary Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="T:Octokit.IMergingClient">
            <summary>
            A client for GitHub's Git Merging API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/merging/">Git Merging API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IMergingClient.Create(System.String,System.String,Octokit.NewMerge)">
            <summary>
            Create a merge for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/merging/#perform-a-merge
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="merge">The merge to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMergingClient.Create(System.Int64,Octokit.NewMerge)">
            <summary>
            Create a merge for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/merging/#perform-a-merge
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="merge">The merge to create</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IMetaClient">
            <summary>
            A client for GitHub's meta APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/meta">Meta API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IMetaClient.GetMetadata">
            <summary>
            Retrieves information about GitHub.com, the service or a GitHub Enterprise installation.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.Meta"/> containing metadata about the GitHub instance.</returns>
        </member>
        <member name="T:Octokit.IMigrationClient">
            <summary>
            A client for GitHub's Migration API. These APIs help you move projects to or from GitHub.
            </summary>
            <remarks>
            Docs: https://developer.github.com/v3/migration/
            </remarks>
        </member>
        <member name="P:Octokit.IMigrationClient.Migrations">
            <summary>
            The Enterprise Migrations API lets you move a repository from GitHub to GitHub Enterprise.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/#enterprise-migrations
            </remarks>
        </member>
        <member name="T:Octokit.IMigrationsClient">
            <summary>
            An interface for GitHub's Migrations API client.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/migration/migrations/">docs</a>
            for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IMigrationsClient.Start(System.String,Octokit.StartMigrationRequest)">
            <summary>
            Starts a new migration specified for the given organization.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#start-a-migration
            </remarks>
            <param name="org">The organization for which to start a migration.</param>
            <param name="migration">Specifies parameters for the migration in a 
            <see cref="T:Octokit.StartMigrationRequest"/> object.</param>
            <returns>The started migration.</returns>
        </member>
        <member name="M:Octokit.IMigrationsClient.GetAll(System.String)">
            <summary>
            Gets the list of the most recent migrations of the organization.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#get-a-list-of-migrations
            </remarks>
            <param name="org">The organization of which to list migrations.</param>
            <returns>List of most recent <see cref="T:Octokit.Migration"/>s.</returns>
        </member>
        <member name="M:Octokit.IMigrationsClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of the most recent migrations of the organization.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#get-a-list-of-migrations
            </remarks>
            <param name="org">The organization of which to list migrations.</param>
            <param name="options">Options for changing the API response</param>
            <returns>List of most recent <see cref="T:Octokit.Migration"/>s.</returns>
        </member>
        <member name="M:Octokit.IMigrationsClient.Get(System.String,System.Int32)">
            <summary>
            Get the status of a migration
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#get-the-status-of-a-migration
            </remarks>
            <param name="org">The organization which is migrating.</param>
            <param name="id">Migration Id of the organization.</param>
            <returns>A <see cref="T:Octokit.Migration"/> object representing the state of migration.</returns>
        </member>
        <member name="M:Octokit.IMigrationsClient.GetArchive(System.String,System.Int32)">
            <summary>
            Get the migration archive.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#download-a-migration-archive
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <returns>The binary contents of the archive as a byte array.</returns>
        </member>
        <member name="M:Octokit.IMigrationsClient.DeleteArchive(System.String,System.Int32)">
            <summary>
            Deletes a previous migration archive.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#delete-a-migration-archive
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMigrationsClient.UnlockRepository(System.String,System.Int32,System.String)">
            <summary>
            Unlocks a repository that was locked for migration.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#unlock-a-repository
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <param name="repo">The repo to unlock.</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IMilestonesClient">
            <summary>
            A client for GitHub's Issue Milestones API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/milestones/">Issue Milestones API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IMilestonesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Milestone by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#get-a-single-milestone
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Milestone by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#get-a-single-milestone
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.GetAllForRepository(System.String,System.String,Octokit.MilestoneRequest)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.GetAllForRepository(System.Int64,Octokit.MilestoneRequest)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.GetAllForRepository(System.String,System.String,Octokit.MilestoneRequest,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.GetAllForRepository(System.Int64,Octokit.MilestoneRequest,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.Create(System.String,System.String,Octokit.NewMilestone)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#create-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newMilestone">A <see cref="T:Octokit.NewMilestone"/> instance describing the new Milestone to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.Create(System.Int64,Octokit.NewMilestone)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#create-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newMilestone">A <see cref="T:Octokit.NewMilestone"/> instance describing the new Milestone to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.Update(System.String,System.String,System.Int32,Octokit.MilestoneUpdate)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#update-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Milestone number</param>
            <param name="milestoneUpdate">An <see cref="T:Octokit.MilestoneUpdate"/> instance describing the changes to make to the Milestone
            </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.Update(System.Int64,System.Int32,Octokit.MilestoneUpdate)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#update-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Milestone number</param>
            <param name="milestoneUpdate">An <see cref="T:Octokit.MilestoneUpdate"/> instance describing the changes to make to the Milestone
            </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#delete-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The milestone number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IMilestonesClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#delete-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The milestone number</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IMiscellaneousClient">
            <summary>
            A client for GitHub's miscellaneous APIs.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/misc/">Miscellaneous API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IMiscellaneousClient.GetAllEmojis">
            <summary>
            Gets all the emojis available to use on GitHub.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> of emoji and their URI.</returns>
        </member>
        <member name="M:Octokit.IMiscellaneousClient.RenderRawMarkdown(System.String)">
            <summary>
            Gets the rendered Markdown for the specified plain-text Markdown document.
            </summary>
            <param name="markdown">A plain-text Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="M:Octokit.IMiscellaneousClient.RenderArbitraryMarkdown(Octokit.NewArbitraryMarkdown)">
            <summary>
            Gets the rendered Markdown for an arbitrary markdown document.
            </summary>
            <param name="markdown">An arbitrary Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="M:Octokit.IMiscellaneousClient.GetAllGitIgnoreTemplates">
            <summary>
            List all templates available to pass as an option when creating a repository.
            </summary>
            <returns>A list of template names</returns>
        </member>
        <member name="M:Octokit.IMiscellaneousClient.GetGitIgnoreTemplate(System.String)">
            <summary>
            Retrieves the source for a single GitIgnore template
            </summary>
            <param name="templateName"></param>
            <returns>A template and its source</returns>
        </member>
        <member name="M:Octokit.IMiscellaneousClient.GetAllLicenses">
            <summary>
            Returns a list of the licenses shown in the license picker on GitHub.com. This is not a comprehensive
            list of all possible OSS licenses.
            </summary>
            <returns>A list of licenses available on the site</returns>
        </member>
        <member name="M:Octokit.IMiscellaneousClient.GetAllLicenses(Octokit.ApiOptions)">
            <summary>
            Returns a list of the licenses shown in the license picker on GitHub.com. This is not a comprehensive
            list of all possible OSS licenses.
            </summary>
            <param name="options">Options for changing the API response</param>
            <returns>A list of licenses available on the site</returns>
        </member>
        <member name="M:Octokit.IMiscellaneousClient.GetLicense(System.String)">
            <summary>
            Retrieves a license based on the license key such as "MIT"
            </summary>
            <param name="key">The license identifier to look for</param>
            <returns>A <see cref="T:Octokit.License" /> that includes the license key, text, and attributes of the license.</returns>
        </member>
        <member name="M:Octokit.IMiscellaneousClient.GetRateLimits">
            <summary>
            Gets API Rate Limits (API service rather than header info).
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.MiscellaneousRateLimit"/> of Rate Limits.</returns>
        </member>
        <member name="M:Octokit.IMiscellaneousClient.GetMetadata">
            <summary>
            Retrieves information about GitHub.com, the service or a GitHub Enterprise installation.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.Meta"/> containing metadata about the GitHub instance.</returns>
        </member>
        <member name="T:Octokit.INotificationsClient">
            <summary>
            A client for GitHub's Activity Notifications API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/notifications/">Activity Notifications API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForCurrent">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForCurrent(Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForCurrent(Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForRepository(System.Int64)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForRepository(System.String,System.String,Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForRepository(System.Int64,Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForRepository(System.String,System.String,Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.GetAllForRepository(System.Int64,Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.INotificationsClient.MarkAsRead">
            <summary>
            Marks all notifications as read.
            </summary>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-as-read</remarks>
        </member>
        <member name="M:Octokit.INotificationsClient.MarkAsRead(Octokit.MarkAsReadRequest)">
            <summary>
            Marks all notifications as read.
            </summary>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-as-read</remarks>
        </member>
        <member name="M:Octokit.INotificationsClient.MarkAsReadForRepository(System.String,System.String)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.INotificationsClient.MarkAsReadForRepository(System.Int64)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.INotificationsClient.MarkAsReadForRepository(System.String,System.String,Octokit.MarkAsReadRequest)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.INotificationsClient.MarkAsReadForRepository(System.Int64,Octokit.MarkAsReadRequest)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.INotificationsClient.Get(System.Int32)">
            <summary>
            Retrives a single <see cref="T:Octokit.Notification"/> by Id.
            </summary>
            <param name="id">The Id of the notification to retrieve.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#view-a-single-thread</remarks>
        </member>
        <member name="M:Octokit.INotificationsClient.MarkAsRead(System.Int32)">
            <summary>
            Marks a single notification as read.
            </summary>
            <param name="id">The id of the notification.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-a-thread-as-read</remarks>
        </member>
        <member name="M:Octokit.INotificationsClient.GetThreadSubscription(System.Int32)">
            <summary>
            Retrives a <see cref="T:Octokit.ThreadSubscription"/> for the provided thread id.
            </summary>
            <param name="id">The Id of the thread to retrieve subscription status.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#get-a-thread-subscription</remarks>
        </member>
        <member name="M:Octokit.INotificationsClient.SetThreadSubscription(System.Int32,Octokit.NewThreadSubscription)">
            <summary>
            Sets the authenticated user's subscription settings for a given thread.
            </summary>
            <param name="id">The Id of the thread to update.</param>
            <param name="threadSubscription">The subscription parameters to set.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#set-a-thread-subscription</remarks>
        </member>
        <member name="M:Octokit.INotificationsClient.DeleteThreadSubscription(System.Int32)">
            <summary>
            Deletes the authenticated user's subscription to a given thread.
            </summary>
            <param name="id">The Id of the thread to delete subscription from.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription</remarks>
        </member>
        <member name="T:Octokit.IOauthClient">
            <summary>
            Provides methods used in the OAuth web flow.
            </summary>
        </member>
        <member name="M:Octokit.IOauthClient.GetGitHubLoginUrl(Octokit.OauthLoginRequest)">
            <summary>
            Gets the URL used in the first step of the web flow. The Web application should redirect to this URL.
            </summary>
            <param name="request">Parameters to the Oauth web flow login url</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOauthClient.CreateAccessToken(Octokit.OauthTokenRequest)">
            <summary>
            Makes a request to get an access token using the code returned when GitHub.com redirects back from the URL
            <see cref="M:Octokit.IOauthClient.GetGitHubLoginUrl(Octokit.OauthLoginRequest)">GitHub login url</see> to the application.
            </summary>
            <remarks>
            If the user accepts your request, GitHub redirects back to your site with a temporary code in a code
            parameter as well as the state you provided in the previous step in a state parameter. If the states don’t
            match, the request has been created by a third party and the process should be aborted. Exchange this for
            an access token using this method.
            </remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOauthClient.InitiateDeviceFlow(Octokit.OauthDeviceFlowRequest)">
            <summary>
            Makes a request to initiate the device flow authentication.
            </summary>
            <remarks>
            Returns a user verification code and verification URL that the you will use to prompt the user to authenticate.
            This request also returns a device verification code that you must use to receive an access token to check the status of user authentication.
            </remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOauthClient.CreateAccessTokenForDeviceFlow(System.String,Octokit.OauthDeviceFlowResponse)">
            <summary>
            Makes a request to get an access token using the response from <see cref="M:Octokit.IOauthClient.InitiateDeviceFlow(Octokit.OauthDeviceFlowRequest)"/>.
            </summary>
            <remarks>
            Will poll the access token endpoint, until the device and user codes expire or the user has successfully authorized the app with a valid user code.
            </remarks>
            <param name="clientId">The client Id you received from GitHub when you registered the application.</param>
            <param name="deviceFlowResponse">The response you received from <see cref="M:Octokit.IOauthClient.InitiateDeviceFlow(Octokit.OauthDeviceFlowRequest)"/></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOauthClient.CreateAccessTokenFromRenewalToken(Octokit.OauthTokenRenewalRequest)">
            <summary>
            Makes a request to get an access token using the refresh token returned in <see cref="M:Octokit.IOauthClient.CreateAccessToken(Octokit.OauthTokenRequest)"/>.
            </summary>
            <param name="request">Token renewal request.</param>
            <returns><see cref="T:Octokit.OauthToken"/> with the new token set.</returns>
        </member>
        <member name="T:Octokit.IOrganizationActionsClient">
            <summary>
            A client for GitHub's Org Actions API.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions"> Actions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IOrganizationActionsClient.Secrets">
            <summary>
            Returns a client to manage organization secrets.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions#secrets"> Secrets API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.IOrganizationHooksClient">
            <summary>
            A client for GitHub's Organization Webhooks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/hooks/">Webhooks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IOrganizationHooksClient.GetAll(System.String)">
            <summary>
            Gets the list of hooks defined for a organization
            </summary>
            <param name="org">The organizations name</param>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#list-hooks">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IOrganizationHooksClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of hooks defined for a organization
            </summary>
            <param name="org">The organizations name</param>
            <param name="options">Options for changing the API response</param>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#list-hooks">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IOrganizationHooksClient.Get(System.String,System.Int32)">
            <summary>
            Gets a single hook by Id
            </summary>
            <param name="org">The organizations name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#get-single-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IOrganizationHooksClient.Create(System.String,Octokit.NewOrganizationHook)">
            <summary>
            Creates a hook for a organization
            </summary>
            <param name="org">The organizations name</param>
            <param name="hook">The hook's parameters</param>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#create-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IOrganizationHooksClient.Edit(System.String,System.Int32,Octokit.EditOrganizationHook)">
            <summary>
            Edits a hook for a organization
            </summary>
            <param name="org">The organizations name</param>
            <param name="hookId">The organizations hook id</param>
            <param name="hook">The hook's parameters</param>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IOrganizationHooksClient.Ping(System.String,System.Int32)">
            <summary>
            This will trigger a ping event to be sent to the hook.
            </summary>
            <param name="org">The organizations name</param>
            <param name="hookId">The organizations hook id</param>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#ping-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IOrganizationHooksClient.Delete(System.String,System.Int32)">
            <summary>
            Deletes a hook for a organization
            </summary>
            <param name="org">The organizations name</param>
            <param name="hookId">The organizations hook id</param>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#delete-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="T:Octokit.IOrganizationMembersClient">
            <summary>
            A client for GitHub's Organization Members API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/">Orgs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAll(System.String)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersRole)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersRole,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.OrganizationMembersRole)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.OrganizationMembersRole,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAllPublic(System.String)">
            <summary>
            List all users who have publicized their membership of the organization.
            </summary>
            <remarks>http://developer.github.com/v3/orgs/members/#public-members-list</remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAllPublic(System.String,Octokit.ApiOptions)">
            <summary>
            List all users who have publicized their membership of the organization.
            </summary>
            <remarks>http://developer.github.com/v3/orgs/members/#public-members-list</remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.CheckMember(System.String,System.String)">
            <summary>
            Check if a user is, publicly or privately, a member of the organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#check-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.CheckMemberPublic(System.String,System.String)">
            <summary>
            Check is a user is publicly a member of the organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#check-public-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.Delete(System.String,System.String)">
            <summary>
            Removes a user from the organization, this will also remove them from all teams
            within the organization and they will no longer have any access to the organization's
            repositories.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#remove-a-member">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.Publicize(System.String,System.String)">
            <summary>
            Make the authenticated user's organization membership public.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/orgs/members/#publicize-a-users-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.Conceal(System.String,System.String)">
            <summary>
            Make the authenticated user's organization membership private.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/orgs/members/#conceal-a-users-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetOrganizationMembership(System.String,System.String)">
            <summary>
            Get a user's membership with an organization.
            </summary>
            <remarks>
            This method requires authentication.
            The authenticated user must be an organization member.
            See the <a href="https://developer.github.com/v3/orgs/members/#get-organization-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.AddOrUpdateOrganizationMembership(System.String,System.String,Octokit.OrganizationMembershipUpdate)">
            <summary>
            Add a user to the organization or update the user's role withing the organization.
            </summary>
            <remarks>
            This method requires authentication.
            The authenticated user must be an organization owner.
            See the <a href="https://developer.github.com/v3/orgs/members/#add-or-update-organization-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <param name="addOrUpdateRequest">An <see cref="T:Octokit.OrganizationMembershipUpdate"/> instance describing the
            changes to make to the user's organization membership</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.CreateOrganizationInvitation(System.String,Octokit.OrganizationInvitationRequest)">
            <summary>
            Create an organization invitation for a user
            </summary>
            <remarks>
            This method requires authentication.
            The authenticated user must be an organization owner.
            See the <a href="https://developer.github.com/v3/orgs/members/#create-an-organization-invitation">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="invitationRequest">An <see cref="T:Octokit.OrganizationInvitationRequest"/> instance containing the
            details of the organization invitation</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.RemoveOrganizationMembership(System.String,System.String)">
            <summary>
            Remove a user's membership with an organization.
            </summary>
            <remarks>
            This method requires authentication.
            The authenticated user must be an organization owner.
            See the <a href="https://developer.github.com/v3/orgs/members/#remove-organization-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAllPendingInvitations(System.String)">
            <summary>
            List all pending invitations for the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAllPendingInvitations(System.String,Octokit.ApiOptions)">
            <summary>
            List all pending invitations for the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options to change API behaviour</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAllFailedInvitations(System.String)">
            <summary>
            List failed organization invitations.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/orgs/members#list-failed-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAllFailedInvitations(System.String,Octokit.ApiOptions)">
            <summary>
            List failed organization invitations.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/orgs/members#list-failed-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options to change API behaviour</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.CancelOrganizationInvitation(System.String,System.Int32)">
            <summary>
            Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an organization owner.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/orgs/members#cancel-an-organization-invitation">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="invitationId">The unique identifier of the invitation</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAllOrganizationMembershipsForCurrent">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationMembership" />s for the current user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/orgs/members#list-organization-memberships-for-the-authenticated-user">API Documentation</a>
            for more information.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the current user's <see cref="T:Octokit.OrganizationMembership"/>s.</returns>
        </member>
        <member name="M:Octokit.IOrganizationMembersClient.GetAllOrganizationMembershipsForCurrent(Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationMembership" />s for the current user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/orgs/members#list-organization-memberships-for-the-authenticated-user">API Documentation</a>
            for more information.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <param name="options">Options to change API behaviour</param>
            <returns>A list of the current user's <see cref="T:Octokit.OrganizationMembership"/>s.</returns>
        </member>
        <member name="M:Octokit.IOrganizationOutsideCollaboratorsClient.GetAll(System.String)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.OrganizationMembersFilter)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.ApiOptions)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.IOrganizationOutsideCollaboratorsClient.Delete(System.String,System.String)">
            <summary>
            Removes a user as an outside collaborator from the organization, this will remove them from all repositories
            within the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login of the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IOrganizationOutsideCollaboratorsClient.ConvertFromMember(System.String,System.String)">
            <summary>
            Converts an organization member to an outside collaborator, 
            when an organization member is converted to an outside collaborator, 
            they'll only have access to the repositories that their current team membership allows. 
            The user will no longer be a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator"> API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IOrganizationsClient">
            <summary>
            A client for GitHub's Orgs API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/">Orgs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IOrganizationsClient.Member">
            <summary>
            Returns a client to manage members of an organization.
            </summary>
        </member>
        <member name="P:Octokit.IOrganizationsClient.Team">
            <summary>
            Returns a client to manage teams of an organization.
            </summary>
        </member>
        <member name="P:Octokit.IOrganizationsClient.Hook">
            <summary>
            A client for GitHub's Organization Hooks API.
            </summary>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/">Hooks API documentation</a> for more information.</remarks>
        </member>
        <member name="P:Octokit.IOrganizationsClient.OutsideCollaborator">
            <summary>
            Returns a client to manage outside collaborators of an organization.
            </summary>
        </member>
        <member name="P:Octokit.IOrganizationsClient.Actions">
            <summary>
            Returns a client to manage organization actions.
            </summary>
        </member>
        <member name="M:Octokit.IOrganizationsClient.Get(System.String)">
            <summary>
            Returns the specified <see cref="T:Octokit.Organization"/>.
            </summary>
            <param name="org">login of the organization to get</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The specified <see cref="T:Octokit.Organization"/>.</returns>
        </member>
        <member name="M:Octokit.IOrganizationsClient.GetAllForCurrent">
            <summary>
            Returns all <see cref="T:Octokit.Organization" />s for the current user.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the current user's <see cref="T:Octokit.Organization"/>s.</returns>
        </member>
        <member name="M:Octokit.IOrganizationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.Organization" />s for the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the current user's <see cref="T:Octokit.Organization"/>s.</returns>
        </member>
        <member name="M:Octokit.IOrganizationsClient.GetAllForUser(System.String)">
            <summary>
            Returns <see cref="T:Octokit.Organization" />s which the specified user is a member of,
            where the user hasn't marked their membership as private.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>
            A list of the <see cref="T:Octokit.Organization"/>s which the specified user is a member
            of, where they haven't marked their membership as private
            </returns>
        </member>
        <member name="M:Octokit.IOrganizationsClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Returns <see cref="T:Octokit.Organization" />s which the specified user is a member of,
            where the user hasn't marked their membership as private.
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>
            A list of the <see cref="T:Octokit.Organization"/>s which the specified user is a member
            of, where they haven't marked their membership as private
            </returns>
        </member>
        <member name="M:Octokit.IOrganizationsClient.GetAll">
            <summary>
            Returns all <see cref="T:Octokit.Organization" />s.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of <see cref="T:Octokit.Organization"/>s.</returns>
        </member>
        <member name="M:Octokit.IOrganizationsClient.GetAll(Octokit.OrganizationRequest)">
            <summary>
            Returns all <see cref="T:Octokit.Organization" />s.
            </summary>
            <param name="request">Search parameters of the last organization seen</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of <see cref="T:Octokit.Organization"/>s.</returns>
        </member>
        <member name="M:Octokit.IOrganizationsClient.Update(System.String,Octokit.OrganizationUpdate)">
            <summary>
            Update the specified organization with data from <see cref="T:Octokit.OrganizationUpdate"/>.
            </summary>
            <param name="org">The name of the organization to update.</param>
            <param name="updateRequest"></param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.Organization"/></returns>
        </member>
        <member name="M:Octokit.IOrganizationsClient.GetAllAuthorizations(System.String)">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationCredential" />s.
            </summary>
            <param name="org">The organization name.</param>
            <returns>A list of <see cref="T:Octokit.OrganizationCredential"/>s.</returns>
        </member>
        <member name="M:Octokit.IOrganizationsClient.GetAllAuthorizations(System.String,Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationCredential" />s.
            </summary>
            <param name="org">The organization name.</param>
            <param name="options">Options for changing the API response</param>
            <returns>A list of <see cref="T:Octokit.OrganizationCredential"/>s.</returns>
        </member>
        <member name="M:Octokit.IOrganizationsClient.GetAllAuthorizations(System.String,System.String)">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationCredential" />s.
            </summary>
            <param name="org">The organization name.</param>
            <param name="login">Limits the list of credentials authorizations for an organization to a specific login</param>
            <returns>A list of <see cref="T:Octokit.OrganizationCredential"/>s.</returns>
        </member>
        <member name="M:Octokit.IOrganizationsClient.GetAllAuthorizations(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationCredential" />s.
            </summary>
            <param name="org">The organization name.</param>
            <param name="login">Limits the list of credentials authorizations for an organization to a specific login</param>
            <param name="options">Options for changing the API response</param>
            <returns>A list of <see cref="T:Octokit.OrganizationCredential"/>s.</returns>
        </member>
        <member name="T:Octokit.IOrganizationSecretsClient">
            <summary>
            A client for GitHub's Organization Secrets API.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions#secrets">Organization Secrets API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IOrganizationSecretsClient.GetPublicKey(System.String)">
            <summary>
            Get the public signing key to encrypt secrets for an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions#get-an-organization-public-key">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.SecretsPublicKey"/> instance for the organization public key.</returns>
        </member>
        <member name="M:Octokit.IOrganizationSecretsClient.GetAll(System.String)">
            <summary>
            List the secrets for an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions#list-organization-secrets">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.OrganizationSecretsCollection"/> instance for the list of organization secrets.</returns>
        </member>
        <member name="M:Octokit.IOrganizationSecretsClient.Get(System.String,System.String)">
            <summary>
            Get a secret from an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions#get-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.OrganizationSecret"/> instance for the organization secret.</returns>
        </member>
        <member name="M:Octokit.IOrganizationSecretsClient.CreateOrUpdate(System.String,System.String,Octokit.UpsertOrganizationSecret)">
            <summary>
            Create or update a secret in an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions#create-or-update-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <param name="upsertSecret">The encrypted value, id of the encryption key, and visibility info to upsert</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.OrganizationSecret"/> instance for the organization secret that was created or updated.</returns>
        </member>
        <member name="M:Octokit.IOrganizationSecretsClient.Delete(System.String,System.String)">
            <summary>
            Delete a secret in an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions#delete-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IOrganizationSecretsClient.GetSelectedRepositoriesForSecret(System.String,System.String)">
            <summary>
            Get the list of selected sites that have access to a secret.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions#list-selected-repositories-for-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IOrganizationSecretsClient.SetSelectedRepositoriesForSecret(System.String,System.String,Octokit.SelectedRepositoryCollection)">
            <summary>
            Set the list of selected sites that have access to a secret.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions#set-selected-repositories-for-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <param name="repositories">The list of repositories that should have access to view and use the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IOrganizationSecretsClient.AddRepoToOrganizationSecret(System.String,System.String,System.Int64)">
            <summary>
            Add a selected site to the visibility list of a secret.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions#add-selected-repository-to-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <param name="repoId">The id of the repo to add to the visibility list of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IOrganizationSecretsClient.RemoveRepoFromOrganizationSecret(System.String,System.String,System.Int64)">
            <summary>
            ARemoved a selected site from the visibility list of a secret.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions#remove-selected-repository-from-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <param name="repoId">The id of the repo to add to the visibility list of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IPackagesClient.GetAllForOrg(System.String,Octokit.PackageType,System.Nullable{Octokit.PackageVisibility})">
            <summary>
            List all packages for an organisations, readable by the current user
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#list-packages-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageVisibility">Optional: The visibility of the package</param>
        </member>
        <member name="M:Octokit.IPackagesClient.GetForOrg(System.String,Octokit.PackageType,System.String)">
            <summary>
            Get a specific package for an Organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.IPackagesClient.DeleteForOrg(System.String,Octokit.PackageType,System.String)">
            <summary>
            Delete a specific package for an Organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-a-package-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.IPackagesClient.RestoreForOrg(System.String,Octokit.PackageType,System.String)">
            <summary>
            Restore a specific package for an Organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-a-package-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.IPackagesClient.GetAllForActiveUser(Octokit.PackageType,System.Nullable{Octokit.PackageVisibility})">
            <summary>
            Lists packages owned by the authenticated user within the user's namespace
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#list-packages-for-the-authenticated-users-namespace">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageVisibility">Optional: The visibility of the package</param>
        </member>
        <member name="M:Octokit.IPackagesClient.GetForActiveUser(Octokit.PackageType,System.String)">
            <summary>
            Gets a specific package for a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.IPackagesClient.DeleteForActiveUser(Octokit.PackageType,System.String)">
            <summary>
            Deletes a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-a-package-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.IPackagesClient.RestoreForActiveUser(Octokit.PackageType,System.String)">
            <summary>
            Restores a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-a-package-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.IPackagesClient.GetAllForUser(System.String,Octokit.PackageType,System.Nullable{Octokit.PackageVisibility})">
            <summary>
            Lists packages owned by the authenticated user within the user's namespace
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#list-packages-for-the-authenticated-users-namespace">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageVisibility">Optional: The visibility of the package</param>
        </member>
        <member name="M:Octokit.IPackagesClient.GetForUser(System.String,Octokit.PackageType,System.String)">
            <summary>
            Gets a specific package metadata for a public package owned by a user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.IPackagesClient.DeleteForUser(System.String,Octokit.PackageType,System.String)">
            <summary>
            Deletes an entire package for a user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-a-package-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.IPackagesClient.RestoreForUser(System.String,Octokit.PackageType,System.String)">
            <summary>
            Restores an entire package for a user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-a-package-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.GetAllForOrg(System.String,Octokit.PackageType,System.String,Octokit.PackageVersionState,Octokit.ApiOptions)">
            <summary>
            List all versions of a package.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-all-package-versions-for-a-package-owned-by-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="state">Optional: Return packages with a state. Defaults to Active</param>
            <param name="options">Optional: Paging options</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.GetForOrg(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Get a specific version of a package.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-version-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.DeleteForOrg(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Deletes a specific package version in an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-package-version-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.RestoreForOrg(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Restores a specific package version in an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-package-version-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.GetAllForActiveUser(Octokit.PackageType,System.String,Octokit.PackageVersionState,Octokit.ApiOptions)">
            <summary>
            Returns all package versions for a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-all-package-versions-for-a-package-owned-by-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="state">Optional: Return packages with a state. Defaults to Active</param>
            <param name="options">Optional: Paging options</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.GetForActiveUser(Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Gets a specific package version for a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-version-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.DeleteForActiveUser(Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Deletes a specific package version for a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-a-package-version-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.RestoreForActiveUser(Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Restores a package version owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-a-package-version-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.GetAllForUser(System.String,Octokit.PackageType,System.String,Octokit.PackageVersionState,Octokit.ApiOptions)">
            <summary>
            Returns all package versions for a public package owned by a specified user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-all-package-versions-for-a-package-owned-by-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="state">Optional: Return packages with a state. Defaults to Active</param>
            <param name="options">Optional: Paging options</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.GetForUser(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Gets a specific package version for a public package owned by a specified user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-version-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.DeleteForUser(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Deletes a specific package version for a user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-package-version-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.IPackageVersionsClient.RestoreForUser(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Restores a specific package version for a user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-package-version-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="T:Octokit.IProjectCardsClient">
            <summary>
            A client for GitHub's Project Cards API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/cards/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IProjectCardsClient.GetAll(System.Int32)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
        </member>
        <member name="M:Octokit.IProjectCardsClient.GetAll(System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IProjectCardsClient.GetAll(System.Int32,Octokit.ProjectCardRequest)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="request">Used to filter the list of project cards returned</param>
        </member>
        <member name="M:Octokit.IProjectCardsClient.GetAll(System.Int32,Octokit.ProjectCardRequest,Octokit.ApiOptions)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="request">Used to filter the list of project cards returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IProjectCardsClient.Get(System.Int32)">
            <summary>
            Gets a single card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#get-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
        </member>
        <member name="M:Octokit.IProjectCardsClient.Create(System.Int32,Octokit.NewProjectCard)">
            <summary>
            Creates a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#create-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="newProjectCard">The card to create</param>
        </member>
        <member name="M:Octokit.IProjectCardsClient.Update(System.Int32,Octokit.ProjectCardUpdate)">
            <summary>
            Updates a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#update-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
            <param name="projectCardUpdate">New values to update the card with</param>
        </member>
        <member name="M:Octokit.IProjectCardsClient.Delete(System.Int32)">
            <summary>
            Deletes a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#delete-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
        </member>
        <member name="M:Octokit.IProjectCardsClient.Move(System.Int32,Octokit.ProjectCardMove)">
            <summary>
            Moves a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#move-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
            <param name="position">The position to move the card</param>
        </member>
        <member name="T:Octokit.IProjectColumnsClient">
            <summary>
            A client for GitHub's Project Columns API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/columns/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IProjectColumnsClient.GetAll(System.Int32)">
            <summary>
            Gets all columns.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#list-project-columns">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The Id of the project</param>
        </member>
        <member name="M:Octokit.IProjectColumnsClient.GetAll(System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all columns.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#list-project-columns">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The Id of the project</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IProjectColumnsClient.Get(System.Int32)">
            <summary>
            Gets a single column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#get-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
        </member>
        <member name="M:Octokit.IProjectColumnsClient.Create(System.Int32,Octokit.NewProjectColumn)">
            <summary>
            Creates a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#create-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The Id of the project</param>
            <param name="newProjectColumn">The column to create</param>
        </member>
        <member name="M:Octokit.IProjectColumnsClient.Update(System.Int32,Octokit.ProjectColumnUpdate)">
            <summary>
            Updates a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#update-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
            <param name="projectColumnUpdate">New values to update the column with</param>
        </member>
        <member name="M:Octokit.IProjectColumnsClient.Delete(System.Int32)">
            <summary>
            Deletes a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#delete-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
        </member>
        <member name="M:Octokit.IProjectColumnsClient.Move(System.Int32,Octokit.ProjectColumnMove)">
            <summary>
            Moves a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#move-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
            <param name="position">The position to move the column</param>
        </member>
        <member name="T:Octokit.IProjectsClient">
            <summary>
            A client for GitHub's Repository Projects API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ProjectRequest)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForRepository(System.Int64)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForRepository(System.Int64,Octokit.ProjectRequest)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForRepository(System.Int64,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForOrganization(System.String)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForOrganization(System.String,Octokit.ProjectRequest)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IProjectsClient.GetAllForOrganization(System.String,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IProjectsClient.Get(System.Int32)">
            <summary>
            Gets a single project for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#get-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
        </member>
        <member name="M:Octokit.IProjectsClient.CreateForRepository(System.Int64,Octokit.NewProject)">
            <summary>
            Creates a project for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#create-a-repository-project">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="newProject">The new project to create for this repository</param>
        </member>
        <member name="M:Octokit.IProjectsClient.CreateForOrganization(System.String,Octokit.NewProject)">
            <summary>
            Creates a project for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#create-an-organization-project">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="newProject">The new project to create for this repository</param>
        </member>
        <member name="M:Octokit.IProjectsClient.Update(System.Int32,Octokit.ProjectUpdate)">
            <summary>
            Updates a project for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#update-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
            <param name="projectUpdate">The modified project</param>
        </member>
        <member name="M:Octokit.IProjectsClient.Delete(System.Int32)">
            <summary>
            Deletes a project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#delete-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
        </member>
        <member name="P:Octokit.IProjectsClient.Card">
            <summary>
            A client for GitHub's Project Cards API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/cards/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IProjectsClient.Column">
            <summary>
            A client for GitHub's Project Columns API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/columns/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.IPullRequestReviewCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions/">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentReactionsClient.Delete(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Pull Request comment
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-a-pull-request-comment-reaction</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="commentId">The issue id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentReactionsClient.Delete(System.Int64,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Pull Request comment
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-a-pull-request-comment-reaction</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="commentId">The issue id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IPullRequestReviewCommentsClient">
            <summary>
            A client for GitHub's Pull Request Review Comments API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/comments/">Review Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestReviewCommentRequest)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.PullRequestReviewCommentRequest)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestReviewCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.PullRequestReviewCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetComment(System.String,System.String,System.Int32)">
            <summary>
            Gets a single pull request review comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#get-a-single-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.GetComment(System.Int64,System.Int32)">
            <summary>
            Gets a single pull request review comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#get-a-single-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentCreate)">
            <summary>
            Creates a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewCommentCreate)">
            <summary>
            Creates a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.CreateReply(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentReplyCreate)">
            <summary>
            Creates a comment on a pull request review as a reply to another comment.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.CreateReply(System.Int64,System.Int32,Octokit.PullRequestReviewCommentReplyCreate)">
            <summary>
            Creates a comment on a pull request review as a reply to another comment.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.Edit(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentEdit)">
            <summary>
            Edits a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#edit-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="comment">The edited comment</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.Edit(System.Int64,System.Int32,Octokit.PullRequestReviewCommentEdit)">
            <summary>
            Edits a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#edit-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="comment">The edited comment</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#delete-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#delete-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="T:Octokit.IPullRequestReviewRequestsClient">
            <summary>
            A client for GitHub's Pull Request Review Requests API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/review_requests/">Review Requests API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IPullRequestReviewRequestsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewRequestsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewRequestsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Creates review requests on a pull request for specified users.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#create-a-review-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="users">List of logins of user will be requested for review</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewRequestsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Creates review requests on a pull request for specified users.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#create-a-review-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="users">List of logins of user will be requested for review</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewRequestsClient.Delete(System.String,System.String,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Deletes review request for given users on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="users">List of logins of users that will be not longer requested for review</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewRequestsClient.Delete(System.Int64,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Deletes review request for given users on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="users">List of logins of users that will be not longer requested for review</param>
        </member>
        <member name="T:Octokit.IPullRequestReviewsClient">
            <summary>
            A client for GitHub's Pull Request Review API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/reviews/">Review API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.Get(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Gets a single pull request review by ID.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.Get(System.Int64,System.Int32,System.Int64)">
            <summary>
            Gets a single pull request review by ID.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewCreate)">
            <summary>
            Creates a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="review">The review</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewCreate)">
            <summary>
            Creates a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="review">The review</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.Delete(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Deletes a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.Delete(System.Int64,System.Int32,System.Int64)">
            <summary>
            Deletes a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.Submit(System.String,System.String,System.Int32,System.Int64,Octokit.PullRequestReviewSubmit)">
            <summary>
            Submits a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="submitMessage">The message and event being submitted for the review</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.Submit(System.Int64,System.Int32,System.Int64,Octokit.PullRequestReviewSubmit)">
            <summary>
            Submits a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="submitMessage">The message and event being submitted for the review</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.Dismiss(System.String,System.String,System.Int32,System.Int64,Octokit.PullRequestReviewDismiss)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="dismissMessage">The message indicating why the review was dismissed</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.Dismiss(System.Int64,System.Int32,System.Int64,Octokit.PullRequestReviewDismiss)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="dismissMessage">The message indicating why the review was dismissed</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.GetAllComments(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Lists comments for a single review
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.GetAllComments(System.Int64,System.Int32,System.Int64)">
            <summary>
            Lists comments for a single review
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.GetAllComments(System.String,System.String,System.Int32,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists comments for a single review
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestReviewsClient.GetAllComments(System.Int64,System.Int32,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists comments for a single review
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.IPullRequestsClient">
            <summary>
            A client for GitHub's Pull Requests API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/notifications/">Pull Requests API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IPullRequestsClient.Review">
            <summary>
            Client for managing reviews.
            </summary>
        </member>
        <member name="P:Octokit.IPullRequestsClient.ReviewComment">
            <summary>
            Client for managing review comments.
            </summary>
        </member>
        <member name="P:Octokit.IPullRequestsClient.ReviewRequest">
            <summary>
            Client for managing review requests.
            </summary>
        </member>
        <member name="P:Octokit.IPullRequestsClient.LockUnlock">
            <summary>
            Client for locking/unlocking a coversation on a pull request
            </summary>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Get a pull request by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#get-a-single-pull-request
            </remarks>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Get(System.Int64,System.Int32)">
            <summary>
            Get a pull request by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#get-a-single-pull-request
            </remarks>
        </member>
        <member name="M:Octokit.IPullRequestsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Get all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.GetAllForRepository(System.Int64)">
            <summary>
            Get all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Get all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Get all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestRequest)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.GetAllForRepository(System.Int64,Octokit.PullRequestRequest)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestRequest,Octokit.ApiOptions)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.GetAllForRepository(System.Int64,Octokit.PullRequestRequest,Octokit.ApiOptions)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Create(System.String,System.String,Octokit.NewPullRequest)">
            <summary>
            Create a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#create-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newPullRequest">A <see cref="T:Octokit.NewPullRequest"/> instance describing the new PullRequest to create</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Create(System.Int64,Octokit.NewPullRequest)">
            <summary>
            Create a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#create-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newPullRequest">A <see cref="T:Octokit.NewPullRequest"/> instance describing the new PullRequest to create</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Update(System.String,System.String,System.Int32,Octokit.PullRequestUpdate)">
            <summary>
            Create a pull request for the specified repository. 
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#update-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The PullRequest number</param>
            <param name="pullRequestUpdate">An <see cref="T:Octokit.PullRequestUpdate"/> instance describing the changes to make to the PullRequest
            </param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Update(System.Int64,System.Int32,Octokit.PullRequestUpdate)">
            <summary>
            Create a pull request for the specified repository. 
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#update-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The PullRequest number</param>
            <param name="pullRequestUpdate">An <see cref="T:Octokit.PullRequestUpdate"/> instance describing the changes to make to the PullRequest
            </param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Merge(System.String,System.String,System.Int32,Octokit.MergePullRequest)">
            <summary>
            Merge a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#merge-a-pull-request-merge-buttontrade</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="mergePullRequest">A <see cref="T:Octokit.MergePullRequest"/> instance describing a pull request merge</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Merge(System.Int64,System.Int32,Octokit.MergePullRequest)">
            <summary>
            Merge a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#merge-a-pull-request-merge-buttontrade</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="mergePullRequest">A <see cref="T:Octokit.MergePullRequest"/> instance describing a pull request merge</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Merged(System.String,System.String,System.Int32)">
            <summary>
            Get the pull request merge status.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Merged(System.Int64,System.Int32)">
            <summary>
            Get the pull request merge status.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Commits(System.String,System.String,System.Int32)">
            <summary>
            Get the list of commits on a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#list-commits-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Commits(System.Int64,System.Int32)">
            <summary>
            Get the list of commits on a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#list-commits-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Files(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Files(System.String,System.String,System.Int32)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Files(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IPullRequestsClient.Files(System.Int64,System.Int32)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="T:Octokit.IRateLimitClient">
            <summary>
            A client for GitHub's rate-limit APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/rate-limit">Rate-Limit API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IRateLimitClient.GetRateLimits">
            <summary>
            Gets API Rate Limits (API service rather than header info).
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.MiscellaneousRateLimit"/> of Rate Limits.</returns>
        </member>
        <member name="T:Octokit.IReactionsClient">
            <summary>
            A client for GitHub's Reactions Events API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/reactions/">Reactions API documentation</a> for more information
            </remarks>
        </member>
        <member name="P:Octokit.IReactionsClient.CommitComment">
            <summary>
            Access GitHub's Reactions API for Commit Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.IReactionsClient.Issue">
            <summary>
            Access GitHub's Reactions API for Issues.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.IReactionsClient.IssueComment">
            <summary>
            Access GitHub's Reactions API for Issue Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.IReactionsClient.PullRequestReviewComment">
            <summary>
            Access GitHub's Reactions API for Issue Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="T:Octokit.IReferencesClient">
            <summary>
            A client for GitHub's References API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/refs/">References API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IReferencesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference name</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.IReferencesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference name</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.IReferencesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IReferencesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IReferencesClient.GetAll(System.Int64)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IReferencesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IReferencesClient.GetAllForSubNamespace(System.String,System.String,System.String)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <remarks>
            The subNamespace parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.IReferencesClient.GetAllForSubNamespace(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <param name="options">Options for changing the API response</param>
            <remarks>
            The subNamespace parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.IReferencesClient.GetAllForSubNamespace(System.Int64,System.String)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <remarks>
            The subNamespace parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.IReferencesClient.GetAllForSubNamespace(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <param name="options">Options for changing the API response</param>
            <remarks>
            The subNamespace parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.IReferencesClient.Create(System.String,System.String,Octokit.NewReference)">
            <summary>
            Creates a reference for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#create-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference to create</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.IReferencesClient.Create(System.Int64,Octokit.NewReference)">
            <summary>
            Creates a reference for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#create-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IReferencesClient.Update(System.String,System.String,System.String,Octokit.ReferenceUpdate)">
            <summary>
            Updates a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#update-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference name</param>
            <param name="referenceUpdate">The updated reference data</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.IReferencesClient.Update(System.Int64,System.String,Octokit.ReferenceUpdate)">
            <summary>
            Updates a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#update-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference name</param>
            <param name="referenceUpdate">The updated reference data</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.IReferencesClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#delete-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference name</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.IReferencesClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#delete-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference name</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="T:Octokit.IReleasesClient">
            <summary>
            A client for GitHub's Releases API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/">Releases API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IReleasesClient.GenerateReleaseNotes(System.String,System.String,Octokit.GenerateReleaseNotesRequest)">
            <summary>
            Generates a <see cref="T:Octokit.GeneratedReleaseNotes"/>s for the specified repository with auto generated notes.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/releases/releases#generate-release-notes-content-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="data">The request for generating release notes</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GenerateReleaseNotes(System.Int64,Octokit.GenerateReleaseNotesRequest)">
            <summary>
            Generates a <see cref="T:Octokit.GeneratedReleaseNotes"/>s for the specified repository with auto generated notes.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/releases/releases#generate-release-notes-content-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="data">The request for generating release notes</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GetAll(System.Int64)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="tag">The tag of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="tag">The tag of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GetLatest(System.String,System.String)">
            <summary>
            Gets the latest <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/releases/#get-the-latest-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GetLatest(System.Int64)">
            <summary>
            Gets the latest <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/releases/#get-the-latest-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.Create(System.String,System.String,Octokit.NewRelease)">
            <summary>
            Creates a new <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#create-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="data">A description of the release to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.Create(System.Int64,Octokit.NewRelease)">
            <summary>
            Creates a new <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#create-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="data">A description of the release to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.Edit(System.String,System.String,System.Int32,Octokit.ReleaseUpdate)">
            <summary>
            Edits an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release</param>
            <param name="data">A description of the release to edit</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.Edit(System.Int64,System.Int32,Octokit.ReleaseUpdate)">
            <summary>
            Edits an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release</param>
            <param name="data">A description of the release to edit</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release to delete</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release to delete</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GetAllAssets(System.String,System.String,System.Int32)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GetAllAssets(System.Int64,System.Int32)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GetAllAssets(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GetAllAssets(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.UploadAsset(Octokit.Release,Octokit.ReleaseAssetUpload,System.Threading.CancellationToken)">
            <summary>
            Uploads a <see cref="T:Octokit.ReleaseAsset"/> for the specified release.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#upload-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="release">The <see cref="T:Octokit.Release"/> to attach the uploaded asset to</param>
            <param name="data">Description of the asset with its data</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IReleasesClient.GetAsset(System.String,System.String,System.Int32)">
            <summary>
            Gets the specified <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
        </member>
        <member name="M:Octokit.IReleasesClient.GetAsset(System.Int64,System.Int32)">
            <summary>
            Gets the specified <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
        </member>
        <member name="M:Octokit.IReleasesClient.EditAsset(System.String,System.String,System.Int32,Octokit.ReleaseAssetUpdate)">
            <summary>
            Edits the <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
            <param name="data">Description of the asset with its amended data</param>
        </member>
        <member name="M:Octokit.IReleasesClient.EditAsset(System.Int64,System.Int32,Octokit.ReleaseAssetUpdate)">
            <summary>
            Edits the <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
            <param name="data">Description of the asset with its amended data</param>
        </member>
        <member name="M:Octokit.IReleasesClient.DeleteAsset(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.ReleaseAsset"/> from the specified repository
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.ReleaseAsset"/>.</param>
        </member>
        <member name="M:Octokit.IReleasesClient.DeleteAsset(System.Int64,System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.ReleaseAsset"/> from the specified repository
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.ReleaseAsset"/>.</param>
        </member>
        <member name="T:Octokit.IRepoCollaboratorsClient">
            <summary>
            A client for GitHub's Collaborators API.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28">Collaborators API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.GetAll(System.Int64)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.GetAll(System.String,System.String,Octokit.RepositoryCollaboratorListRequest)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository collaborators</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.GetAll(System.Int64,Octokit.RepositoryCollaboratorListRequest)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="request">Used to request and filter a list of repository collaborators</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.GetAll(System.String,System.String,Octokit.RepositoryCollaboratorListRequest,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository collaborators</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.GetAll(System.Int64,Octokit.RepositoryCollaboratorListRequest,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="request">Used to request and filter a list of repository collaborators</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.IsCollaborator(System.String,System.String,System.String)">
            <summary>
            Checks if a user is a collaborator on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#get">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the prospective collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.IsCollaborator(System.Int64,System.String)">
            <summary>
            Checks if a user is a collaborator on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#get">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the prospective collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.ReviewPermission(System.String,System.String,System.String)">
            <summary>
            Review a user's permission level in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the collaborator to check permission for</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.ReviewPermission(System.Int64,System.String)">
            <summary>
            Review a user's permission level in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the collaborator to check permission for</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.Add(System.String,System.String,System.String)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.Add(System.String,System.String,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.Add(System.Int64,System.String)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.Add(System.Int64,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.Invite(System.String,System.String,System.String)">
            <summary>
            Invites a new collaborator to the repo
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="user">The name of the user to invite.</param>        
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.Invite(System.String,System.String,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Invites a new collaborator to the repo
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="user">The name of the user to invite.</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>        
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.Invite(System.Int64,System.String)">
            <summary>
            Invites a new collaborator to the repo
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository.</param>
            <param name="user">The name of the user to invite.</param>        
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.Invite(System.Int64,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Invites a new collaborator to the repo
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository.</param>
            <param name="user">The name of the user to invite.</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>        
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a collaborator from the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#remove-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the removed collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepoCollaboratorsClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a collaborator from the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#remove-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the removed collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.IRepositoriesClient">
            <summary>
            A client for GitHub's Repositories API.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/repos">Repositories API documentation</a> for more details.
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.PullRequest">
            <summary>
            Client for managing pull requests.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/pulls/">Pull Requests API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Actions">
            <summary>
            Client for managing Actions in a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions">Repository Actions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Autolinks">
            <summary>
            Client for managing Autolinks in a repository.
            </summary>
            <remarks>
             See the <a href="https://docs.github.com/en/rest/repos/autolinks">Repository Autolinks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Branch">
            <summary>
            Client for managing branches in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/">Branches API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Comment">
            <summary>
            Client for managing commit comments in a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/comments/">Repository Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.DeployKeys">
            <summary>
            Client for managing deploy keys in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/">Repository Deploy Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Content">
            <summary>
            Client for managing the contents of a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/">Repository Contents API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoriesClient.Create(Octokit.NewRepository)">
            <summary>
            Creates a new repository for the current user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#create">API documentation</a> for more information.
            </remarks>
            <param name="newRepository">A <see cref="T:Octokit.NewRepository"/> instance describing the new repository to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.Repository"/> instance for the created repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.Create(System.String,Octokit.NewRepository)">
            <summary>
            Creates a new repository in the specified organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#create">API documentation</a> for more information.
            </remarks>
            <param name="organizationLogin">Login of the organization in which to create the repository</param>
            <param name="newRepository">A <see cref="T:Octokit.NewRepository"/> instance describing the new repository to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.Repository"/> instance for the created repository</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.Generate(System.String,System.String,Octokit.NewRepositoryFromTemplate)">
            <summary>
            Creates a new repository from a template
            </summary>
            <param name="templateOwner">The organization or person who will owns the template</param>
            <param name="templateRepo">The name of template repository to work from</param>
            <param name="newRepository"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.Delete(System.String,System.String)">
            <summary>
            Deletes the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#delete-a-repository">API documentation</a> for more information.
            Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoriesClient.Delete(System.Int64)">
            <summary>
            Deletes the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#delete-a-repository">API documentation</a> for more information.
            Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoriesClient.Transfer(System.String,System.String,Octokit.RepositoryTransfer)">
            <summary>
            Transfers the ownership of the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#transfer-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The current owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="repositoryTransfer">Repository transfer information</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.Transfer(System.Int64,Octokit.RepositoryTransfer)">
            <summary>
            Transfers the ownership of the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#transfer-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="repositoryTransfer">Repository transfer information</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.AreVulnerabilityAlertsEnabled(System.String,System.String)">
            <summary>
            Checks if vulnerability alerts are enabled for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/reference/repos#check-if-vulnerability-alerts-are-enabled-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The current owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>A <c>bool</c> indicating if alerts are turned on or not.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.Get(System.String,System.String)">
            <summary>
            Gets the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#get">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.Get(System.Int64)">
            <summary>
            Gets the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#get">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllPublic">
            <summary>
            Gets all public repositories.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#list-all-public-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllPublic(Octokit.PublicRepositoryRequest)">
            <summary>
            Gets all public repositories since the integer Id of the last Repository that you've seen.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#list-all-public-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="request">Search parameters of the last repository seen</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllForCurrent">
            <summary>
            Gets all repositories owned by the current user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-your-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all repositories owned by the current user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-your-repositories">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllForCurrent(Octokit.RepositoryRequest)">
            <summary>
            Gets all repositories owned by the current user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-your-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="request">Search parameters to filter results on</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllForCurrent(Octokit.RepositoryRequest,Octokit.ApiOptions)">
            <summary>
            Gets all repositories owned by the current user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-your-repositories">API documentation</a> for more information.
            </remarks>
            <param name="request">Search parameters to filter results on</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllForUser(System.String)">
            <summary>
            Gets all repositories owned by the specified user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-user-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="login">The account name to search for</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all repositories owned by the specified user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-user-repositories">API documentation</a> for more information.
            </remarks>
            <param name="login">The account name to search for</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllForOrg(System.String)">
            <summary>
            Gets all repositories owned by the specified organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-organization-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="organization">The organization name to search for</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllForOrg(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all repositories owned by the specified organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-organization-repositories">API documentation</a> for more information.
            </remarks>
            <param name="organization">The organization name to search for</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Status">
            <summary>
            A client for GitHub's Commit Status API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/statuses/">Commit Status API documentation</a> for more
            details. Also check out the <a href="https://github.com/blog/1227-commit-status-api">blog post</a>
            that announced this feature.
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Hooks">
            <summary>
            A client for GitHub's Repository Hooks API.
            </summary>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/">Hooks API documentation</a> for more information.</remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Forks">
            <summary>
            A client for GitHub's Repository Forks API.
            </summary>
            <remarks>See <a href="http://developer.github.com/v3/repos/forks/">Forks API documentation</a> for more information.</remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Collaborator">
            <summary>
            A client for GitHub's Repo Collaborators.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/">Collaborators API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Deployment">
            <summary>
            Client for GitHub's Repository Deployments API
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/deployments/">Deployments API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Environment">
            <summary>
            Client for GitHub's Repository Environments API
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/deployments/environments/">Environments API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Statistics">
             <summary>
             Client for GitHub's Repository Statistics API.
             Note that the GitHub API uses caching on these endpoints,
             see <a href="https://developer.github.com/v3/repos/statistics/#a-word-about-caching">a word about caching</a> for more details.
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/repos/statistics/">Statistics API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Commit">
             <summary>
             Client for GitHub's Repository Commits API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/repos/commits/">Commits API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Release">
            <summary>
            Access GitHub's Releases API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/releases/
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Merging">
             <summary>
             Client for GitHub's Repository Merging API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/repos/merging/">Merging API documentation</a> for more details
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllContributors(System.String,System.String)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllContributors(System.Int64)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllContributors(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllContributors(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllContributors(System.String,System.String,System.Boolean)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllContributors(System.Int64,System.Boolean)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllContributors(System.String,System.String,System.Boolean,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllContributors(System.Int64,System.Boolean,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllLanguages(System.String,System.String)">
            <summary>
            Gets all languages for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-languages">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All languages used in the repository and the number of bytes of each language.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllLanguages(System.Int64)">
            <summary>
            Gets all languages for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-languages">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All languages used in the repository and the number of bytes of each language.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTeams(System.String,System.String)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTeams(System.Int64)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTeams(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTeams(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTags(System.String,System.String)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTags(System.Int64)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTags(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTags(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetLicenseContents(System.String,System.String)">
            <summary>
            Get the contents of a repository's license
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>Returns the contents of the repository's license file, if one is detected.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetLicenseContents(System.Int64)">
            <summary>
            Get the contents of a repository's license
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>Returns the contents of the repository's license file, if one is detected.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.Edit(System.String,System.String,Octokit.RepositoryUpdate)">
            <summary>
            Updates the specified repository with the values given in <paramref name="update"/>
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="update">New values to update the repository with</param>
            <returns>The updated <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.Edit(System.Int64,Octokit.RepositoryUpdate)">
            <summary>
            Updates the specified repository with the values given in <paramref name="update"/>
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="update">New values to update the repository with</param>
            <returns>The updated <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Page">
            <summary>
            A client for GitHub's Repository Pages API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/">Repository Pages API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Invitation">
            <summary>
            A client for GitHub's Repository Invitations API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/">Repository Invitations API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Traffic">
            <summary>
            Access GitHub's Repository Traffic API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/traffic/
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoriesClient.Project">
            <summary>
            Access GitHub's Repository Projects API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/projects/
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTopics(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all topics for the specified owner and repository name.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/reference/repos#get-all-repository-topics">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All topics associated with the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTopics(System.String,System.String)">
            <summary>
            Gets all topics for the specified owner and repository name.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/reference/repos#get-all-repository-topics">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All topics associated with the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTopics(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all topics for the specified repository ID.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/reference/repos#get-all-repository-topics">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All topics associated with the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllTopics(System.Int64)">
            <summary>
            Gets all topics for the specified repository ID.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/reference/repos#get-all-repository-topics">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
            <returns>All topics associated with the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.ReplaceAllTopics(System.Int64,Octokit.RepositoryTopics)">
             <summary>
             Replaces all topics for the specified repository.
             </summary>
             <remarks>
             See the <a href="https://docs.github.com/rest/reference/repos#replace-all-repository-topics">API documentation</a> for more details
            
             This is a replacement operation; it is not additive. To clear repository topics, for example, you could specify an empty list of topics here.
             </remarks>
             <param name="repositoryId">The ID of the repository</param>
             <param name="topics">The list of topics to associate with the repository</param>
             <returns>All topics now associated with the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.ReplaceAllTopics(System.String,System.String,Octokit.RepositoryTopics)">
             <summary>
             Replaces all topics for the specified repository.
             </summary>
             <remarks>
             See the <a href="https://docs.github.com/rest/reference/repos#replace-all-repository-topics">API documentation</a> for more details
            
             This is a replacement operation; it is not additive. To clear repository topics, for example, you could specify an empty list of topics here.
             </remarks>
             <param name="owner">The owner of the repository</param>
             <param name="name">The name of the repository</param>
             <param name="topics">The list of topics to associate with the repository</param>
             <returns>All topics now associated with the repository.</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllCodeOwnersErrors(System.String,System.String)">
            <summary>
            Gets the list of errors in the codeowners file
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>Returns the list of errors in the codeowners files</returns>
        </member>
        <member name="M:Octokit.IRepositoriesClient.GetAllCodeOwnersErrors(System.Int64)">
            <summary>
            Gets the list of errors in the codeowners file
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>Returns the list of errors in the codeowners files</returns>
        </member>
        <member name="T:Octokit.IRepositoryActionsClient">
            <summary>
            A client for GitHub's Repository Actions API.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions">Repository Actions API documentation</a> for more details.
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoryActionsClient.Secrets">
            <summary>
            Client for GitHub's Repository Actions API
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions">Deployments API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.IRepositoryActionsClient.Variables">
            <summary>
            Client for GitHub's Repository Actions API
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/reference/actions">Deployments API documentation</a> for more details
            </remarks>
        </member>
        <member name="T:Octokit.IRepositoryBranchesClient">
            <summary>
            A client for GitHub's Repository Branches API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches">Repository Branches API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAll(System.Int64)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets the specified branch.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.Get(System.Int64,System.String)">
            <summary>
            Gets the specified branch.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetBranchProtection(System.String,System.String,System.String)">
            <summary>
            Get the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetBranchProtection(System.Int64,System.String)">
            <summary>
            Get the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateBranchProtection(System.String,System.String,System.String,Octokit.BranchProtectionSettingsUpdate)">
            <summary>
            Update the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Branch protection settings</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateBranchProtection(System.Int64,System.String,Octokit.BranchProtectionSettingsUpdate)">
            <summary>
            Update the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Branch protection settings</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteBranchProtection(System.String,System.String,System.String)">
            <summary>
            Remove the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteBranchProtection(System.Int64,System.String)">
            <summary>
            Remove the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetRequiredStatusChecks(System.String,System.String,System.String)">
            <summary>
            Get the required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetRequiredStatusChecks(System.Int64,System.String)">
            <summary>
            Get the required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateRequiredStatusChecks(System.String,System.String,System.String,Octokit.BranchProtectionRequiredStatusChecksUpdate)">
            <summary>
            Replace required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Required status checks</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateRequiredStatusChecks(System.Int64,System.String,Octokit.BranchProtectionRequiredStatusChecksUpdate)">
            <summary>
            Replace required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Required status checks</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteRequiredStatusChecks(System.String,System.String,System.String)">
            <summary>
            Remove required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteRequiredStatusChecks(System.Int64,System.String)">
            <summary>
            Remove required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAllRequiredStatusChecksContexts(System.String,System.String,System.String)">
            <summary>
            Get the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAllRequiredStatusChecksContexts(System.Int64,System.String)">
            <summary>
            Get the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Replace the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to replace</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Replace the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to replace</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.AddRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Add the required status checks context for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to add</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.AddRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Add the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to add</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Remove the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to remove</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Remove the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to remove</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetReviewEnforcement(System.String,System.String,System.String)">
            <summary>
            Get required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetReviewEnforcement(System.Int64,System.String)">
            <summary>
            Get required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateReviewEnforcement(System.String,System.String,System.String,Octokit.BranchProtectionRequiredReviewsUpdate)">
            <summary>
            Update required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">The required pull request review settings</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateReviewEnforcement(System.Int64,System.String,Octokit.BranchProtectionRequiredReviewsUpdate)">
            <summary>
            Update required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">The required pull request review settings</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.RemoveReviewEnforcement(System.String,System.String,System.String)">
            <summary>
            Remove required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.RemoveReviewEnforcement(System.Int64,System.String)">
            <summary>
            Remove required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Get admin enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAdminEnforcement(System.Int64,System.String)">
            <summary>
            Get admin enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.AddAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Add admin enforcement to protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.AddAdminEnforcement(System.Int64,System.String)">
            <summary>
            Add admin enforcement to protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.RemoveAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Remove admin enforcement on protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.RemoveAdminEnforcement(System.Int64,System.String)">
            <summary>
            Remove admin enforcement on protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetProtectedBranchRestrictions(System.String,System.String,System.String)">
            <summary>
            Get restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetProtectedBranchRestrictions(System.Int64,System.String)">
            <summary>
            Get restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteProtectedBranchRestrictions(System.String,System.String,System.String)">
            <summary>
            Remove restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteProtectedBranchRestrictions(System.Int64,System.String)">
            <summary>
            Remove restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAllProtectedBranchTeamRestrictions(System.String,System.String,System.String)">
            <summary>
            Get team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAllProtectedBranchTeamRestrictions(System.Int64,System.String)">
            <summary>
            Get team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Replace team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Replace team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access to add</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.AddProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Add team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access to add</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.AddProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Add team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Remove team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams to remove</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Remove team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams to remove</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAllProtectedBranchUserRestrictions(System.String,System.String,System.String)">
            <summary>
            Get user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.GetAllProtectedBranchUserRestrictions(System.Int64,System.String)">
            <summary>
            Get user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Replace user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.UpdateProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Replace user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.AddProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Add user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to add</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.AddProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Add user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to add</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Remove user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to remove</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.DeleteProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Remove user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to remove</param>
        </member>
        <member name="M:Octokit.IRepositoryBranchesClient.RenameBranch(System.String,System.String,System.String,System.String)">
            <summary>
            Renames a branch in a repository
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/branches/branches?apiVersion=2022-11-28#rename-a-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repository">The name of the repository</param>
            <param name="branch">The name of the branch to rename</param>
            <param name="newName">The new name of the branch</param>
        </member>
        <member name="T:Octokit.IRepositoryCommentsClient">
            <summary>
            A client for GitHub's Repository Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/comments/">Repository Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Repository Comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#get-a-single-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Repository Comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#get-a-single-commit-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.GetAllForCommit(System.String,System.String,System.String)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha of the commit</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.GetAllForCommit(System.Int64,System.String)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha of the commit</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.GetAllForCommit(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha of the commit</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.GetAllForCommit(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha of the commit</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.Create(System.String,System.String,System.String,Octokit.NewCommitComment)">
            <summary>
            Creates a new Commit Comment for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#create-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha reference of commit</param>
            <param name="newCommitComment">The new comment to add to the commit</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.Create(System.Int64,System.String,Octokit.NewCommitComment)">
            <summary>
            Creates a new Commit Comment for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#create-a-commit-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha reference of commit</param>
            <param name="newCommitComment">The new comment to add to the commit</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.Update(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates a specified Commit Comment.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#update-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.Update(System.Int64,System.Int32,System.String)">
            <summary>
            Updates a specified Commit Comment.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#update-a-commit-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment number</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified Commit Comment
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#delete-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.IRepositoryCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes the specified Commit Comment
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#delete-a-commit-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="T:Octokit.IRepositoryCommitsClient">
            <summary>
            A client for GitHub's Repository Commits API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/commits/">Repository Commits API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.BranchesWhereHead(System.Int64,System.String)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha1">Used to find all branches where the given commit SHA is the HEAD, or latest commit for the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.BranchesWhereHead(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha1">Used to find all branches where the given commit SHA is the HEAD, or latest commit for the branch</param>
            /// <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.BranchesWhereHead(System.String,System.String,System.String)">
            <summary>
            List pull requests associated with a commit
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha1">Used to find all branches where the given commit SHA is the HEAD, or latest commit for the branch</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.BranchesWhereHead(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha1">Used to find all branches where the given commit SHA is the HEAD, or latest commit for the branch</param>
            /// <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.Compare(System.String,System.String,System.String,System.String)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.Compare(System.Int64,System.String,System.String)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.Compare(System.String,System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.Compare(System.Int64,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single commit for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference for the commit (SHA)</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single commit for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference for the commit (SHA)</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.GetAll(System.Int64)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.GetAll(System.String,System.String,Octokit.CommitRequest)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.GetAll(System.Int64,Octokit.CommitRequest)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.GetAll(System.String,System.String,Octokit.CommitRequest,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.GetAll(System.Int64,Octokit.CommitRequest,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.GetSha1(System.String,System.String,System.String)">
            <summary>
            Get the SHA-1 of a commit reference
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The repository reference</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.GetSha1(System.Int64,System.String)">
            <summary>
            Get the SHA-1 of a commit reference
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The repository reference</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.PullRequests(System.String,System.String,System.String)">
            <summary>
            List pull requests associated with a commit
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha1">Used to find all pull requests containing the provided commit SHA, which can be from any point in the commit history</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.PullRequests(System.Int64,System.String)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha1">Used to find all pull requests containing the provided commit SHA, which can be from any point in the commit history</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.PullRequests(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha1">Used to find all pull requests containing the provided commit SHA, which can be from any point in the commit history</param>
            /// <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryCommitsClient.PullRequests(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha1">Used to find all pull requests containing the provided commit SHA, which can be from any point in the commit history</param>
            /// <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.IRepositoryContentsClient">
            <summary>
            Client for accessing contents of files within a repository as base64 encoded content.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/">Repository Contents API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetAllContents(System.String,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetRawContent(System.String,System.String,System.String)">
            <summary>
            Returns the raw content of the file at the given <paramref name="path"/> or <c>null</c> if the path is a directory.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetAllContents(System.Int64,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetAllContents(System.String,System.String)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetAllContents(System.Int64)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetAllContentsByRef(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The content path</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository�s default branch (usually main)</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetRawContentByRef(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the raw content of the file at the given <paramref name="path"/> or <c>null</c> if the path is a directory.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The content path</param>
            <param name="reference">The name of the commit/branch/tag.</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetAllContentsByRef(System.Int64,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The content path</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository�s default branch (usually main)</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetAllContentsByRef(System.String,System.String,System.String)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository�s default branch (usually main)</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetAllContentsByRef(System.Int64,System.String)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository�s default branch (usually main)</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetReadme(System.String,System.String)">
            <summary>
            Gets the preferred README for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/#get-the-readme">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetReadme(System.Int64)">
            <summary>
            Gets the preferred README for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/#get-the-readme">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetReadmeHtml(System.String,System.String)">
            <summary>
            Gets the preferred README's HTML for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/#get-the-readme">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetReadmeHtml(System.Int64)">
            <summary>
            Gets the preferred README's HTML for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/#get-the-readme">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetArchive(System.String,System.String)">
            <summary>
            Get an archive of a given repository's contents
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetArchive(System.Int64)">
            <summary>
            Get an archive of a given repository's contents
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat,System.String)">
            <summary>
            Get an archive of a given repository's contents, using a specific format and reference
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat,System.String)">
            <summary>
            Get an archive of a given repository's contents, using a specific format and reference
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat,System.String,System.TimeSpan)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
            <param name="timeout"> Time span until timeout </param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat,System.String,System.TimeSpan)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
            <param name="timeout"> Time span until timeout </param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.CreateFile(System.String,System.String,System.String,Octokit.CreateFileRequest)">
            <summary>
            Creates a commit that creates a new file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to create</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.CreateFile(System.Int64,System.String,Octokit.CreateFileRequest)">
            <summary>
            Creates a commit that creates a new file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to create</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.UpdateFile(System.String,System.String,System.String,Octokit.UpdateFileRequest)">
            <summary>
            Creates a commit that updates the contents of a file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to update</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.UpdateFile(System.Int64,System.String,Octokit.UpdateFileRequest)">
            <summary>
            Creates a commit that updates the contents of a file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to update</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.DeleteFile(System.String,System.String,System.String,Octokit.DeleteFileRequest)">
            <summary>
            Creates a commit that deletes a file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to delete</param>
        </member>
        <member name="M:Octokit.IRepositoryContentsClient.DeleteFile(System.Int64,System.String,Octokit.DeleteFileRequest)">
            <summary>
            Creates a commit that deletes a file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to delete</param>
        </member>
        <member name="T:Octokit.ArchiveFormat">
            <summary>
            The archive format to return from the server
            </summary>
        </member>
        <member name="F:Octokit.ArchiveFormat.Tarball">
            <summary>
            The TAR archive format
            </summary>
        </member>
        <member name="F:Octokit.ArchiveFormat.Zipball">
            <summary>
            The ZIP archive format
            </summary>
        </member>
        <member name="T:Octokit.IRepositoryDeployEnvironmentsClient">
            <summary>
            A client for GitHub's Repository Deployment Environments API.
            Gets Deployment Environments.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/deployments/environments">Repository Deployment Environments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryDeployEnvironmentsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the environments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            https://docs.github.com/en/rest/deployments/environments#list-environments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployEnvironmentsClient.GetAll(System.Int64)">
            <summary>
            Gets all the environments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            https://docs.github.com/en/rest/deployments/environments#list-environments
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployEnvironmentsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the environments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            https://docs.github.com/en/rest/deployments/environments#list-environments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Paging options</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployEnvironmentsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the environments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            https://docs.github.com/en/rest/deployments/environments#list-environments
            </remarks>
            <param name="repositoryId">Repository ID</param>
            <param name="options">Paging options</param>
        </member>
        <member name="T:Octokit.IRepositoryDeployKeysClient">
            <summary>
            A client for GitHub's Repository Deploy Keys API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/">Deploy Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryDeployKeysClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Get a single deploy key by number for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#get"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="number">The id of the deploy key.</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployKeysClient.Get(System.Int64,System.Int32)">
            <summary>
            Get a single deploy key by number for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#get"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="number">The id of the deploy key.</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployKeysClient.GetAll(System.String,System.String)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployKeysClient.GetAll(System.Int64)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployKeysClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployKeysClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployKeysClient.Create(System.String,System.String,Octokit.NewDeployKey)">
            <summary>
            Creates a new deploy key for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#create"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="newDeployKey">The deploy key to create for the repository.</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployKeysClient.Create(System.Int64,Octokit.NewDeployKey)">
            <summary>
            Creates a new deploy key for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#create"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="newDeployKey">The deploy key to create for the repository.</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployKeysClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a deploy key from a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#delete"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="number">The id of the deploy key to delete.</param>
        </member>
        <member name="M:Octokit.IRepositoryDeployKeysClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a deploy key from a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#delete"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="number">The id of the deploy key to delete.</param>
        </member>
        <member name="T:Octokit.IRepositoryForksClient">
            <summary>
            A client for GitHub's Repository Forks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/forks/">Forks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryForksClient.GetAll(System.String,System.String)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryForksClient.GetAll(System.Int64)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryForksClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryForksClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryForksClient.GetAll(System.String,System.String,Octokit.RepositoryForksListRequest)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
        </member>
        <member name="M:Octokit.IRepositoryForksClient.GetAll(System.Int64,Octokit.RepositoryForksListRequest)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
        </member>
        <member name="M:Octokit.IRepositoryForksClient.GetAll(System.String,System.String,Octokit.RepositoryForksListRequest,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryForksClient.GetAll(System.Int64,Octokit.RepositoryForksListRequest,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IRepositoryForksClient.Create(System.String,System.String,Octokit.NewRepositoryFork)">
            <summary>
            Creates a fork for a repository. Specify organization in the fork parameter to create for an organization.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#create-a-fork">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="fork">Used to fork a repository</param>
        </member>
        <member name="M:Octokit.IRepositoryForksClient.Create(System.Int64,Octokit.NewRepositoryFork)">
            <summary>
            Creates a fork for a repository. Specify organization in the fork parameter to create for an organization.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#create-a-fork">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="fork">Used to fork a repository</param>
        </member>
        <member name="T:Octokit.IRepositoryHooksClient">
            <summary>
            A client for GitHub's Repository Webhooks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/hooks/">Webhooks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.GetAll(System.String,System.String)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.GetAll(System.Int64)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="options">Options for changing the API response</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single hook by Id
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#get-single-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single hook by Id
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#get-single-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Create(System.String,System.String,Octokit.NewRepositoryHook)">
            <summary>
            Creates a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hook">The hook's parameters</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#create-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Create(System.Int64,Octokit.NewRepositoryHook)">
            <summary>
            Creates a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hook">The hook's parameters</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#create-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Edit(System.String,System.String,System.Int32,Octokit.EditRepositoryHook)">
            <summary>
            Edits a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <param name="hook">The requested changes to an edit repository hook</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Edit(System.Int64,System.Int32,Octokit.EditRepositoryHook)">
            <summary>
            Edits a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <param name="hook">The requested changes to an edit repository hook</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Test(System.String,System.String,System.Int32)">
            <summary>
            Tests a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#test-a-hook">API documentation</a> for more information. 
            This will trigger the hook with the latest push to the current repository if the hook is subscribed to push events. If the hook 
            is not subscribed to push events, the server will respond with 204 but no test POST will be generated.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Test(System.Int64,System.Int32)">
            <summary>
            Tests a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#test-a-hook">API documentation</a> for more information. 
            This will trigger the hook with the latest push to the current repository if the hook is subscribed to push events. If the hook 
            is not subscribed to push events, the server will respond with 204 but no test POST will be generated.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Ping(System.String,System.String,System.Int32)">
            <summary>
            This will trigger a ping event to be sent to the hook.
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Ping(System.Int64,System.Int32)">
            <summary>
            This will trigger a ping event to be sent to the hook.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#delete-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.IRepositoryHooksClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#delete-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="T:Octokit.IRepositoryInvitationsClient">
            <summary>
            A client for GitHub's Invitations on a Repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/">Invitations API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryInvitationsClient.Accept(System.Int32)">
            <summary>
            Accept a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#accept-a-repository-invitation">API documentation</a> for more information.
            </remarks>        
            <param name="invitationId">The id of the invitation</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>        
        </member>
        <member name="M:Octokit.IRepositoryInvitationsClient.Decline(System.Int32)">
            <summary>
            Decline a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#decline-a-repository-invitation">API documentation</a> for more information.
            </remarks>        
            <param name="invitationId">The id of the invitation</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoryInvitationsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#delete-a-repository-invitation">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="invitationId">The id of the invitation</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoryInvitationsClient.GetAllForCurrent">
            <summary>
            Gets all invitations for the current user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations">API documentation</a> for more information.
            </remarks>        
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoryInvitationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all invitations for the current user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoryInvitationsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the invitations on a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository">API documentation</a> for more information.
            </remarks>        
            <param name="repositoryId">The id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoryInvitationsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the invitations on a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository">API documentation</a> for more information.
            </remarks>        
            <param name="repositoryId">The id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.IRepositoryInvitationsClient.Edit(System.Int64,System.Int32,Octokit.InvitationUpdate)">
            <summary>
            Updates a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#update-a-repository-invitation">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="invitationId">The id of the invitation</param>
            <param name="permissions">The permission for the collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.IRepositoryPagesClient">
            <summary>
            A client for GitHub's Repository Pages API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/">Repository Pages API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryPagesClient.Get(System.String,System.String)">
            <summary>
            Gets the page metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryPagesClient.Get(System.Int64)">
            <summary>
            Gets the page metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryPagesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryPagesClient.GetAll(System.Int64)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryPagesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryPagesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryPagesClient.GetLatest(System.String,System.String)">
            <summary>
            Gets the build metadata for the last build for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-latest-pages-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryPagesClient.GetLatest(System.Int64)">
            <summary>
            Gets the build metadata for the last build for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-latest-pages-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryPagesClient.RequestPageBuild(System.String,System.String)">
            <summary>
            Requests your site be built from the latest revision on the default branch for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#request-a-page-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryPagesClient.RequestPageBuild(System.Int64)">
            <summary>
            Requests your site be built from the latest revision on the default branch for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#request-a-page-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.IRepositorySecretsClient">
            <summary>
            A client for GitHub's Repository Secrets API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/actions/secrets/">Repository Secrets API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositorySecretsClient.GetPublicKey(System.String,System.String)">
            <summary>
            Get the public signing key to encrypt secrets for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/secrets/#get-a-repository-public-key">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.SecretsPublicKey"/> instance for the repository public key.</returns>
        </member>
        <member name="M:Octokit.IRepositorySecretsClient.GetAll(System.String,System.String)">
            <summary>
            List the secrets for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/secrets/#list-repository-secrets">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositorySecretsCollection"/> instance for the list of repository secrets.</returns>
        </member>
        <member name="M:Octokit.IRepositorySecretsClient.Get(System.String,System.String,System.String)">
            <summary>
            Get a secret from a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/secrets/#get-a-repository-secret">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="secretName">The name of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositorySecret"/> instance for the repository secret.</returns>
        </member>
        <member name="M:Octokit.IRepositorySecretsClient.CreateOrUpdate(System.String,System.String,System.String,Octokit.UpsertRepositorySecret)">
            <summary>
            Create or update a secret in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/secrets/#create-or-update-a-repository-secret">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="secretName">The name of the secret</param>
            <param name="upsertSecret">The encrypted value and id of the encryption key</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositorySecret"/> instance for the repository secret that was created or updated.</returns>
        </member>
        <member name="M:Octokit.IRepositorySecretsClient.Delete(System.String,System.String,System.String)">
            <summary>
            Delete a secret in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/actions/secrets/#delete-a-repository-secret">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="secretName">The name of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.IRepositoryTrafficClient">
            <summary>
            A client for GitHub's Repository Traffic API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/traffic/">Repository Traffic API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryTrafficClient.GetAllReferrers(System.Int64)">
            <summary>
            List the top 10 referrers over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-referrers</remarks>
            <param name="repositoryId">The owner of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryTrafficClient.GetAllPaths(System.String,System.String)">
            <summary>
            List the top 10 popular contents over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-paths</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryTrafficClient.GetAllPaths(System.Int64)">
            <summary>
            List the top 10 popular contents over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-paths</remarks>
            <param name="repositoryId">The owner of the repository</param>
        </member>
        <member name="M:Octokit.IRepositoryTrafficClient.GetViews(System.String,System.String,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of views and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#views</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.IRepositoryTrafficClient.GetViews(System.Int64,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of views and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#views</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.IRepositoryTrafficClient.GetClones(System.String,System.String,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of clones and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#clones</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.IRepositoryTrafficClient.GetClones(System.Int64,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of clones and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#clones</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="T:Octokit.IRepositoryVariablesClient">
            <summary>
            A client for GitHub's Repository Variables API.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28">Repository Variables API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IRepositoryVariablesClient.GetAllOrganization(System.String,System.String)">
            <summary>
            List the organization variables for a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#list-repository-organization-variables">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositoryVariablesCollection"/> instance for the list of repository variables.</returns>
        </member>
        <member name="M:Octokit.IRepositoryVariablesClient.GetAll(System.String,System.String)">
            <summary>
            List the variables for a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#list-repository-variables">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositoryVariablesCollection"/> instance for the list of repository variables.</returns>
        </member>
        <member name="M:Octokit.IRepositoryVariablesClient.Get(System.String,System.String,System.String)">
            <summary>
            Get a variable from a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#get-a-repository-variable">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="variableName">The name of the variable</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositoryVariable"/> instance for the repository secret.</returns>
        </member>
        <member name="M:Octokit.IRepositoryVariablesClient.Create(System.String,System.String,Octokit.Variable)">
            <summary>
            Create a variable in a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#create-a-repository-variable">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="newVariable">The variable to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositoryVariable"/> instance for the repository variable that was created.</returns>
        </member>
        <member name="M:Octokit.IRepositoryVariablesClient.Update(System.String,System.String,Octokit.Variable)">
            <summary>
            Update a variable in a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#update-a-repository-variable">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="variable">The variable to update</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositoryVariable"/> instance for the repository variable that was updated.</returns>
        </member>
        <member name="M:Octokit.IRepositoryVariablesClient.Delete(System.String,System.String,System.String)">
            <summary>
            Delete a variable in a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#delete-a-repository-variable">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="variableName">The name of the variable</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.ISearchClient">
            <summary>
            A client for GitHub's Search API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/search/">Search API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ISearchClient.SearchRepo(Octokit.SearchRepositoriesRequest)">
            <summary>
            search repos
            http://developer.github.com/v3/search/#search-repositories
            </summary>
            <param name="search"></param>
            <returns>List of repos</returns>
        </member>
        <member name="M:Octokit.ISearchClient.SearchUsers(Octokit.SearchUsersRequest)">
            <summary>
            search users
            http://developer.github.com/v3/search/#search-users
            </summary>
            <param name="search"></param>
            <returns>List of users</returns>
        </member>
        <member name="M:Octokit.ISearchClient.SearchIssues(Octokit.SearchIssuesRequest)">
            <summary>
            search issues
            http://developer.github.com/v3/search/#search-issues
            </summary>
            <param name="search"></param>
            <returns>List of issues</returns>
        </member>
        <member name="M:Octokit.ISearchClient.SearchCode(Octokit.SearchCodeRequest)">
            <summary>
            search code
            http://developer.github.com/v3/search/#search-code
            </summary>
            <param name="search"></param>
            <returns>List of files</returns>
        </member>
        <member name="M:Octokit.ISearchClient.SearchLabels(Octokit.SearchLabelsRequest)">
            <summary>
            search labels
            https://developer.github.com/v3/search/#search-labels
            </summary>
            <param name="search"></param>
            <returns>List of labels</returns>
        </member>
        <member name="T:Octokit.IssueCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IssueCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reactions-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.IssueCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.IssueCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Get all reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.IssueCommentReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Get all reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.IssueCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueCommentReactionsClient.Delete(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="commentId">The issue id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IssueCommentReactionsClient.Delete(System.Int64,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="commentId">The issue id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IssueCommentsClient">
            <summary>
            A client for GitHub's Issue Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/comments/">Issue Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IssueCommentsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Issue Comments API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Issue Comment by id.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#get-a-single-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The issue comment id</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Issue Comment by id.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#get-a-single-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The issue comment id</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForRepository(System.Int64,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForRepository(System.Int64,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.Create(System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates a new Issue Comment for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="newComment">The new comment to add to the issue</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.Create(System.Int64,System.Int32,System.String)">
            <summary>
            Creates a new Issue Comment for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="newComment">The new comment to add to the issue</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.Update(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates a specified Issue Comment.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#edit-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The comment id</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.Update(System.Int64,System.Int32,System.String)">
            <summary>
            Updates a specified Issue Comment.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#edit-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The comment id</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified Issue Comment
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#delete-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The comment id</param>
        </member>
        <member name="M:Octokit.IssueCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes the specified Issue Comment
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#delete-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The comment id</param>
        </member>
        <member name="T:Octokit.IssueReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions/">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IssueReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Get all reactions for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>
        </member>
        <member name="M:Octokit.IssueReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Get all reactions for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>
        </member>
        <member name="M:Octokit.IssueReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssueReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.IssueReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.IssueReactionsClient.Delete(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Issue
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-an-issue-reaction</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="issueNumber">The issue id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IssueReactionsClient.Delete(System.Int64,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Issue
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-an-issue-reaction</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="issueNumber">The issue id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IssuesClient">
            <summary>
            A client for GitHub's Issues API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/">Issues API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IssuesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Issues API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="P:Octokit.IssuesClient.Assignee">
            <summary>
            Client for managing assignees.
            </summary>
        </member>
        <member name="P:Octokit.IssuesClient.Events">
            <summary>
            Client for reading various event information associated with issues/pull requests.
            This is useful both for display on issue/pull request information pages and also to
            determine who should be notified of comments.
            </summary>
        </member>
        <member name="P:Octokit.IssuesClient.Labels">
            <summary>
            Client for managing labels.
            </summary>
        </member>
        <member name="P:Octokit.IssuesClient.Milestone">
            <summary>
            Client for managing milestones.
            </summary>
        </member>
        <member name="P:Octokit.IssuesClient.Comment">
            <summary>
            Client for managing comments.
            </summary>
        </member>
        <member name="P:Octokit.IssuesClient.Timeline">
            <summary>
            Client for reading the timeline of events for an issue
            </summary>
        </member>
        <member name="P:Octokit.IssuesClient.LockUnlock">
            <summary>
            Client for locking and unlocking a conversation on a Issue or Pull request
            </summary>
        </member>
        <member name="M:Octokit.IssuesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Issue by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#get-a-single-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IssuesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Issue by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#get-a-single-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForCurrent">
            <summary>
            Gets all open issues assigned to the authenticated user across all the authenticated user’s visible
            repositories including owned repositories, member repositories, and organization repositories.
            </summary>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user across all the authenticated user’s visible
            repositories including owned repositories, member repositories, and organization repositories.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForCurrent(Octokit.IssueRequest)">
            <summary>
            Gets all issues across all the authenticated user’s visible repositories including owned repositories,
            member repositories, and organization repositories.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForCurrent(Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues across all the authenticated user’s visible repositories including owned repositories,
            member repositories, and organization repositories.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForOwnedAndMemberRepositories">
            <summary>
            Gets all open issues assigned to the authenticated user across owned and member repositories for the
            authenticated user.
            </summary>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user across owned and member repositories for the
            authenticated user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.IssueRequest)">
            <summary>
            Gets all issues across owned and member repositories for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues across owned and member repositories for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForOrganization(System.String)">
            <summary>
            Gets all open issues assigned to the authenticated user for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForOrganization(System.String,Octokit.IssueRequest)">
            <summary>
            Gets all issues for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForOrganization(System.String,Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForRepository(System.String,System.String,Octokit.RepositoryIssueRequest)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForRepository(System.Int64,Octokit.RepositoryIssueRequest)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForRepository(System.String,System.String,Octokit.RepositoryIssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesClient.GetAllForRepository(System.Int64,Octokit.RepositoryIssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesClient.Create(System.String,System.String,Octokit.NewIssue)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newIssue">A <see cref="T:Octokit.NewIssue"/> instance describing the new issue to create</param>
        </member>
        <member name="M:Octokit.IssuesClient.Create(System.Int64,Octokit.NewIssue)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newIssue">A <see cref="T:Octokit.NewIssue"/> instance describing the new issue to create</param>
        </member>
        <member name="M:Octokit.IssuesClient.Update(System.String,System.String,System.Int32,Octokit.IssueUpdate)">
            <summary>
            Updates an issue for the specified repository. Issue owners and users with push access can edit an issue.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#edit-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="issueUpdate">An <see cref="T:Octokit.IssueUpdate"/> instance describing the changes to make to the issue
            </param>
        </member>
        <member name="M:Octokit.IssuesClient.Update(System.Int64,System.Int32,Octokit.IssueUpdate)">
            <summary>
            Updates an issue for the specified repository. Any user with pull access to a repository can update an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#edit-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="issueUpdate">An <see cref="T:Octokit.IssueUpdate"/> instance describing the changes to make to the issue
            </param>
        </member>
        <member name="T:Octokit.IssuesEventsClient">
            <summary>
            A client for GitHub's Issue Events API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/events/">Issue Events API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IssuesEventsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IssuesEventsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IssuesEventsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesEventsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesEventsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IssuesEventsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IssuesEventsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesEventsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesEventsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a single event
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#get-a-single-event
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="eventId">The event id</param>
        </member>
        <member name="M:Octokit.IssuesEventsClient.Get(System.Int64,System.Int64)">
            <summary>
            Gets a single event
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#get-a-single-event
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="eventId">The event id</param>
        </member>
        <member name="T:Octokit.IssuesLabelsClient">
            <summary>
            A client for GitHub's Issue Labels API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/">Issue Labels API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForMilestone(System.String,System.String,System.Int32)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the milestone</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForMilestone(System.Int64,System.Int32)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the milestone</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForMilestone(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the milestone</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.GetAllForMilestone(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the milestone</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single Label by name.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-a-single-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single Label by name.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-a-single-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#delete-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#delete-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.Create(System.String,System.String,Octokit.NewLabel)">
            <summary>
            Creates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#create-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newLabel">The data for the label to be created</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.Create(System.Int64,Octokit.NewLabel)">
            <summary>
            Creates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#create-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newLabel">The data for the label to be created</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.Update(System.String,System.String,System.String,Octokit.LabelUpdate)">
            <summary>
            Updates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#update-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
            <param name="labelUpdate">The data for the label to be updated</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.Update(System.Int64,System.String,Octokit.LabelUpdate)">
            <summary>
            Updates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#update-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
            <param name="labelUpdate">The data for the label to be updated</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.AddToIssue(System.String,System.String,System.Int32,System.String[])">
            <summary>
            Adds a label to an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#add-labels-to-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to add</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.AddToIssue(System.Int64,System.Int32,System.String[])">
            <summary>
            Adds a label to an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#add-labels-to-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to add</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.RemoveFromIssue(System.String,System.String,System.Int32,System.String)">
            <summary>
            Removes a label from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labelName">The name of the label to remove</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.RemoveFromIssue(System.Int64,System.Int32,System.String)">
            <summary>
            Removes a label from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labelName">The name of the label to remove</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.ReplaceAllForIssue(System.String,System.String,System.Int32,System.String[])">
            <summary>
            Replaces all labels on the specified issues with the provided labels
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to set</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.ReplaceAllForIssue(System.Int64,System.Int32,System.String[])">
            <summary>
            Replaces all labels on the specified issues with the provided labels
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to set</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.RemoveAllFromIssue(System.String,System.String,System.Int32)">
            <summary>
            Removes all labels from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.IssuesLabelsClient.RemoveAllFromIssue(System.Int64,System.Int32)">
            <summary>
            Removes all labels from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="T:Octokit.IssueTimelineClient">
            <summary>
            A client for GitHub's Issue Timeline API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/issues/timeline/">Issue Timeline API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IssueTimelineClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IssueTimelineClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API repsonse</param>
        </member>
        <member name="M:Octokit.IssueTimelineClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.IssueTimelineClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.IStarredClient">
            <summary>
            A client for GitHub's Activity Starring API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/starring/">Activity Starring API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllStargazers(System.String,System.String)">
            <summary>
            Retrieves all of the stargazers for the passed repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllStargazers(System.Int64)">
            <summary>
            Retrieves all of the stargazers for the passed repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllStargazers(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllStargazers(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllStargazersWithTimestamps(System.String,System.String)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllStargazersWithTimestamps(System.Int64)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllStargazersWithTimestamps(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllStargazersWithTimestamps(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForCurrent">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForCurrentWithTimestamps">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForCurrentWithTimestamps(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForCurrent(Octokit.StarredRequest)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForCurrent(Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForCurrentWithTimestamps(Octokit.StarredRequest)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForCurrentWithTimestamps(Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForUser(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForUserWithTimestamps(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForUserWithTimestamps(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForUser(System.String,Octokit.StarredRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForUser(System.String,Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForUserWithTimestamps(System.String,Octokit.StarredRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.GetAllForUserWithTimestamps(System.String,Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.CheckStarred(System.String,System.String)">
            <summary>
            Check if a repository is starred by the current authenticated user.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IStarredClient.StarRepo(System.String,System.String)">
            <summary>
            Stars a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to star</param>
            <param name="name">The name of the repository to star</param>
        </member>
        <member name="M:Octokit.IStarredClient.RemoveStarFromRepo(System.String,System.String)">
            <summary>
            Unstars a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to unstar</param>
            <param name="name">The name of the repository to unstar</param>
        </member>
        <member name="T:Octokit.IStatisticsClient">
            <summary>
            A client for GitHub's Repository Statistics API.
            Note that the GitHub API uses caching on these endpoints,
            see <a href="https://developer.github.com/v3/repos/statistics/#a-word-about-caching">a word about caching</a> for more details.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/statistics/">Repository Statistics API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetContributors(System.String,System.String)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetContributors(System.Int64)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetContributors(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetContributors(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetCommitActivity(System.String,System.String)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetCommitActivity(System.Int64)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetCommitActivity(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetCommitActivity(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetCodeFrequency(System.String,System.String)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository. 
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetCodeFrequency(System.Int64)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository. 
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetCodeFrequency(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository. 
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetCodeFrequency(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository. 
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetParticipation(System.String,System.String)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total. 
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetParticipation(System.Int64)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total. 
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetParticipation(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total. 
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetParticipation(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total. 
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetPunchCard(System.String,System.String)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetPunchCard(System.Int64)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetPunchCard(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.IStatisticsClient.GetPunchCard(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="T:Octokit.ITagsClient">
            <summary>
            A client for GitHub's Git Tags API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/tags/">Git Tags API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ITagsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a tag for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#get-a-tag
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">Tha sha reference of the tag</param>
        </member>
        <member name="M:Octokit.ITagsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a tag for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#get-a-tag
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">Tha sha reference of the tag</param>
        </member>
        <member name="M:Octokit.ITagsClient.Create(System.String,System.String,Octokit.NewTag)">
            <summary>
            Create a tag for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#create-a-tag-object
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="tag">The tag to create</param>
        </member>
        <member name="M:Octokit.ITagsClient.Create(System.Int64,Octokit.NewTag)">
            <summary>
            Create a tag for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#create-a-tag-object
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="tag">The tag to create</param>
        </member>
        <member name="T:Octokit.ITeamsClient">
            <summary>
            A client for GitHub's Organization Teams API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/teams/">Organization Teams API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ITeamsClient.Get(System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Team"/> by identifier.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#get-team
            </remarks>
            <param name="id">The team identifier.</param>
            <returns>The <see cref="T:Octokit.Team"/> with the given identifier.</returns>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAll(System.String)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current org.
            </summary>
            <param name="org">Organization for which to list all teams.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the orgs's teams <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current org.
            </summary>
            <param name="org">Organization for which to list all teams.</param>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the orgs's teams <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllForCurrent">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current user.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the user's <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current user.
            </summary>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the user's <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllChildTeams(System.Int32)">
            <summary>
            Returns all child teams of the given team.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-child-teams
            </remarks>
            <param name="id">The team identifier</param>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllChildTeams(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all child teams of the given team.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-child-teams
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options to change API behaviour.</param>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllMembers(System.Int32)">
            <summary>
            Returns all members of the given team. 
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllMembers(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all members of the given team. 
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options to change API behaviour.</param>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllMembers(System.Int32,Octokit.TeamMembersRequest)">
            <summary>
            Returns all members with the specified role in the given team of the given role.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="request">The request filter</param>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllMembers(System.Int32,Octokit.TeamMembersRequest,Octokit.ApiOptions)">
            <summary>
            Returns all members with the specified role in the given team of the given role.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="request">The request filter</param>
            <param name="options">Options to change API behaviour.</param>
        </member>
        <member name="M:Octokit.ITeamsClient.Create(System.String,Octokit.NewTeam)">
            <summary>
            Returns newly created <see cref="T:Octokit.Team" /> for the current org.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>Newly created <see cref="T:Octokit.Team"/></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.Update(System.String,System.String,Octokit.UpdateTeam)">
            <summary>
            Updates a team
            To edit a team, the authenticated user must either be an organization owner or a team maintainer
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#update-a-team">API documentation</a> 
            for more information.
            </remarks>
            <returns>updated <see cref="T:Octokit.Team" /> for the current org</returns>
        </member>
        <member name="M:Octokit.ITeamsClient.Update(System.Int32,Octokit.UpdateTeam)">
            <summary>
            Returns updated <see cref="T:Octokit.Team" /> for the current org.
            This endpoint route is deprecated and will be removed from the Teams API.
            We recommend migrating your existing code to use the new Update a team endpoint.
            <see cref="M:Octokit.ITeamsClient.Update(System.String,System.String,Octokit.UpdateTeam)"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#update-a-team-legacy">API documentation</a> 
            for more information.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>Updated <see cref="T:Octokit.Team"/></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.Delete(System.String,System.String)">
            <summary>
            To delete a team, the authenticated user must be an organization owner or team maintainer.
            If you are an organization owner, deleting a parent team will delete all of its child teams as well.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#delete-a-team">API documentation</a> 
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.Delete(System.Int32)">
            <summary>
            Delete a team - must have owner permissions to do this
            This endpoint route is deprecated and will be removed from the Teams API.
            We recommend migrating your existing code to use the new Delete a team endpoint.
            <see cref="M:Octokit.ITeamsClient.Delete(System.String,System.String)"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#delete-a-team-legacy">API documentation</a> 
            </remarks>
            <param name="id">The unique identifier of the team.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.AddOrEditMembership(System.Int32,System.String,Octokit.UpdateTeamMembership)">
            <summary>
            Adds a <see cref="T:Octokit.User"/> to a <see cref="T:Octokit.Team"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#add-or-update-team-membership">API documentation</a> for more information.
            </remarks>
            <param name="id">The team identifier.</param>
            <param name="login">The user to add to the team.</param>
            <param name="request">Additional parameters for the request</param>
        </member>
        <member name="M:Octokit.ITeamsClient.RemoveMembership(System.Int32,System.String)">
            <summary>
            Removes a <see cref="T:Octokit.User"/> from a <see cref="T:Octokit.Team"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#remove-team-member">API documentation</a> for more information.
            </remarks>
            <param name="id">The team identifier.</param>
            <param name="login">The user to remove from the team.</param>
            <returns><see langword="true"/> if the user was removed from the team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.ITeamsClient.GetMembershipDetails(System.Int32,System.String)">
            <summary>
            Gets whether the user with the given <paramref name="login"/> 
            is a member of the team with the given <paramref name="id"/>.
            A <see cref="T:Octokit.NotFoundException"/> is thrown if the user is not a member.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#get-team-membership">API documentation</a> for more information.
            </remarks>
            <param name="id">The team to check.</param>
            <param name="login">The user to check.</param>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllRepositories(System.Int32)">
            <summary>
            Returns all team's repositories.
            </summary>
            <param name="id">Team Id to list repos.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The team's repositories</returns>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllRepositories(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all team's repositories.
            </summary>
            <param name="id">Team Id to list repos.</param>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The team's repositories</returns>
        </member>
        <member name="M:Octokit.ITeamsClient.AddRepository(System.Int32,System.String,System.String)">
            <summary>
            Add a repository to the team
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.AddRepository(System.Int32,System.String,System.String,Octokit.RepositoryPermissionRequest)">
            <summary>
            Add a repository to the team
            </summary>
            <param name="id">The team identifier.</param>
            <param name="organization">Org to associate the repo with.</param>
            <param name="repoName">Name of the repo.</param>
            <param name="permission">The permission to grant the team on this repository.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.RemoveRepository(System.Int32,System.String,System.String)">
            <summary>
            Remove a repository from the team
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.IsRepositoryManagedByTeam(System.Int32,System.String,System.String)">
            <summary>
            Gets whether or not the given repository is managed by the given team.
            </summary>
            <param name="id">The team identifier</param>
            <param name="owner">Owner of the org the team is associated with.</param>
            <param name="repo">Name of the repo.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#get-team-repo">API documentation</a> for more information.
            </remarks>
            <returns><see langword="true"/> if the repository is managed by the given team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllPendingInvitations(System.Int32)">
            <summary>
            List all pending invitations for the given team.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#list-pending-team-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="id">The team identifier</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.GetAllPendingInvitations(System.Int32,Octokit.ApiOptions)">
            <summary>
            List all pending invitations for the given team.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#list-pending-team-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options to change API behaviour.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.CheckTeamPermissionsForARepository(System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether a team has admin, push, maintain, triage, or pull permission for a repository.
            Repositories inherited through a parent team will also be checked.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#check-team-permissions-for-a-repository">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <param name="owner">The account owner of the repository. The name is not case sensitive.</param>
            <param name="repo">The name of the repository. The name is not case sensitive.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.CheckTeamPermissionsForARepositoryWithCustomAcceptHeader(System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether a team has admin, push, maintain, triage, or pull permission for a repository.
            Repositories inherited through a parent team will also be checked.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#check-team-permissions-for-a-repository">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <param name="owner">The account owner of the repository. The name is not case sensitive.</param>
            <param name="repo">The name of the repository. The name is not case sensitive.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.AddOrUpdateTeamRepositoryPermissions(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add or update team repository permissions
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#add-or-update-team-repository-permissions">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <param name="owner">The account owner of the repository. The name is not case sensitive.</param>
            <param name="repo">The name of the repository. The name is not case sensitive.</param>
            <param name="permission">
            The permission to grant the team on this repository. We accept the following permissions to be set: 
            pull, triage, push, maintain, admin and you can also specify a custom repository role name, if the 
            owning organization has defined any. If no permission is specified, the team's permission attribute 
            will be used to determine what permission to grant the team on this repository
            </param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.RemoveRepositoryFromATeam(System.String,System.String,System.String,System.String)">
            <summary>
            Remove a repository from a team
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#remove-a-repository-from-a-team">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <param name="owner">The account owner of the repository. The name is not case sensitive.</param>
            <param name="repo">The name of the repository. The name is not case sensitive.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.ITeamsClient.GetByName(System.String,System.String)">
            <summary>
            Get a team by slug name
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#get-a-team-by-name">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <exception cref="T:Octokit.NotFoundException">Thrown when the team wasn't found</exception>
            <returns>A <see cref="T:Octokit.Team"/> instance if found, otherwise a <see cref="T:Octokit.NotFoundException"/></returns>
        </member>
        <member name="T:Octokit.ITreesClient">
            <summary>
            A client for GitHub's Git Trees API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/trees/">Git Trees API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ITreesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#get-a-tree
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.ITreesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#get-a-tree
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.ITreesClient.GetRecursive(System.String,System.String,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            https://developer.github.com/v3/git/trees/#get-a-tree-recursively
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.ITreesClient.GetRecursive(System.Int64,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            https://developer.github.com/v3/git/trees/#get-a-tree-recursively
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.ITreesClient.Create(System.String,System.String,Octokit.NewTree)">
            <summary>
            Creates a new Tree in the specified repo
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#create-a-tree
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newTree">The value of the new tree</param>
        </member>
        <member name="M:Octokit.ITreesClient.Create(System.Int64,Octokit.NewTree)">
            <summary>
            Creates a new Tree in the specified repo
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#create-a-tree
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newTree">The value of the new tree</param>
        </member>
        <member name="T:Octokit.IUserAdministrationClient">
            <summary>
            A client for GitHub's User Administration API (GitHub Enterprise)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/">Administration API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.IUserAdministrationClient.Create(Octokit.NewUser)">
            <summary>
            Create a new user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#create-a-new-user">API documentation</a>
            for more information.
            </remarks>
            <param name="newUser">The <see cref="T:Octokit.NewUser"/> object describing the user to create</param>
            <returns>The created <see cref="T:Octokit.User"/> object</returns>
        </member>
        <member name="M:Octokit.IUserAdministrationClient.Rename(System.String,Octokit.UserRename)">
            <summary>
            Rename an existing user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#rename-an-existing-user">API documentation</a>
            for more information.
            Note that this queues a request to rename a user, rather than execute it straight away
            </remarks>
            <param name="login">The username to rename</param>
            <param name="userRename">The <see cref="T:Octokit.UserRename"/> request, specifying the new login</param>
            <returns>A <see cref="T:Octokit.UserRenameResponse"/> object indicating the queued task message and Url to the user</returns>
        </member>
        <member name="M:Octokit.IUserAdministrationClient.CreateImpersonationToken(System.String,Octokit.NewImpersonationToken)">
            <summary>
            Create an impersonation OAuth token (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#create-an-impersonation-oauth-token">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to impersonate</param>
            <param name="newImpersonationToken">The <see cref="T:Octokit.NewImpersonationToken"/> request specifying the required scopes</param>
            <returns>An <see cref="T:Octokit.Authorization"/> object containing the impersonation token</returns>
        </member>
        <member name="M:Octokit.IUserAdministrationClient.DeleteImpersonationToken(System.String)">
            <summary>
            Deletes an impersonation OAuth token (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-an-impersonation-oauth-token">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to remove impersonation token from</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IUserAdministrationClient.Promote(System.String)">
            <summary>
            Promotes ordinary user to a site administrator (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#promote-an-ordinary-user-to-a-site-administrator">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to promote to administrator.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IUserAdministrationClient.Demote(System.String)">
            <summary>
            Demotes a site administrator to an ordinary user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#demote-a-site-administrator-to-an-ordinary-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to demote from administrator.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IUserAdministrationClient.Suspend(System.String)">
            <summary>
            Suspends a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#suspend-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to suspend.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IUserAdministrationClient.Unsuspend(System.String)">
            <summary>
            Unsuspends a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#unsuspend-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to unsuspend.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IUserAdministrationClient.ListAllPublicKeys">
            <summary>
            List all public keys (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#list-all-public-keys">API documentation</a>
            for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.IUserAdministrationClient.Delete(System.String)">
            <summary>
            Delete a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to delete</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.IUserAdministrationClient.DeletePublicKey(System.Int32)">
            <summary>
            Delete a public key (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-a-public-key">API documentation</a>
            for more information.
            </remarks>
            <param name="keyId">The key to delete</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.IUserEmailsClient">
            <summary>
            A client for GitHub's User Emails API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/emails/">User Emails API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IUserEmailsClient.GetAll">
            <summary>
            Gets all email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user
            </remarks>
            <returns>The <see cref="T:Octokit.EmailAddress"/>es for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.IUserEmailsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user
            </remarks>
            <param name="options">Options for changing the API response</param>
            <returns>The <see cref="T:Octokit.EmailAddress"/>es for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.IUserEmailsClient.Add(System.String[])">
            <summary>
            Adds email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#add-email-addresses
            </remarks>
            <param name="emailAddresses">The email addresses to add.</param>
            <returns>Returns the added <see cref="T:Octokit.EmailAddress"/>es.</returns>
        </member>
        <member name="M:Octokit.IUserEmailsClient.Delete(System.String[])">
            <summary>
            Deletes email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#delete-email-addresses
            </remarks>
            <param name="emailAddresses">The email addresses to delete.</param>
            <returns>Returns the added <see cref="T:Octokit.EmailAddress"/>es.</returns>
        </member>
        <member name="T:Octokit.IUserGpgKeysClient">
            <summary>
            A client for GitHub's UserUser GPG Keys API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/">User GPG Keys documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IUserGpgKeysClient.GetAllForCurrent">
            <summary>
            Gets all GPG keys for the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.GpgKey"/>s for the current user.</returns>
        </member>
        <member name="M:Octokit.IUserGpgKeysClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all GPG keys for the authenticated user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.GpgKey"/>s for the current user.</returns>
        </member>
        <member name="M:Octokit.IUserGpgKeysClient.Get(System.Int32)">
            <summary>
            View extended details of the <see cref="T:Octokit.GpgKey"/> for the specified id.
            </summary>
            <param name="id">The Id of the GPG key</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#get-a-single-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns>The <see cref="T:Octokit.GpgKey"/> for the specified Id.</returns>
        </member>
        <member name="M:Octokit.IUserGpgKeysClient.Create(Octokit.NewGpgKey)">
            <summary>
            Creates a new <see cref="T:Octokit.GpgKey"/> for the authenticated user.
            </summary>
            <param name="newGpgKey">The new GPG key to add.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#create-a-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns>The newly created <see cref="T:Octokit.GpgKey"/>.</returns>
        </member>
        <member name="M:Octokit.IUserGpgKeysClient.Delete(System.Int32)">
            <summary>
            Deletes the GPG key for the specified Id.
            </summary>
            <param name="id">The Id of the GPG key to delete.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#delete-a-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="T:Octokit.IUserKeysClient">
            <summary>
            A client for GitHub's User Keys API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/keys/">User Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IUserKeysClient.GetAll(System.String)">
            <summary>
            Gets all verified public keys for a user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user
            </remarks>
            <param name="userName">The @ handle of the user.</param>
            <returns>Lists the verified public keys for a user.</returns>
        </member>
        <member name="M:Octokit.IUserKeysClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all verified public keys for a user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user
            </remarks>
            <param name="userName">The @ handle of the user.</param>
            <param name="options">Options to change API's behavior.</param>
            <returns>Lists the verified public keys for a user.</returns>
        </member>
        <member name="M:Octokit.IUserKeysClient.GetAllForCurrent">
            <summary>
            Gets all public keys for the authenticated user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-your-public-keys
            </remarks>
            <returns>Lists the current user's keys.</returns>
        </member>
        <member name="M:Octokit.IUserKeysClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all public keys for the authenticated user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-your-public-keys
            </remarks>
            <param name="options">Options to change API's behavior.</param>
            <returns>Lists the current user's keys.</returns>
        </member>
        <member name="M:Octokit.IUserKeysClient.Get(System.Int32)">
            <summary>
            Retrieves the <see cref="T:Octokit.PublicKey"/> for the specified id.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#get-a-single-public-key
            </remarks>
            <param name="id">The Id of the SSH key</param>
            <returns>View extended details for a single public key.</returns>
        </member>
        <member name="M:Octokit.IUserKeysClient.Create(Octokit.NewPublicKey)">
            <summary>
            Create a public key <see cref="T:Octokit.NewPublicKey"/>.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#create-a-public-key
            </remarks>
            <param name="newKey">The SSH Key contents</param>
            <returns>Creates a public key.</returns>
        </member>
        <member name="M:Octokit.IUserKeysClient.Delete(System.Int32)">
            <summary>
            Delete a public key.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#delete-a-public-key
            </remarks>
            <param name="id">The id of the key to delete</param>
            <returns>Removes a public key.</returns>
        </member>
        <member name="T:Octokit.IUsersClient">
            <summary>
            A client for GitHub's Users API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/">Users API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IUsersClient.Email">
             <summary>
             A client for GitHub's User Emails API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/emails/">Emails API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IUsersClient.GitSshKey">
             <summary>
             A client for GitHub's User Keys API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/keys/">Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IUsersClient.Get(System.String)">
            <summary>
            Returns the user specified by the login.
            </summary>
            <param name="login">The login name for the user</param>
        </member>
        <member name="M:Octokit.IUsersClient.Current">
            <summary>
            Returns a <see cref="T:Octokit.User"/> for the current authenticated user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.User"/></returns>
        </member>
        <member name="M:Octokit.IUsersClient.Update(Octokit.UserUpdate)">
            <summary>
            Update the specified <see cref="T:Octokit.UserUpdate"/>.
            </summary>
            <param name="user">The login for the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.User"/></returns>
        </member>
        <member name="P:Octokit.IUsersClient.Followers">
             <summary>
             A client for GitHub's User Followers API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/followers/">Followers API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.IUsersClient.Administration">
             <summary>
             A client for GitHub's User Administration API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/users/administration/">User Administrator API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.IWatchedClient">
            <summary>
            A client for GitHub's Watching API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/activity/watching/">Watching API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.IWatchedClient.GetAllWatchers(System.String,System.String)">
            <summary>
            Retrieves all of the watchers for the passed repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IWatchedClient.GetAllWatchers(System.Int64)">
            <summary>
            Retrieves all of the watchers for the passed repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IWatchedClient.GetAllWatchers(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watchers for the passed repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IWatchedClient.GetAllWatchers(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watchers for the passed repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IWatchedClient.GetAllForCurrent">
            <summary>
            Retrieves all of the watched <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>
            A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>(ies) watched by the current authenticated user.
            </returns>
        </member>
        <member name="M:Octokit.IWatchedClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watched <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <param name="options">Options for changing API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>
            A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>(ies) watched by the current authenticated user.
            </returns>
        </member>
        <member name="M:Octokit.IWatchedClient.GetAllForUser(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) watched by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>
            A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/>(ies) watched by the specified user.
            </returns>
        </member>
        <member name="M:Octokit.IWatchedClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) watched by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>
            A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/>(ies) watched by the specified user.
            </returns>
        </member>
        <member name="M:Octokit.IWatchedClient.CheckWatched(System.String,System.String)">
            <summary>
            Check if a repository is watched by the current authenticated user.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IWatchedClient.CheckWatched(System.Int64)">
            <summary>
            Check if a repository is watched by the current authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.IWatchedClient.WatchRepo(System.String,System.String,Octokit.NewSubscription)">
            <summary>
            Watches a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to star</param>
            <param name="name">The name of the repository to star</param>
            <param name="newSubscription">A <see cref="T:Octokit.NewSubscription"/> instance describing the new subscription to create</param>
        </member>
        <member name="M:Octokit.IWatchedClient.WatchRepo(System.Int64,Octokit.NewSubscription)">
            <summary>
            Watches a repository for the authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newSubscription">A <see cref="T:Octokit.NewSubscription"/> instance describing the new subscription to create</param>
        </member>
        <member name="M:Octokit.IWatchedClient.UnwatchRepo(System.String,System.String)">
            <summary>
            Unwatches a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to unstar</param>
            <param name="name">The name of the repository to unstar</param>
        </member>
        <member name="M:Octokit.IWatchedClient.UnwatchRepo(System.Int64)">
            <summary>
            Unwatches a repository for the authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="T:Octokit.LicensesClient">
            <summary>
            A client for GitHub's licenses APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/licenses">Licenses API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.LicensesClient.#ctor(Octokit.IApiConnection)">
            <summary>
                Initializes a new GitHub gitignore API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.LicensesClient.GetAllLicenses">
            <summary>
            Returns a list of the licenses shown in the license picker on GitHub.com. This is not a comprehensive
            list of all possible OSS licenses.
            </summary>
            <returns>A list of licenses available on the site</returns>
        </member>
        <member name="M:Octokit.LicensesClient.GetAllLicenses(Octokit.ApiOptions)">
            <summary>
            Returns a list of the licenses shown in the license picker on GitHub.com. This is not a comprehensive
            list of all possible OSS licenses.
            </summary>
            <param name="options">Options for changing the API response</param>
            <returns>A list of licenses available on the site</returns>
        </member>
        <member name="M:Octokit.LicensesClient.GetLicense(System.String)">
            <summary>
            Retrieves a license based on the license key such as "mit"
            </summary>
            <param name="key"></param>
            <returns>A <see cref="T:Octokit.License" /> that includes the license key, text, and attributes of the license.</returns>
        </member>
        <member name="T:Octokit.LockUnlockClient">
            <summary>
            Client to manage locking/unlocking a conversation for an Issue or a Pull request
            </summary>
        </member>
        <member name="M:Octokit.LockUnlockClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Issue Lock API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.LockUnlockClient.Lock(System.String,System.String,System.Int32,System.Nullable{Octokit.LockReason})">
            <summary>
            Locks an issue for the specified repository. Issue owners and users with push access can lock an issue or pull request's conversation.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#lock-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="lockReason">The reason for locking the issue</param>
        </member>
        <member name="M:Octokit.LockUnlockClient.Lock(System.Int64,System.Int32,System.Nullable{Octokit.LockReason})">
            <summary>
            Locks an issue for the specified repository. Issue owners and users with push access can lock an issue or pull request's conversation.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#lock-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="lockReason">The reason for locking the issue</param>
        </member>
        <member name="M:Octokit.LockUnlockClient.Unlock(System.String,System.String,System.Int32)">
            <summary>
            Unlocks an issue for the specified repository. Issue owners and users with push access can unlock an issue or pull request's conversation.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#unlock-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.LockUnlockClient.Unlock(System.Int64,System.Int32)">
            <summary>
            Unlocks an issue for the specified repository. Issue owners and users with push access can unlock an issue or pull request's conversation.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#unlock-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="T:Octokit.MarkdownClient">
            <summary>
            A client for GitHub's markdown APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/markdown">Markdown API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.MarkdownClient.#ctor(Octokit.IApiConnection)">
            <summary>
                Initializes a new GitHub markdown API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.MarkdownClient.RenderRawMarkdown(System.String)">
            <summary>
            Gets the rendered Markdown for the specified plain-text Markdown document.
            </summary>
            <param name="markdown">A plain-text Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="M:Octokit.MarkdownClient.RenderArbitraryMarkdown(Octokit.NewArbitraryMarkdown)">
            <summary>
            Gets the rendered Markdown for an arbitrary markdown document.
            </summary>
            <param name="markdown">An arbitrary Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="T:Octokit.MergingClient">
            <summary>
            A client for GitHub's Git Merging API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/merging/">Git Merging API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.MergingClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.MergingClient"/> class.
            </summary>
            <param name="apiConnection">The client's connection</param>
        </member>
        <member name="M:Octokit.MergingClient.Create(System.String,System.String,Octokit.NewMerge)">
            <summary>
            Create a merge for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/merging/#perform-a-merge
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="merge">The merge to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MergingClient.Create(System.Int64,Octokit.NewMerge)">
            <summary>
            Create a merge for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/merging/#perform-a-merge
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="merge">The merge to create</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.MetaClient">
            <summary>
            A client for GitHub's meta APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/meta">Meta API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.MetaClient.#ctor(Octokit.IApiConnection)">
            <summary>
                Initializes a new GitHub meta API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.MetaClient.GetMetadata">
            <summary>
            Retrieves information about GitHub.com, the service or a GitHub Enterprise installation.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.Meta"/> containing metadata about the GitHub instance.</returns>
        </member>
        <member name="T:Octokit.MigrationClient">
            <summary>
            A client for GitHub's Migration API. These APIs help you move projects to or from GitHub.
            </summary>
            <remarks>
            Docs: https://developer.github.com/v3/migration/
            </remarks>
        </member>
        <member name="M:Octokit.MigrationClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiate a new GitHub Migration API client and its sub-APIs.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="P:Octokit.MigrationClient.Migrations">
            <summary>
            The Enterprise Migrations API lets you move a repository from GitHub to GitHub Enterprise.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/#enterprise-migrations
            </remarks>
        </member>
        <member name="T:Octokit.MigrationsClient">
            <summary>
            A client for GitHub's Migrations API.
            </summary>
            <remarks>
            See <a href="https://developer.github.com/v3/migration/migrations/">docs</a>
            for more information.
            </remarks>
        </member>
        <member name="M:Octokit.MigrationsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a GitHub Migrations API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.MigrationsClient.Start(System.String,Octokit.StartMigrationRequest)">
            <summary>
            Starts a new migration specified for the given organization.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#start-a-migration
            </remarks>
            <param name="org">The organization for which to start a migration.</param>
            <param name="migration">Specifies parameters for the migration in a
            <see cref="T:Octokit.StartMigrationRequest"/> object.</param>
            <returns>The started migration.</returns>
        </member>
        <member name="M:Octokit.MigrationsClient.GetAll(System.String)">
            <summary>
            Gets the list of the most recent migrations of the organization.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#get-a-list-of-migrations
            </remarks>
            <param name="org">The organization of which to list migrations.</param>
            <returns>List of most recent <see cref="T:Octokit.Migration"/>s.</returns>
        </member>
        <member name="M:Octokit.MigrationsClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of the most recent migrations of the organization.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#get-a-list-of-migrations
            </remarks>
            <param name="org">The organization of which to list migrations.</param>
            <param name="options">Options for changing the API response</param>
            <returns>List of most recent <see cref="T:Octokit.Migration"/>s.</returns>
        </member>
        <member name="M:Octokit.MigrationsClient.Get(System.String,System.Int32)">
            <summary>
            Get the status of a migration
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#get-the-status-of-a-migration
            </remarks>
            <param name="org">The organization which is migrating.</param>
            <param name="id">Migration Id of the organization.</param>
            <returns>A <see cref="T:Octokit.Migration"/> object representing the state of migration.</returns>
        </member>
        <member name="M:Octokit.MigrationsClient.GetArchive(System.String,System.Int32)">
            <summary>
            Get the migration archive.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#download-a-migration-archive
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <returns>The binary contents of the archive as a byte array.</returns>
        </member>
        <member name="M:Octokit.MigrationsClient.DeleteArchive(System.String,System.Int32)">
            <summary>
            Deletes a previous migration archive.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#delete-a-migration-archive
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MigrationsClient.UnlockRepository(System.String,System.Int32,System.String)">
            <summary>
            Unlocks a repository that was locked for migration.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#unlock-a-repository
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <param name="repo">The repo to unlock.</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.MilestonesClient">
            <summary>
            A client for GitHub's Issue Milestones API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/milestones/">Issue Milestones API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.MilestonesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Issue Milestones API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.MilestonesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Milestone by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#get-a-single-milestone
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Milestone by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#get-a-single-milestone
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.GetAllForRepository(System.String,System.String,Octokit.MilestoneRequest)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.GetAllForRepository(System.Int64,Octokit.MilestoneRequest)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.GetAllForRepository(System.String,System.String,Octokit.MilestoneRequest,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.GetAllForRepository(System.Int64,Octokit.MilestoneRequest,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.Create(System.String,System.String,Octokit.NewMilestone)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#create-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newMilestone">A <see cref="T:Octokit.NewMilestone"/> instance describing the new Milestone to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.Create(System.Int64,Octokit.NewMilestone)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#create-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newMilestone">A <see cref="T:Octokit.NewMilestone"/> instance describing the new Milestone to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.Update(System.String,System.String,System.Int32,Octokit.MilestoneUpdate)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#update-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Milestone number</param>
            <param name="milestoneUpdate">An <see cref="T:Octokit.MilestoneUpdate"/> instance describing the changes to make to the Milestone
            </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.Update(System.Int64,System.Int32,Octokit.MilestoneUpdate)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#update-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Milestone number</param>
            <param name="milestoneUpdate">An <see cref="T:Octokit.MilestoneUpdate"/> instance describing the changes to make to the Milestone
            </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#delete-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The milestone number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.MilestonesClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#delete-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The milestone number</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.MiscellaneousClient">
            <summary>
            A client for GitHub's miscellaneous APIs.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/misc/">Miscellaneous API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.MiscellaneousClient.#ctor(Octokit.IApiConnection)">
            <summary>
                Initializes a new GitHub miscellaneous API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.MiscellaneousClient.GetAllEmojis">
            <summary>
            Gets all the emojis available to use on GitHub.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of emoji and their URI.</returns>
        </member>
        <member name="M:Octokit.MiscellaneousClient.RenderRawMarkdown(System.String)">
            <summary>
            Gets the rendered Markdown for the specified plain-text Markdown document.
            </summary>
            <param name="markdown">A plain-text Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="M:Octokit.MiscellaneousClient.RenderArbitraryMarkdown(Octokit.NewArbitraryMarkdown)">
            <summary>
            Gets the rendered Markdown for an arbitrary markdown document.
            </summary>
            <param name="markdown">An arbitrary Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="M:Octokit.MiscellaneousClient.GetAllGitIgnoreTemplates">
            <summary>
            List all templates available to pass as an option when creating a repository.
            </summary>
            <returns>A list of template names</returns>
        </member>
        <member name="M:Octokit.MiscellaneousClient.GetGitIgnoreTemplate(System.String)">
            <summary>
            Retrieves the source for a single GitIgnore template
            </summary>
            <param name="templateName"></param>
            <returns>A template and its source</returns>
        </member>
        <member name="M:Octokit.MiscellaneousClient.GetAllLicenses">
            <summary>
            Returns a list of the licenses shown in the license picker on GitHub.com. This is not a comprehensive
            list of all possible OSS licenses.
            </summary>
            <returns>A list of licenses available on the site</returns>
        </member>
        <member name="M:Octokit.MiscellaneousClient.GetAllLicenses(Octokit.ApiOptions)">
            <summary>
            Returns a list of the licenses shown in the license picker on GitHub.com. This is not a comprehensive
            list of all possible OSS licenses.
            </summary>
            <param name="options">Options for changing the API response</param>
            <returns>A list of licenses available on the site</returns>
        </member>
        <member name="M:Octokit.MiscellaneousClient.GetLicense(System.String)">
            <summary>
            Retrieves a license based on the license key such as "mit"
            </summary>
            <param name="key"></param>
            <returns>A <see cref="T:Octokit.License" /> that includes the license key, text, and attributes of the license.</returns>
        </member>
        <member name="M:Octokit.MiscellaneousClient.GetRateLimits">
            <summary>
            Gets API Rate Limits (API service rather than header info).
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.MiscellaneousRateLimit"/> of Rate Limits.</returns>
        </member>
        <member name="M:Octokit.MiscellaneousClient.GetMetadata">
            <summary>
            Retrieves information about GitHub.com, the service or a GitHub Enterprise installation.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.Meta"/> containing metadata about the GitHub instance.</returns>
        </member>
        <member name="T:Octokit.NotificationsClient">
            <summary>
            A client for GitHub's Activity Notifications API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/notifications/">Activity Notifications API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.NotificationsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Activity Notifications API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForCurrent">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForCurrent(Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForCurrent(Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForRepository(System.Int64)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForRepository(System.String,System.String,Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForRepository(System.Int64,Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForRepository(System.String,System.String,Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.GetAllForRepository(System.Int64,Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.NotificationsClient.MarkAsRead">
            <summary>
            Marks all notifications as read.
            </summary>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-as-read</remarks>
        </member>
        <member name="M:Octokit.NotificationsClient.MarkAsRead(Octokit.MarkAsReadRequest)">
            <summary>
            Marks all notifications as read.
            </summary>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-as-read</remarks>
        </member>
        <member name="M:Octokit.NotificationsClient.MarkAsReadForRepository(System.String,System.String)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.NotificationsClient.MarkAsReadForRepository(System.Int64)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.NotificationsClient.MarkAsReadForRepository(System.String,System.String,Octokit.MarkAsReadRequest)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.NotificationsClient.MarkAsReadForRepository(System.Int64,Octokit.MarkAsReadRequest)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.NotificationsClient.Get(System.Int32)">
            <summary>
            Retrives a single <see cref="T:Octokit.Notification"/> by Id.
            </summary>
            <param name="id">The Id of the notification to retrieve.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#view-a-single-thread</remarks>
        </member>
        <member name="M:Octokit.NotificationsClient.MarkAsRead(System.Int32)">
            <summary>
            Marks a single notification as read.
            </summary>
            <param name="id">The id of the notification.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-a-thread-as-read</remarks>
        </member>
        <member name="M:Octokit.NotificationsClient.GetThreadSubscription(System.Int32)">
            <summary>
            Retrives a <see cref="T:Octokit.ThreadSubscription"/> for the provided thread id.
            </summary>
            <param name="id">The Id of the thread to retrieve subscription status.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#get-a-thread-subscription</remarks>
        </member>
        <member name="M:Octokit.NotificationsClient.SetThreadSubscription(System.Int32,Octokit.NewThreadSubscription)">
            <summary>
            Sets the authenticated user's subscription settings for a given thread.
            </summary>
            <param name="id">The Id of the thread to update.</param>
            <param name="threadSubscription">The subscription parameters to set.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#set-a-thread-subscription</remarks>
        </member>
        <member name="M:Octokit.NotificationsClient.DeleteThreadSubscription(System.Int32)">
            <summary>
            Deletes the authenticated user's subscription to a given thread.
            </summary>
            <param name="id">The Id of the thread to delete subscription from.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription</remarks>
        </member>
        <member name="T:Octokit.OauthClient">
            <summary>
            Provides methods used in the OAuth web flow.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Octokit.OauthClient.#ctor(Octokit.IConnection)">
            <summary>
            Create an instance of the OauthClient
            </summary>
            <param name="connection">The underlying connection to use</param>
        </member>
        <member name="M:Octokit.OauthClient.GetGitHubLoginUrl(Octokit.OauthLoginRequest)">
            <summary>
            Gets the URL used in the first step of the web flow. The Web application should redirect to this URL.
            </summary>
            <param name="request">Parameters to the Oauth web flow login url</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.OrganizationActionsClient">
            <summary>
            A client for GitHub's Org Actions API.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions/"> Actions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.OrganizationActionsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Orgs Actions API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="P:Octokit.OrganizationActionsClient.Secrets">
            <summary>
            Returns a client to manage organization secrets.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#secrets"> Secrets API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.OrganizationHooksClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Repos API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.OrganizationHooksClient.GetAll(System.String)">
            <summary>
            Gets the list of hooks defined for a organization
            </summary>
            <param name="org">The organization's name</param>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#list-hooks">API documentation</a> for more information.</remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationHooksClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of hooks defined for a organization
            </summary>
            <param name="org">The organization's name</param>
            <param name="options">Options for changing the API response</param>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#list-hooks">API documentation</a> for more information.</remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationHooksClient.Get(System.String,System.Int32)">
            <summary>
            Gets a single hook by Id
            </summary>
            <param name="org"></param>
            <param name="hookId"></param>
            <returns></returns>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#get-single-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.OrganizationHooksClient.Create(System.String,Octokit.NewOrganizationHook)">
            <summary>
            Creates a hook for a organization
            </summary>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#create-a-hook">API documentation</a> for more information.</remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationHooksClient.Edit(System.String,System.Int32,Octokit.EditOrganizationHook)">
            <summary>
            Edits a hook for a organization
            </summary>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationHooksClient.Ping(System.String,System.Int32)">
            <summary>
            This will trigger a ping event to be sent to the hook.
            </summary>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#ping-a-hook">API documentation</a> for more information.</remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationHooksClient.Delete(System.String,System.Int32)">
            <summary>
            Deletes a hook for a organization
            </summary>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/#delete-a-hook">API documentation</a> for more information.</remarks>
            <returns></returns>
        </member>
        <member name="T:Octokit.OrganizationMembersFilter">
            <summary>
            Filter members in the list
            </summary>
            <remarks>
            see https://developer.github.com/v3/orgs/members/#members-list for details
            </remarks>
        </member>
        <member name="F:Octokit.OrganizationMembersFilter.All">
            <summary>
             All members the authenticated user can see.
            </summary>
        </member>
        <member name="F:Octokit.OrganizationMembersFilter.TwoFactorAuthenticationDisabled">
            <summary>
            Members without two-factor authentication enabled
            </summary>
        </member>
        <member name="T:Octokit.OrganizationMembersClient">
            <summary>
            A client for GitHub's Organization Members API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/">Orgs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new Organization Members API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAll(System.String)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersRole)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersRole,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.OrganizationMembersRole)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.OrganizationMembersRole,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAllPublic(System.String)">
            <summary>
            List all users who have publicized their membership of the organization.
            </summary>
            <remarks>http://developer.github.com/v3/orgs/members/#public-members-list</remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAllPublic(System.String,Octokit.ApiOptions)">
            <summary>
            List all users who have publicized their membership of the organization.
            </summary>
            <remarks>http://developer.github.com/v3/orgs/members/#public-members-list</remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.CheckMember(System.String,System.String)">
            <summary>
            Check if a user is, publicly or privately, a member of the organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#check-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.CheckMemberPublic(System.String,System.String)">
            <summary>
            Check is a user is publicly a member of the organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#check-public-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.Delete(System.String,System.String)">
            <summary>
            Removes a user from the organization, this will also remove them from all teams
            within the organization and they will no longer have any access to the organization's
            repositories.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#remove-a-member">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.Publicize(System.String,System.String)">
            <summary>
            Make the authenticated user's organization membership public.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/orgs/members/#publicize-a-users-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.Conceal(System.String,System.String)">
            <summary>
            Make the authenticated user's organization membership private.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/orgs/members/#conceal-a-users-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetOrganizationMembership(System.String,System.String)">
            <summary>
            Get a user's membership with an organization.
            </summary>
            <remarks>
            This method requires authentication.
            The authenticated user must be an organization member.
            See the <a href="https://developer.github.com/v3/orgs/members/#get-organization-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.AddOrUpdateOrganizationMembership(System.String,System.String,Octokit.OrganizationMembershipUpdate)">
            <summary>
            Add a user to the organization or update the user's role withing the organization.
            </summary>
            <remarks>
            This method requires authentication.
            The authenticated user must be an organization owner.
            See the <a href="https://developer.github.com/v3/orgs/members/#add-or-update-organization-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <param name="addOrUpdateRequest">An <see cref="T:Octokit.OrganizationMembershipUpdate"/> instance describing the
            changes to make to the user's organization membership</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.CreateOrganizationInvitation(System.String,Octokit.OrganizationInvitationRequest)">
            <summary>
            Create an organization invitation for a user
            </summary>
            <remarks>
            This method requires authentication.
            The authenticated user must be an organization owner.
            See the <a href="https://developer.github.com/v3/orgs/members/#create-an-organization-invitation">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="invitationRequest">An <see cref="T:Octokit.OrganizationInvitationRequest"/> instance containing the
            details of the organization invitation</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.RemoveOrganizationMembership(System.String,System.String)">
            <summary>
            Remove a user's membership with an organization.
            </summary>
            <remarks>
            This method requires authentication.
            The authenticated user must be an organization owner.
            See the <a href="https://developer.github.com/v3/orgs/members/#remove-organization-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAllPendingInvitations(System.String)">
            <summary>
            List all pending invitations for the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAllPendingInvitations(System.String,Octokit.ApiOptions)">
            <summary>
            List all pending invitations for the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options to change API behaviour</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAllFailedInvitations(System.String)">
            <summary>
            List failed organization invitations.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/orgs/members#list-failed-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAllFailedInvitations(System.String,Octokit.ApiOptions)">
            <summary>
            List failed organization invitations.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/orgs/members#list-failed-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options to change API behaviour</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.CancelOrganizationInvitation(System.String,System.Int32)">
            <summary>
            Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an organization owner.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/orgs/members#cancel-an-organization-invitation">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="invitationId">The unique identifier of the invitation</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAllOrganizationMembershipsForCurrent">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationMembership" />s for the current user.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the current user's <see cref="T:Octokit.OrganizationMembership"/>s.</returns>
        </member>
        <member name="M:Octokit.OrganizationMembersClient.GetAllOrganizationMembershipsForCurrent(Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationMembership" />s for the current user.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <param name="options">Options to change API behaviour</param>
            <returns>A list of the current user's <see cref="T:Octokit.OrganizationMembership"/>s.</returns>
        </member>
        <member name="T:Octokit.OrganizationOutsideCollaboratorsClient">
            <summary>
            A client for GitHub's Organization Outside Collaborators API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/outside_collaborators/">Orgs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.OrganizationOutsideCollaboratorsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new Organization Outside Collaborators API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.OrganizationOutsideCollaboratorsClient.GetAll(System.String)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.OrganizationMembersFilter)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.ApiOptions)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.OrganizationOutsideCollaboratorsClient.Delete(System.String,System.String)">
            <summary>
            Removes a user as an outside collaborator from the organization, this will remove them from all repositories
            within the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login of the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.OrganizationOutsideCollaboratorsClient.ConvertFromMember(System.String,System.String)">
            <summary>
            Converts an organization member to an outside collaborator, 
            when an organization member is converted to an outside collaborator, 
            they'll only have access to the repositories that their current team membership allows. 
            The user will no longer be a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator"> API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.OrganizationsClient">
            <summary>
            A client for GitHub's Orgs API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/">Orgs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.OrganizationsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Orgs API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="P:Octokit.OrganizationsClient.Member">
            <summary>
            Returns a client to manage members of an organization.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationsClient.Team">
            <summary>
            Returns a client to manage teams of an organization.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationsClient.Actions">
            <summary>
            Returns a client to manage organization actions.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationsClient.OutsideCollaborator">
            <summary>
            Returns a client to manage outside collaborators of an organization.
            </summary>
        </member>
        <member name="M:Octokit.OrganizationsClient.Get(System.String)">
            <summary>
            Returns the specified <see cref="T:Octokit.Organization"/>.
            </summary>
            <param name="org">login of the organization to get</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The specified <see cref="T:Octokit.Organization"/>.</returns>
        </member>
        <member name="P:Octokit.OrganizationsClient.Hook">
            <summary>
            A client for GitHub's Organization Hooks API.
            </summary>
            <remarks>See <a href="https://developer.github.com/v3/orgs/hooks/">Hooks API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.OrganizationsClient.GetAllForCurrent">
            <summary>
            Returns all <see cref="T:Octokit.Organization" />s for the current user.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the current user's <see cref="T:Octokit.Organization"/>s.</returns>
        </member>
        <member name="M:Octokit.OrganizationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.Organization" />s for the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the current user's <see cref="T:Octokit.Organization"/>s.</returns>
        </member>
        <member name="M:Octokit.OrganizationsClient.GetAllForUser(System.String)">
            <summary>
            Returns <see cref="T:Octokit.Organization" />s which the specified user is a member of,
            where the user hasn't marked their membership as private.
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>
            A list of the <see cref="T:Octokit.Organization"/>s which the specified user is a member
            of, where they haven't marked their membership as private
            </returns>
        </member>
        <member name="M:Octokit.OrganizationsClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Returns <see cref="T:Octokit.Organization" />s which the specified user is a member of,
            where the user hasn't marked their membership as private.
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>
            A list of the <see cref="T:Octokit.Organization"/>s which the specified user is a member
            of, where they haven't marked their membership as private
            </returns>
        </member>
        <member name="M:Octokit.OrganizationsClient.GetAll">
            <summary>
            Returns all <see cref="T:Octokit.Organization" />s.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of <see cref="T:Octokit.Organization"/>s.</returns>
        </member>
        <member name="M:Octokit.OrganizationsClient.GetAll(Octokit.OrganizationRequest)">
            <summary>
            Returns all <see cref="T:Octokit.Organization" />s.
            </summary>
            <param name="request">Search parameters of the last organization seen</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of <see cref="T:Octokit.Organization"/>s.</returns>
        </member>
        <member name="M:Octokit.OrganizationsClient.Update(System.String,Octokit.OrganizationUpdate)">
            <summary>
            Update the specified organization with data from <see cref="T:Octokit.OrganizationUpdate"/>.
            </summary>
            <param name="org">The name of the organization to update.</param>
            <param name="updateRequest"></param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.Organization"/></returns>
        </member>
        <member name="M:Octokit.OrganizationsClient.GetAllAuthorizations(System.String)">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationCredential" />s.
            </summary>
            <param name="org">The organization name.</param>
            <returns>A list of <see cref="T:Octokit.OrganizationCredential"/>s.</returns>
        </member>
        <member name="M:Octokit.OrganizationsClient.GetAllAuthorizations(System.String,Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationCredential" />s.
            </summary>
            <param name="org">The organization name.</param>
            <param name="options">Options for changing the API response</param>
            <returns>A list of <see cref="T:Octokit.OrganizationCredential"/>s.</returns>
        </member>
        <member name="M:Octokit.OrganizationsClient.GetAllAuthorizations(System.String,System.String)">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationCredential" />s.
            </summary>
            <param name="org">The organization name.</param>
            <param name="login">Limits the list of credentials authorizations for an organization to a specific login</param>
            <returns>A list of <see cref="T:Octokit.OrganizationCredential"/>s.</returns>
        </member>
        <member name="M:Octokit.OrganizationsClient.GetAllAuthorizations(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.OrganizationCredential" />s.
            </summary>
            <param name="org">The organization name.</param>
            <param name="login">Limits the list of credentials authorizations for an organization to a specific login</param>
            <param name="options">Options for changing the API response</param>
            <returns>A list of <see cref="T:Octokit.OrganizationCredential"/>s.</returns>
        </member>
        <member name="T:Octokit.OrganizationSecretsClient">
            <summary>
            A client for GitHub's Organization Secrets API.
            </summary>
            <remarks>
            See the <a href="http://docs.github.com/v3/actions#secrets/">Organization Secrets API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.OrganizationSecretsClient.GetPublicKey(System.String)">
            <summary>
            Get the public signing key to encrypt secrets for an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#get-an-organization-public-key">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.SecretsPublicKey"/> instance for the organization public key.</returns>
        </member>
        <member name="M:Octokit.OrganizationSecretsClient.GetAll(System.String)">
            <summary>
            List the secrets for an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#list-organization-secrets">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.OrganizationSecretsCollection"/> instance for the list of organization secrets.</returns>
        </member>
        <member name="M:Octokit.OrganizationSecretsClient.Get(System.String,System.String)">
            <summary>
            Get a secret from an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#get-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.OrganizationSecret"/> instance for the organization secret.</returns>
        </member>
        <member name="M:Octokit.OrganizationSecretsClient.CreateOrUpdate(System.String,System.String,Octokit.UpsertOrganizationSecret)">
            <summary>
            Create or update a secret in an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#create-or-update-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <param name="upsertSecret">The encrypted value, id of the encryption key, and visibility info to upsert</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.OrganizationSecret"/> instance for the organization secret that was created or updated.</returns>
        </member>
        <member name="M:Octokit.OrganizationSecretsClient.Delete(System.String,System.String)">
            <summary>
            Delete a secret in an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#delete-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.OrganizationSecretsClient.GetSelectedRepositoriesForSecret(System.String,System.String)">
            <summary>
            Get the list of selected sites that have access to a secret.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#list-selected-repositories-for-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.OrganizationSecretsClient.SetSelectedRepositoriesForSecret(System.String,System.String,Octokit.SelectedRepositoryCollection)">
            <summary>
            Set the list of selected sites that have access to a secret.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#set-selected-repositories-for-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <param name="repositories">The list of repositories that should have access to view and use the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.OrganizationSecretsClient.AddRepoToOrganizationSecret(System.String,System.String,System.Int64)">
            <summary>
            Add a selected site to the visibility list of a secret.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#add-selected-repository-to-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <param name="repoId">The id of the repo to add to the visibility list of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.OrganizationSecretsClient.RemoveRepoFromOrganizationSecret(System.String,System.String,System.Int64)">
            <summary>
            ARemoved a selected site from the visibility list of a secret.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#remove-selected-repository-from-an-organization-secret">API documentation</a> for more information.
            </remarks>
            <param name="org">The name of the organization</param>
            <param name="secretName">The name of the secret</param>
            <param name="repoId">The id of the repo to add to the visibility list of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.PackagesClient">
            <summary>
            A client for GitHub's Packages API.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages">Packages API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.PackagesClient.GetAllForOrg(System.String,Octokit.PackageType,System.Nullable{Octokit.PackageVisibility})">
            <summary>
            List all packages for an organisations, readable by the current user
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#list-packages-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageVisibility">Optional: The visibility of the package</param>
        </member>
        <member name="M:Octokit.PackagesClient.GetForOrg(System.String,Octokit.PackageType,System.String)">
            <summary>
            Get a specific package for an Organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.PackagesClient.DeleteForOrg(System.String,Octokit.PackageType,System.String)">
            <summary>
            Delete a specific package for an Organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-a-package-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.PackagesClient.RestoreForOrg(System.String,Octokit.PackageType,System.String)">
            <summary>
            Restore a specific package for an Organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-a-package-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.PackagesClient.GetAllForActiveUser(Octokit.PackageType,System.Nullable{Octokit.PackageVisibility})">
            <summary>
            Lists packages owned by the authenticated user within the user's namespace
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#list-packages-for-the-authenticated-users-namespace">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageVisibility">Optional: The visibility of the package</param>
        </member>
        <member name="M:Octokit.PackagesClient.GetForActiveUser(Octokit.PackageType,System.String)">
            <summary>
            Gets a specific package for a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.PackagesClient.DeleteForActiveUser(Octokit.PackageType,System.String)">
            <summary>
            Deletes a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-a-package-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.PackagesClient.RestoreForActiveUser(Octokit.PackageType,System.String)">
            <summary>
            Restores a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-a-package-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.PackagesClient.GetAllForUser(System.String,Octokit.PackageType,System.Nullable{Octokit.PackageVisibility})">
            <summary>
            Lists packages owned by the authenticated user within the user's namespace
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#list-packages-for-the-authenticated-users-namespace">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageVisibility">Optional: The visibility of the package</param>
        </member>
        <member name="M:Octokit.PackagesClient.GetForUser(System.String,Octokit.PackageType,System.String)">
            <summary>
            Gets a specific package metadata for a public package owned by a user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.PackagesClient.DeleteForUser(System.String,Octokit.PackageType,System.String)">
            <summary>
            Deletes an entire package for a user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-a-package-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.PackagesClient.RestoreForUser(System.String,Octokit.PackageType,System.String)">
            <summary>
            Restores an entire package for a user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-a-package-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.GetAllForOrg(System.String,Octokit.PackageType,System.String,Octokit.PackageVersionState,Octokit.ApiOptions)">
            <summary>
            List all versions of a package.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-all-package-versions-for-a-package-owned-by-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="state">Optional: Return packages with a state. Defaults to Active</param>
            <param name="options">Optional: Paging options</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.GetForOrg(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Get a specific version of a package.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-version-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.DeleteForOrg(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Deletes a specific package version in an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-package-version-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.RestoreForOrg(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Restores a specific package version in an organization.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-package-version-for-an-organization">API documentation</a> for more details
            </remarks>
            <param name="org">Required: Organisation Name</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.GetAllForActiveUser(Octokit.PackageType,System.String,Octokit.PackageVersionState,Octokit.ApiOptions)">
            <summary>
            Returns all package versions for a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-all-package-versions-for-a-package-owned-by-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="state">Optional: Return packages with a state. Defaults to Active</param>
            <param name="options">Optional: Paging options</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.GetForActiveUser(Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Gets a specific package version for a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-version-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.DeleteForActiveUser(Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Deletes a specific package version for a package owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-a-package-version-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.RestoreForActiveUser(Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Restores a package version owned by the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-a-package-version-for-the-authenticated-user">API documentation</a> for more details
            </remarks>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.GetAllForUser(System.String,Octokit.PackageType,System.String,Octokit.PackageVersionState,Octokit.ApiOptions)">
            <summary>
            Returns all package versions for a public package owned by a specified user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-all-package-versions-for-a-package-owned-by-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="state">Optional: Return packages with a state. Defaults to Active</param>
            <param name="options">Optional: Paging options</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.GetForUser(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Gets a specific package version for a public package owned by a specified user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#get-a-package-version-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.DeleteForUser(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Deletes a specific package version for a user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#delete-package-version-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="M:Octokit.PackageVersionsClient.RestoreForUser(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Restores a specific package version for a user.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/packages#restore-package-version-for-a-user">API documentation</a> for more details
            </remarks>
            <param name="username">Required: Username</param>
            <param name="packageType">Required: The type of package</param>
            <param name="packageName">Required: The name of the package</param>
            <param name="packageVersionId">Required: The id of the package version</param>
        </member>
        <member name="T:Octokit.ProjectCardsClient">
            <summary>
            A client for GitHub's Project Cards API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/cards/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ProjectCardsClient.GetAll(System.Int32)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
        </member>
        <member name="M:Octokit.ProjectCardsClient.GetAll(System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ProjectCardsClient.GetAll(System.Int32,Octokit.ProjectCardRequest)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="request">Used to filter the list of project cards returned</param>
        </member>
        <member name="M:Octokit.ProjectCardsClient.GetAll(System.Int32,Octokit.ProjectCardRequest,Octokit.ApiOptions)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="request">Used to filter the list of project cards returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ProjectCardsClient.Get(System.Int32)">
            <summary>
            Gets a single card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#get-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
        </member>
        <member name="M:Octokit.ProjectCardsClient.Create(System.Int32,Octokit.NewProjectCard)">
            <summary>
            Creates a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#create-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="newProjectCard">The card to create</param>
        </member>
        <member name="M:Octokit.ProjectCardsClient.Update(System.Int32,Octokit.ProjectCardUpdate)">
            <summary>
            Updates a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#update-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
            <param name="projectCardUpdate">New values to update the card with</param>
        </member>
        <member name="M:Octokit.ProjectCardsClient.Delete(System.Int32)">
            <summary>
            Deletes a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#delete-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
        </member>
        <member name="M:Octokit.ProjectCardsClient.Move(System.Int32,Octokit.ProjectCardMove)">
            <summary>
            Moves a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#move-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
            <param name="position">The position to move the card</param>
        </member>
        <member name="T:Octokit.ProjectColumnsClient">
            <summary>
            A client for GitHub's Project Columns API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/columns/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ProjectColumnsClient.GetAll(System.Int32)">
            <summary>
            Gets all columns for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#list-project-columns">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The Id of the project</param>
        </member>
        <member name="M:Octokit.ProjectColumnsClient.GetAll(System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all columns for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#list-project-columns">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The Id of the project</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ProjectColumnsClient.Get(System.Int32)">
            <summary>
            Gets a single column for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#get-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
        </member>
        <member name="M:Octokit.ProjectColumnsClient.Create(System.Int32,Octokit.NewProjectColumn)">
            <summary>
            Creates a column for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#create-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The Id of the project</param>
            <param name="newProjectColumn">The column to create</param>
        </member>
        <member name="M:Octokit.ProjectColumnsClient.Update(System.Int32,Octokit.ProjectColumnUpdate)">
            <summary>
            Updates a column for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#update-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
            <param name="projectColumnUpdate">New values to update the column with</param>
        </member>
        <member name="M:Octokit.ProjectColumnsClient.Delete(System.Int32)">
            <summary>
            Deletes a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#delete-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
        </member>
        <member name="M:Octokit.ProjectColumnsClient.Move(System.Int32,Octokit.ProjectColumnMove)">
            <summary>
            Moves a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#move-a-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
            <param name="position">The position to move the column</param>
        </member>
        <member name="T:Octokit.ProjectsClient">
            <summary>
            A client for GitHub's Repository Projects API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ProjectRequest)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForRepository(System.Int64)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForRepository(System.Int64,Octokit.ProjectRequest)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForRepository(System.Int64,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForOrganization(System.String)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForOrganization(System.String,Octokit.ProjectRequest)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.ProjectsClient.GetAllForOrganization(System.String,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.ProjectsClient.Get(System.Int32)">
            <summary>
            Gets a single project for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#get-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
        </member>
        <member name="M:Octokit.ProjectsClient.CreateForRepository(System.Int64,Octokit.NewProject)">
            <summary>
            Creates a project for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#create-a-repository-project">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newProject">The new project to create for this repository</param>
        </member>
        <member name="M:Octokit.ProjectsClient.CreateForOrganization(System.String,Octokit.NewProject)">
            <summary>
            Creates a project for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#create-an-organization-project">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="newProject">The new project to create for this repository</param>
        </member>
        <member name="M:Octokit.ProjectsClient.Update(System.Int32,Octokit.ProjectUpdate)">
            <summary>
            Updates a project for this repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#update-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
            <param name="projectUpdate">The modified project</param>
        </member>
        <member name="M:Octokit.ProjectsClient.Delete(System.Int32)">
            <summary>
            Deletes a project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#delete-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
        </member>
        <member name="P:Octokit.ProjectsClient.Card">
            <summary>
            A client for GitHub's Project Cards API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/cards/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.ProjectsClient.Column">
            <summary>
            A client for GitHub's Project Columns API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/columns/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.PullRequestReviewCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions/">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentReactionsClient.Delete(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Pull Request comment
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-a-pull-request-comment-reaction</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="commentId">The comment id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentReactionsClient.Delete(System.Int64,System.Int32,System.Int32)">
            <summary>
            Deletes a reaction for a specified Pull Request comment
            </summary>
            <remarks>https://docs.github.com/rest/reactions#delete-a-pull-request-comment-reaction</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="commentId">The comment id</param>
            <param name="reactionId">The reaction id</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.PullRequestReviewCommentsClient">
            <summary>
            A client for GitHub's Pull Request Review Comments API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/comments/">Review Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestReviewCommentRequest)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.PullRequestReviewCommentRequest)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestReviewCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.PullRequestReviewCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetComment(System.String,System.String,System.Int32)">
            <summary>
            Gets a single pull request review comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#get-a-single-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.GetComment(System.Int64,System.Int32)">
            <summary>
            Gets a single pull request review comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#get-a-single-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentCreate)">
            <summary>
            Creates a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewCommentCreate)">
            <summary>
            Creates a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.CreateReply(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentReplyCreate)">
            <summary>
            Creates a comment on a pull request review as a reply to another comment.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.CreateReply(System.Int64,System.Int32,Octokit.PullRequestReviewCommentReplyCreate)">
            <summary>
            Creates a comment on a pull request review as a reply to another comment.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.Edit(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentEdit)">
            <summary>
            Edits a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#edit-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="comment">The edited comment</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.Edit(System.Int64,System.Int32,Octokit.PullRequestReviewCommentEdit)">
            <summary>
            Edits a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#edit-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="comment">The edited comment</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#delete-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#delete-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="T:Octokit.PullRequestReviewRequestsClient">
            <summary>
            A client for GitHub's Pull Request Review Requests API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/review_requests/">Review Requests API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.PullRequestReviewRequestsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewRequestsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewRequestsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Creates review requests on a pull request for specified users.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#create-a-review-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="users">List of logins of user will be requested for review</param>
        </member>
        <member name="M:Octokit.PullRequestReviewRequestsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Creates review requests on a pull request for specified users.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#create-a-review-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="users">List of logins of user will be requested for review</param>
        </member>
        <member name="M:Octokit.PullRequestReviewRequestsClient.Delete(System.String,System.String,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Deletes review request for given users on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="users">List of logins of users that will be not longer requested for review</param>
        </member>
        <member name="M:Octokit.PullRequestReviewRequestsClient.Delete(System.Int64,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Deletes review request for given users on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="users">List of logins of users that will be not longer requested for review</param>
        </member>
        <member name="T:Octokit.PullRequestReviewsClient">
            <summary>
            A client for GitHub's Pull Request Review API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/reviews/">Review API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.Get(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Gets a single pull request review by ID.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.Get(System.Int64,System.Int32,System.Int64)">
            <summary>
            Gets a single pull request review by ID.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewCreate)">
            <summary>
            Creates a review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="review">The review</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewCreate)">
            <summary>
            Creates a review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="review">The review</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.Delete(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Deletes a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.Delete(System.Int64,System.Int32,System.Int64)">
            <summary>
            Deletes a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.Dismiss(System.String,System.String,System.Int32,System.Int64,Octokit.PullRequestReviewDismiss)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="dismissMessage">The message indicating why the review was dismissed</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.Dismiss(System.Int64,System.Int32,System.Int64,Octokit.PullRequestReviewDismiss)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="dismissMessage">The message indicating why the review was dismissed</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.Submit(System.String,System.String,System.Int32,System.Int64,Octokit.PullRequestReviewSubmit)">
            <summary>
            Submits a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="submitMessage">The message and event being submitted for the review</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.Submit(System.Int64,System.Int32,System.Int64,Octokit.PullRequestReviewSubmit)">
            <summary>
            Submits a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="submitMessage">The message and event being submitted for the review</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.GetAllComments(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Lists comments for a single review
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.GetAllComments(System.Int64,System.Int32,System.Int64)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.GetAllComments(System.String,System.String,System.Int32,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists comments for a single review
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestReviewsClient.GetAllComments(System.Int64,System.Int32,System.Int64,Octokit.ApiOptions)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.PullRequestsClient">
            <summary>
            A client for GitHub's Pull Requests API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/">Pull Requests API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.PullRequestsClient.Review">
            <summary>
            Client for managing reviews.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestsClient.ReviewComment">
            <summary>
            Client for managing review comments.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestsClient.ReviewRequest">
            <summary>
            Client for managing review requests.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestsClient.LockUnlock">
            <summary>
            Client for locking/unlocking a coversation on a pull request
            </summary>
        </member>
        <member name="M:Octokit.PullRequestsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Get a pull request by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#get-a-single-pull-request
            </remarks>
        </member>
        <member name="M:Octokit.PullRequestsClient.Get(System.Int64,System.Int32)">
            <summary>
            Get a pull request by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#get-a-single-pull-request
            </remarks>
        </member>
        <member name="M:Octokit.PullRequestsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Get all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.GetAllForRepository(System.Int64)">
            <summary>
            Get all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Get all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Get all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestRequest)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.GetAllForRepository(System.Int64,Octokit.PullRequestRequest)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestRequest,Octokit.ApiOptions)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.GetAllForRepository(System.Int64,Octokit.PullRequestRequest,Octokit.ApiOptions)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Create(System.String,System.String,Octokit.NewPullRequest)">
            <summary>
            Create a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#create-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newPullRequest">A <see cref="T:Octokit.NewPullRequest"/> instance describing the new PullRequest to create</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Create(System.Int64,Octokit.NewPullRequest)">
            <summary>
            Create a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#create-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newPullRequest">A <see cref="T:Octokit.NewPullRequest"/> instance describing the new PullRequest to create</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Update(System.String,System.String,System.Int32,Octokit.PullRequestUpdate)">
            <summary>
            Create a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#update-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The PullRequest number</param>
            <param name="pullRequestUpdate">An <see cref="T:Octokit.PullRequestUpdate"/> instance describing the changes to make to the PullRequest
            </param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Update(System.Int64,System.Int32,Octokit.PullRequestUpdate)">
            <summary>
            Create a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#update-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The PullRequest number</param>
            <param name="pullRequestUpdate">An <see cref="T:Octokit.PullRequestUpdate"/> instance describing the changes to make to the PullRequest
            </param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Merge(System.String,System.String,System.Int32,Octokit.MergePullRequest)">
            <summary>
            Merge a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#merge-a-pull-request-merge-buttontrade</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="mergePullRequest">A <see cref="T:Octokit.MergePullRequest"/> instance describing a pull request merge</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Merge(System.Int64,System.Int32,Octokit.MergePullRequest)">
            <summary>
            Merge a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#merge-a-pull-request-merge-buttontrade</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="mergePullRequest">A <see cref="T:Octokit.MergePullRequest"/> instance describing a pull request merge</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Merged(System.String,System.String,System.Int32)">
            <summary>
            Get the pull request merge status.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Merged(System.Int64,System.Int32)">
            <summary>
            Get the pull request merge status.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Commits(System.String,System.String,System.Int32)">
            <summary>
            Get the list of commits on a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#list-commits-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Commits(System.Int64,System.Int32)">
            <summary>
            Get the list of commits on a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#list-commits-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Files(System.String,System.String,System.Int32)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Files(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Files(System.Int64,System.Int32)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.PullRequestsClient.Files(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.RateLimitClient">
            <summary>
            A client for GitHub's rate-limit APIs.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/rate-limit">Rate-Limit API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.RateLimitClient.#ctor(Octokit.IApiConnection)">
            <summary>
                Initializes a new GitHub rate-limit API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.RateLimitClient.GetRateLimits">
            <summary>
            Gets API Rate Limits (API service rather than header info).
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.MiscellaneousRateLimit"/> of Rate Limits.</returns>
        </member>
        <member name="M:Octokit.ReactionsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Reactions API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="P:Octokit.ReactionsClient.CommitComment">
            <summary>
            Access GitHub's Reactions API for Commit Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.ReactionsClient.Issue">
            <summary>
            Access GitHub's Reactions API for Issues.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.ReactionsClient.IssueComment">
            <summary>
            Access GitHub's Reactions API for Issue Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.ReactionsClient.PullRequestReviewComment">
            <summary>
            Access GitHub's Reactions API for Pull Request Review Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="T:Octokit.ReferencesClient">
            <summary>
            A client for GitHub's References API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/refs/">References API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ReferencesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub References API client
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.ReferencesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference name</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.ReferencesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference name</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.ReferencesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ReferencesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ReferencesClient.GetAll(System.Int64)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ReferencesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ReferencesClient.GetAllForSubNamespace(System.String,System.String,System.String)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ReferencesClient.GetAllForSubNamespace(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <param name="options">Options for changing the API response</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.ReferencesClient.GetAllForSubNamespace(System.Int64,System.String)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ReferencesClient.GetAllForSubNamespace(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <param name="options">Options for changing the API response</param>
            <remarks>
            The subNamespace parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.ReferencesClient.Create(System.String,System.String,Octokit.NewReference)">
            <summary>
            Creates a reference for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#create-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ReferencesClient.Create(System.Int64,Octokit.NewReference)">
            <summary>
            Creates a reference for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#create-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ReferencesClient.Update(System.String,System.String,System.String,Octokit.ReferenceUpdate)">
            <summary>
            Updates a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#update-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference name</param>
            <param name="referenceUpdate">The updated reference data</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.ReferencesClient.Update(System.Int64,System.String,Octokit.ReferenceUpdate)">
            <summary>
            Updates a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#update-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference name</param>
            <param name="referenceUpdate">The updated reference data</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.ReferencesClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#delete-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference name</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="M:Octokit.ReferencesClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#delete-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference name</param>
            <remarks>
            The reference parameter supports either the fully-qualified ref
            (prefixed with  "refs/", e.g. "refs/heads/main" or
            "refs/tags/release-1") or the shortened form (omitting "refs/", e.g.
            "heads/main" or "tags/release-1")
            </remarks>
        </member>
        <member name="T:Octokit.ReleasesClient">
            <summary>
            A client for GitHub's Releases API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/">Releases API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.ReleasesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Releases API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.ReleasesClient.GenerateReleaseNotes(System.String,System.String,Octokit.GenerateReleaseNotesRequest)">
            <summary>
            Generates a <see cref="T:Octokit.GeneratedReleaseNotes"/>s for the specified repository with auto generated notes.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/releases/releases#generate-release-notes-content-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="data">The request for generating release notes</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GenerateReleaseNotes(System.Int64,Octokit.GenerateReleaseNotesRequest)">
            <summary>
            Generates a <see cref="T:Octokit.GeneratedReleaseNotes"/>s for the specified repository with auto generated notes.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/releases/releases#generate-release-notes-content-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="data">The request for generating release notes</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GetAll(System.Int64)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="tag">The tag of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="tag">The tag of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GetLatest(System.String,System.String)">
            <summary>
            Gets the latest <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/releases/#get-the-latest-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GetLatest(System.Int64)">
            <summary>
            Gets the latest <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/releases/#get-the-latest-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.Create(System.String,System.String,Octokit.NewRelease)">
            <summary>
            Creates a new <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#create-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="data">A description of the release to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.Create(System.Int64,Octokit.NewRelease)">
            <summary>
            Creates a new <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#create-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="data">A description of the release to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.Edit(System.String,System.String,System.Int32,Octokit.ReleaseUpdate)">
            <summary>
            Edits an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release</param>
            <param name="data">A description of the release to edit</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.Edit(System.Int64,System.Int32,Octokit.ReleaseUpdate)">
            <summary>
            Edits an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release</param>
            <param name="data">A description of the release to edit</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release to delete</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release to delete</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GetAllAssets(System.String,System.String,System.Int32)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GetAllAssets(System.Int64,System.Int32)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GetAllAssets(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GetAllAssets(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.UploadAsset(Octokit.Release,Octokit.ReleaseAssetUpload,System.Threading.CancellationToken)">
            <summary>
            Uploads a <see cref="T:Octokit.ReleaseAsset"/> for the specified release.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#upload-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="release">The <see cref="T:Octokit.Release"/> to attach the uploaded asset to</param>
            <param name="data">Description of the asset with its data</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.ReleasesClient.GetAsset(System.String,System.String,System.Int32)">
            <summary>
            Gets the specified <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
        </member>
        <member name="M:Octokit.ReleasesClient.GetAsset(System.Int64,System.Int32)">
            <summary>
            Gets the specified <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
        </member>
        <member name="M:Octokit.ReleasesClient.EditAsset(System.String,System.String,System.Int32,Octokit.ReleaseAssetUpdate)">
            <summary>
            Edits the <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
            <param name="data">Description of the asset with its amended data</param>
        </member>
        <member name="M:Octokit.ReleasesClient.EditAsset(System.Int64,System.Int32,Octokit.ReleaseAssetUpdate)">
            <summary>
            Edits the <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
            <param name="data">Description of the asset with its amended data</param>
        </member>
        <member name="M:Octokit.ReleasesClient.DeleteAsset(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.ReleaseAsset"/> from the specified repository
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.ReleaseAsset"/>.</param>
        </member>
        <member name="M:Octokit.ReleasesClient.DeleteAsset(System.Int64,System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.ReleaseAsset"/> from the specified repository
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.ReleaseAsset"/>.</param>
        </member>
        <member name="T:Octokit.RepoCollaboratorsClient">
            <summary>
            A client for GitHub's Collaborators API.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28">Collaborators API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Repo Collaborators API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.GetAll(System.Int64)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.GetAll(System.String,System.String,Octokit.RepositoryCollaboratorListRequest)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository collaborators</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.GetAll(System.Int64,Octokit.RepositoryCollaboratorListRequest)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="request">Used to request and filter a list of repository collaborators</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.GetAll(System.String,System.String,Octokit.RepositoryCollaboratorListRequest,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository collaborators</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.GetAll(System.Int64,Octokit.RepositoryCollaboratorListRequest,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="request">Used to request and filter a list of repository collaborators</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.IsCollaborator(System.String,System.String,System.String)">
            <summary>
            Checks if a user is a collaborator on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#get">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the prospective collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.IsCollaborator(System.Int64,System.String)">
            <summary>
            Checks if a user is a collaborator on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#get">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the prospective collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.ReviewPermission(System.String,System.String,System.String)">
            <summary>
            Review a user's permission level in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the collaborator to check permission for</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.ReviewPermission(System.Int64,System.String)">
            <summary>
            Review a user's permission level in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the collaborator to check permission for</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.Add(System.String,System.String,System.String)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.Add(System.String,System.String,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.Add(System.Int64,System.String)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.Add(System.Int64,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.Invite(System.String,System.String,System.String)">
            <summary>
            Invites a new collaborator to the repo
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="user">The name of the user to invite.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.Invite(System.String,System.String,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Invites a new collaborator to the repo
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="user">The name of the user to invite.</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.Invite(System.Int64,System.String)">
            <summary>
            Invites a new collaborator to the repo
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository.</param>
            <param name="user">The name of the user to invite.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.Invite(System.Int64,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Invites a new collaborator to the repo
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository.</param>
            <param name="user">The name of the user to invite.</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a collaborator from the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#remove-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the deleted collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepoCollaboratorsClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a collaborator from the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#remove-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the deleted collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.RepositoriesClient">
            <summary>
            A client for GitHub's Repositories API.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/repos/repos">Repositories API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoriesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Repos API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.RepositoriesClient.Create(Octokit.NewRepository)">
            <summary>
            Creates a new repository for the current user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#create">API documentation</a> for more information.
            </remarks>
            <param name="newRepository">A <see cref="T:Octokit.NewRepository"/> instance describing the new repository to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.Repository"/> instance for the created repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.Create(System.String,Octokit.NewRepository)">
            <summary>
            Creates a new repository in the specified organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#create">API documentation</a> for more information.
            </remarks>
            <param name="organizationLogin">Login of the organization in which to create the repository</param>
            <param name="newRepository">A <see cref="T:Octokit.NewRepository"/> instance describing the new repository to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.Repository"/> instance for the created repository</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.Generate(System.String,System.String,Octokit.NewRepositoryFromTemplate)">
            <summary>
            Creates a new repository from a template
            </summary>
            <param name="templateOwner">The organization or person who will owns the template</param>
            <param name="templateRepo">The name of template repository to work from</param>
            <param name="newRepository"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.Delete(System.String,System.String)">
            <summary>
            Deletes the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#delete-a-repository">API documentation</a> for more information.
            Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoriesClient.Delete(System.Int64)">
            <summary>
            Deletes the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#delete-a-repository">API documentation</a> for more information.
            Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoriesClient.Transfer(System.String,System.String,Octokit.RepositoryTransfer)">
            <summary>
            Transfers the ownership of the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#transfer-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The current owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="repositoryTransfer">Repository transfer information</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.Transfer(System.Int64,Octokit.RepositoryTransfer)">
            <summary>
            Transfers the ownership of the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#transfer-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="repositoryTransfer">Repository transfer information</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.AreVulnerabilityAlertsEnabled(System.String,System.String)">
            <summary>
            Checks if vulnerability alerts are enabled for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/reference/repos#check-if-vulnerability-alerts-are-enabled-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The current owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>A <c>bool</c> indicating if alerts are turned on or not.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.Edit(System.String,System.String,Octokit.RepositoryUpdate)">
            <summary>
            Updates the specified repository with the values given in <paramref name="update"/>
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="update">New values to update the repository with</param>
            <returns>The updated <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.Edit(System.Int64,Octokit.RepositoryUpdate)">
            <summary>
            Updates the specified repository with the values given in <paramref name="update"/>
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="update">New values to update the repository with</param>
            <returns>The updated <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.Get(System.String,System.String)">
            <summary>
            Gets the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#get">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.Get(System.Int64)">
            <summary>
            Gets the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#get">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllPublic">
            <summary>
            Gets all public repositories.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#list-all-public-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllPublic(Octokit.PublicRepositoryRequest)">
            <summary>
            Gets all public repositories since the integer Id of the last Repository that you've seen.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#list-all-public-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="request">Search parameters of the last repository seen</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllForCurrent">
            <summary>
            Gets all repositories owned by the current user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-your-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all repositories owned by the current user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-your-repositories">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllForCurrent(Octokit.RepositoryRequest)">
            <summary>
            Gets all repositories owned by the current user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-your-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="request">Search parameters to filter results on</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllForCurrent(Octokit.RepositoryRequest,Octokit.ApiOptions)">
            <summary>
            Gets all repositories owned by the current user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-your-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="request">Search parameters to filter results on</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllForUser(System.String)">
            <summary>
            Gets all repositories owned by the specified user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-user-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="login">The account name to search for</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all repositories owned by the specified user.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-user-repositories">API documentation</a> for more information.
            </remarks>
            <param name="login">The account name to search for</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllForOrg(System.String)">
            <summary>
            Gets all repositories owned by the specified organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-organization-repositories">API documentation</a> for more information.
            The default page size on GitHub.com is 30.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllForOrg(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all repositories owned by the specified organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-organization-repositories">API documentation</a> for more information.
            </remarks>
            <param name="organization">The organization name to search for</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="P:Octokit.RepositoriesClient.Actions">
            <summary>
            Client for managing Actions in a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/actions/">Repository Actions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Branch">
            <summary>
            A client for GitHub's Repository Branches API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/branches/">Branches API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Status">
            <summary>
            A client for GitHub's Commit Status API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/statuses/">Commit Status API documentation</a> for more
            details. Also check out the <a href="https://github.com/blog/1227-commit-status-api">blog post</a>
            that announced this feature.
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Hooks">
            <summary>
            A client for GitHub's Repository Hooks API.
            </summary>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/">Hooks API documentation</a> for more information.</remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Forks">
            <summary>
            A client for GitHub's Repository Forks API.
            </summary>
            <remarks>See <a href="http://developer.github.com/v3/repos/forks/">Forks API documentation</a> for more information.</remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Collaborator">
            <summary>
            A client for GitHub's Repo Collaborators.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/">Collaborators API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Deployment">
            <summary>
            Client for GitHub's Repository Deployments API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/deployments/">Deployments API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Environment">
            <summary>
            Client for GitHub's Repository Deployment Environments API
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/deployments/environments">Deployments Environments API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Statistics">
             <summary>
             Client for GitHub's Repository Statistics API
             Note that the GitHub API uses caching on these endpoints,
             see <a href="https://developer.github.com/v3/repos/statistics/#a-word-about-caching">a word about caching</a> for more details.
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/repos/statistics/">Statistics API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Commit">
             <summary>
             Client for GitHub's Repository Commits API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/repos/commits/">Commits API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Release">
            <summary>
            Access GitHub's Releases API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/releases/
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Merging">
             <summary>
             Client for GitHub's Repository Merging API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/repos/merging/">Merging API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.PullRequest">
            <summary>
            Client for managing pull requests.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/pulls/">Pull Requests API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Comment">
            <summary>
            Client for managing commit comments in a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/comments/">Repository Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.DeployKeys">
            <summary>
            Client for managing deploy keys in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/">Repository Deploy Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Content">
            <summary>
            Client for managing the contents of a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/">Repository Contents API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllContributors(System.String,System.String)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllContributors(System.Int64)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllContributors(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllContributors(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllContributors(System.String,System.String,System.Boolean)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllContributors(System.Int64,System.Boolean)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllContributors(System.String,System.String,System.Boolean,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllContributors(System.Int64,System.Boolean,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTopics(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all topics for the specified repository ID.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/reference/repos#get-all-repository-topics">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All topics associated with the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTopics(System.Int64)">
            <summary>
            Gets all topics for the specified repository ID.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/reference/repos#get-all-repository-topics">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
            <returns>All topics associated with the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTopics(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all topics for the specified owner and repository name.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/reference/repos#get-all-repository-topics">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All topics associated with the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTopics(System.String,System.String)">
            <summary>
            Gets all topics for the specified owner and repository name.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/rest/reference/repos#get-all-repository-topics">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All topics associated with the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.ReplaceAllTopics(System.String,System.String,Octokit.RepositoryTopics)">
             <summary>
             Replaces all topics for the specified repository.
             </summary>
             <remarks>
             See the <a href="https://docs.github.com/rest/reference/repos#replace-all-repository-topics">API documentation</a> for more details
            
             This is a replacement operation; it is not additive. To clear repository topics, for example, you could specify an empty list of topics here.
             </remarks>
             <param name="owner">The owner of the repository</param>
             <param name="name">The name of the repository</param>
             <param name="topics">The list of topics to associate with the repository</param>
             <returns>All topics now associated with the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.ReplaceAllTopics(System.Int64,Octokit.RepositoryTopics)">
             <summary>
             Replaces all topics for the specified repository.
             </summary>
             <remarks>
             See the <a href="https://docs.github.com/rest/reference/repos#replace-all-repository-topics">API documentation</a> for more details
            
             This is a replacement operation; it is not additive. To clear repository topics, for example, you could specify an empty list of topics here.
             </remarks>
             <param name="repositoryId">The ID of the repository</param>
             <param name="topics">The list of topics to associate with the repository</param>
             <returns>All topics now associated with the repository.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllLanguages(System.String,System.String)">
            <summary>
            Gets all languages for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-languages">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All languages used in the repository and the number of bytes of each language.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllLanguages(System.Int64)">
            <summary>
            Gets all languages for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-languages">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All languages used in the repository and the number of bytes of each language.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTeams(System.String,System.String)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTeams(System.Int64)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTeams(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTeams(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTags(System.String,System.String)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTags(System.Int64)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTags(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllTags(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetLicenseContents(System.String,System.String)">
            <summary>
            Get the contents of a repository's license
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>Returns the contents of the repository's license file, if one is detected.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetLicenseContents(System.Int64)">
            <summary>
            Get the contents of a repository's license
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>Returns the contents of the repository's license file, if one is detected.</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllCodeOwnersErrors(System.String,System.String)">
            <summary>
            Gets the list of errors in the codeowners file
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>Returns the list of errors in the codeowners files</returns>
        </member>
        <member name="M:Octokit.RepositoriesClient.GetAllCodeOwnersErrors(System.Int64)">
            <summary>
            Gets the list of errors in the codeowners file
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>Returns the list of errors in the codeowners files</returns>
        </member>
        <member name="P:Octokit.RepositoriesClient.Page">
            <summary>
            A client for GitHub's Repository Pages API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/">Repository Pages API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Invitation">
            <summary>
            A client for GitHub's Repository Invitations API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/">Repository Invitations API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Traffic">
            <summary>
            Access GitHub's Repository Traffic API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/traffic/
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Project">
            <summary>
            Access GitHub's Repository Projects API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/projects/
            </remarks>
        </member>
        <member name="P:Octokit.RepositoriesClient.Autolinks">
            <summary>
            Access GitHub's Repository Autolinks API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/en/rest/repos/autolinks
            </remarks>
        </member>
        <member name="T:Octokit.RepositoryActionsClient">
            <summary>
            A client for GitHub's Repository Actions API.
            </summary>
            <remarks>
            See the <a href="http://docs.github.com/v3/actions">Repository Actions API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryActionsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Repository Actions API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="P:Octokit.RepositoryActionsClient.Secrets">
            <summary>
            Client for GitHub's Repository Actions API
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#secrets">Deployments API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.RepositoryActionsClient.Variables">
            <summary>
            Client for GitHub's Repository Actions API
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/free-pro-team@latest/rest/actions/variables?apiVersion=2022-11-28">Deployments API documentation</a> for more details
            </remarks>
        </member>
        <member name="T:Octokit.RepositoryBranchesClient">
            <summary>
            A client for GitHub's Repository Branches API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches">Repository Branches API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Repository Branches API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAll(System.Int64)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets the specified branch.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.Get(System.Int64,System.String)">
            <summary>
            Gets the specified branch.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetBranchProtection(System.String,System.String,System.String)">
            <summary>
            Get the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetBranchProtection(System.Int64,System.String)">
            <summary>
            Get the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateBranchProtection(System.String,System.String,System.String,Octokit.BranchProtectionSettingsUpdate)">
            <summary>
            Update the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Branch protection settings</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateBranchProtection(System.Int64,System.String,Octokit.BranchProtectionSettingsUpdate)">
            <summary>
            Update the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Branch protection settings</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteBranchProtection(System.String,System.String,System.String)">
            <summary>
            Remove the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteBranchProtection(System.Int64,System.String)">
            <summary>
            Remove the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetRequiredStatusChecks(System.String,System.String,System.String)">
            <summary>
            Get the required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetRequiredStatusChecks(System.Int64,System.String)">
            <summary>
            Get the required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateRequiredStatusChecks(System.String,System.String,System.String,Octokit.BranchProtectionRequiredStatusChecksUpdate)">
            <summary>
            Replace required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Required status checks</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateRequiredStatusChecks(System.Int64,System.String,Octokit.BranchProtectionRequiredStatusChecksUpdate)">
            <summary>
            Replace required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Required status checks</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteRequiredStatusChecks(System.String,System.String,System.String)">
            <summary>
            Remove required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteRequiredStatusChecks(System.Int64,System.String)">
            <summary>
            Remove required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAllRequiredStatusChecksContexts(System.String,System.String,System.String)">
            <summary>
            Get the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAllRequiredStatusChecksContexts(System.Int64,System.String)">
            <summary>
            Get the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Replace the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to replace</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Replace the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to replace</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.AddRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Add the required status checks context for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to add</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.AddRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Add the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to add</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Remove the required status checks context for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to remove</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Remove the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to remove</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetReviewEnforcement(System.String,System.String,System.String)">
            <summary>
            Get required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetReviewEnforcement(System.Int64,System.String)">
            <summary>
            Get required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateReviewEnforcement(System.String,System.String,System.String,Octokit.BranchProtectionRequiredReviewsUpdate)">
            <summary>
            Update required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">The required pull request review settings</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateReviewEnforcement(System.Int64,System.String,Octokit.BranchProtectionRequiredReviewsUpdate)">
            <summary>
            Update required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">The required pull request review settings</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.RemoveReviewEnforcement(System.String,System.String,System.String)">
            <summary>
            Remove required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.RemoveReviewEnforcement(System.Int64,System.String)">
            <summary>
            Remove required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Get admin enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAdminEnforcement(System.Int64,System.String)">
            <summary>
            Get admin enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.AddAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Add admin enforcement to protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.AddAdminEnforcement(System.Int64,System.String)">
            <summary>
            Add admin enforcement to protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.RemoveAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Remove admin enforcement on protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.RemoveAdminEnforcement(System.Int64,System.String)">
            <summary>
            Remove admin enforcement on protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetProtectedBranchRestrictions(System.String,System.String,System.String)">
            <summary>
            Get restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetProtectedBranchRestrictions(System.Int64,System.String)">
            <summary>
            Get restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteProtectedBranchRestrictions(System.String,System.String,System.String)">
            <summary>
            Remove restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteProtectedBranchRestrictions(System.Int64,System.String)">
            <summary>
            Remove restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAllProtectedBranchTeamRestrictions(System.String,System.String,System.String)">
            <summary>
            Get team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAllProtectedBranchTeamRestrictions(System.Int64,System.String)">
            <summary>
            Get team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Replace team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Replace team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.AddProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Add team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access to add</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.AddProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Add team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access to add</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Remove team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams to remove</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Remove team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams to remove</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAllProtectedBranchUserRestrictions(System.String,System.String,System.String)">
            <summary>
            Get user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.GetAllProtectedBranchUserRestrictions(System.Int64,System.String)">
            <summary>
            Get user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Replace user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.UpdateProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Replace user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.AddProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Add user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to add</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.AddProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Add user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to add</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Remove user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to remove</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.DeleteProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Remove user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to remove</param>
        </member>
        <member name="M:Octokit.RepositoryBranchesClient.RenameBranch(System.String,System.String,System.String,System.String)">
            <summary>
            Renames a branch in a repository
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/branches/branches?apiVersion=2022-11-28#rename-a-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repository">The name of the repository</param>
            <param name="branch">The name of the branch to rename</param>
            <param name="newName">The new name of the branch</param>
        </member>
        <member name="T:Octokit.RepositoryCommentsClient">
            <summary>
            A client for GitHub's Repository Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/comments/">Repository Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Repository Comments API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Repository Comment by number.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <remarks>http://developer.github.com/v3/repos/comments/#get-a-single-commit-comment</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Repository Comment by number.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <remarks>http://developer.github.com/v3/repos/comments/#get-a-single-commit-comment</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.GetAllForCommit(System.String,System.String,System.String)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha of the commit</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.GetAllForCommit(System.Int64,System.String)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha of the commit</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.GetAllForCommit(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha of the commit</param>
            <param name="options">Options to change the API response</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.GetAllForCommit(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha of the commit</param>
            <param name="options">Options to change the API response</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.Create(System.String,System.String,System.String,Octokit.NewCommitComment)">
            <summary>
            Creates a new Commit Comment for a specified Commit.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha reference of commit</param>
            <param name="newCommitComment">The new comment to add to the commit</param>
            <remarks>http://developer.github.com/v3/repos/comments/#create-a-commit-comment</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.Create(System.Int64,System.String,Octokit.NewCommitComment)">
            <summary>
            Creates a new Commit Comment for a specified Commit.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha reference of commit</param>
            <param name="newCommitComment">The new comment to add to the commit</param>
            <remarks>http://developer.github.com/v3/repos/comments/#create-a-commit-comment</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.Update(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates a specified Commit Comment.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <param name="commentUpdate">The modified comment</param>
            <remarks>http://developer.github.com/v3/repos/comments/#update-a-commit-comment</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.Update(System.Int64,System.Int32,System.String)">
            <summary>
            Updates a specified Commit Comment.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment number</param>
            <param name="commentUpdate">The modified comment</param>
            <remarks>http://developer.github.com/v3/repos/comments/#update-a-commit-comment</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified Commit Comment
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <remarks>http://developer.github.com/v3/repos/comments/#delete-a-commit-comment</remarks>
        </member>
        <member name="M:Octokit.RepositoryCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes the specified Commit Comment
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <remarks>http://developer.github.com/v3/repos/comments/#delete-a-commit-comment</remarks>
        </member>
        <member name="T:Octokit.RepositoryCommitsClient">
            <summary>
            A client for GitHub's Repository Commits API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/commits/">Repository Commits API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.BranchesWhereHead(System.Int64,System.String)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha1">Used to find all branches where the given commit SHA is the HEAD, or latest commit for the branch</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.BranchesWhereHead(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha1">Used to find all branches where the given commit SHA is the HEAD, or latest commit for the branch</param>
            /// <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.BranchesWhereHead(System.String,System.String,System.String)">
            <summary>
            List pull requests associated with a commit
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha1">Used to find all branches where the given commit SHA is the HEAD, or latest commit for the branch</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.BranchesWhereHead(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha1">Used to find all branches where the given commit SHA is the HEAD, or latest commit for the branch</param>
            /// <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.Compare(System.String,System.String,System.String,System.String)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.Compare(System.Int64,System.String,System.String)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.Compare(System.String,System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.Compare(System.Int64,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single commit for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference for the commit (SHA)</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single commit for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference for the commit (SHA)</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.GetAll(System.Int64)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.GetAll(System.String,System.String,Octokit.CommitRequest)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.GetAll(System.Int64,Octokit.CommitRequest)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.GetAll(System.String,System.String,Octokit.CommitRequest,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.GetAll(System.Int64,Octokit.CommitRequest,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.GetSha1(System.String,System.String,System.String)">
            <summary>
            Get the SHA-1 of a commit reference
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The repository reference</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.GetSha1(System.Int64,System.String)">
            <summary>
            Get the SHA-1 of a commit reference
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The repository reference</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.PullRequests(System.Int64,System.String)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha1">Used to find all pull requests containing the provided commit SHA, which can be from any point in the commit history</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.PullRequests(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha1">Used to find all pull requests containing the provided commit SHA, which can be from any point in the commit history</param>
            /// <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.PullRequests(System.String,System.String,System.String)">
            <summary>
            List pull requests associated with a commit
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha1">Used to find all pull requests containing the provided commit SHA, which can be from any point in the commit history</param>
        </member>
        <member name="M:Octokit.RepositoryCommitsClient.PullRequests(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all pull requests for a given commit
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha1">Used to find all pull requests containing the provided commit SHA, which can be from any point in the commit history</param>
            /// <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.RepositoryContentsClient">
            <summary>
            Client for accessing contents of files within a repository as base64 encoded content.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/">Repository Contents API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Create an instance of the RepositoryContentsClient
            </summary>
            <param name="apiConnection">The underlying connection to use</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetAllContents(System.String,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetRawContent(System.String,System.String,System.String)">
            <summary>
            Returns the raw content of the file at the given <paramref name="path"/> or <c>null</c> if the path is a directory.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetAllContents(System.Int64,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetAllContents(System.String,System.String)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetAllContents(System.Int64)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetAllContentsByRef(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The content path</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository�s default branch (usually main)</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetRawContentByRef(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the raw content of the file at the given <paramref name="path"/> or <c>null</c> if the path is a directory.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The content path</param>
            <param name="reference">The name of the commit/branch/tag.</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetAllContentsByRef(System.Int64,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The content path</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually main)</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetAllContentsByRef(System.String,System.String,System.String)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository�s default branch (usually main)</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetAllContentsByRef(System.Int64,System.String)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually main)</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetReadme(System.String,System.String)">
            <summary>
            Gets the preferred README for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/#get-the-readme">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetReadme(System.Int64)">
            <summary>
            Gets the preferred README for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/#get-the-readme">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetReadmeHtml(System.String,System.String)">
            <summary>
            Gets the preferred README's HTML for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/#get-the-readme">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetReadmeHtml(System.Int64)">
            <summary>
            Gets the preferred README's HTML for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/#get-the-readme">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetArchive(System.String,System.String)">
            <summary>
            Get an archive of a given repository's contents
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetArchive(System.Int64)">
            <summary>
            Get an archive of a given repository's contents
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat,System.String)">
            <summary>
            Get an archive of a given repository's contents, using a specific format and reference
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat,System.String)">
            <summary>
            Get an archive of a given repository's contents, using a specific format and reference
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat,System.String,System.TimeSpan)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
            <param name="timeout"> Time span until timeout </param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat,System.String,System.TimeSpan)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
            <param name="timeout"> Time span until timeout </param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.CreateFile(System.String,System.String,System.String,Octokit.CreateFileRequest)">
            <summary>
            Creates a commit that creates a new file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to create</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.CreateFile(System.Int64,System.String,Octokit.CreateFileRequest)">
            <summary>
            Creates a commit that creates a new file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to create</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.UpdateFile(System.String,System.String,System.String,Octokit.UpdateFileRequest)">
            <summary>
            Creates a commit that updates the contents of a file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to update</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.UpdateFile(System.Int64,System.String,Octokit.UpdateFileRequest)">
            <summary>
            Creates a commit that updates the contents of a file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to update</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.DeleteFile(System.String,System.String,System.String,Octokit.DeleteFileRequest)">
            <summary>
            Creates a commit that deletes a file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to delete</param>
        </member>
        <member name="M:Octokit.RepositoryContentsClient.DeleteFile(System.Int64,System.String,Octokit.DeleteFileRequest)">
            <summary>
            Creates a commit that deletes a file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to delete</param>
        </member>
        <member name="T:Octokit.RepositoryDeployKeysClient">
            <summary>
            A client for GitHub's Repository Deploy Keys API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/">Deploy Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryDeployKeysClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub repository deploy keys API client.
            </summary>
            <param name="apiConnection">The API connection.</param>
        </member>
        <member name="M:Octokit.RepositoryDeployKeysClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Get a single deploy key by number for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#get"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="number">The id of the deploy key.</param>
        </member>
        <member name="M:Octokit.RepositoryDeployKeysClient.Get(System.Int64,System.Int32)">
            <summary>
            Get a single deploy key by number for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#get"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="number">The id of the deploy key.</param>
        </member>
        <member name="M:Octokit.RepositoryDeployKeysClient.GetAll(System.String,System.String)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
        </member>
        <member name="M:Octokit.RepositoryDeployKeysClient.GetAll(System.Int64)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
        </member>
        <member name="M:Octokit.RepositoryDeployKeysClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryDeployKeysClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryDeployKeysClient.Create(System.String,System.String,Octokit.NewDeployKey)">
            <summary>
            Creates a new deploy key for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#create"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="newDeployKey">The deploy key to create for the repository.</param>
        </member>
        <member name="M:Octokit.RepositoryDeployKeysClient.Create(System.Int64,Octokit.NewDeployKey)">
            <summary>
            Creates a new deploy key for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#create"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="newDeployKey">The deploy key to create for the repository.</param>
        </member>
        <member name="M:Octokit.RepositoryDeployKeysClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a deploy key from a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#delete"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="number">The id of the deploy key to delete.</param>
        </member>
        <member name="M:Octokit.RepositoryDeployKeysClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a deploy key from a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#delete"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="number">The id of the deploy key to delete.</param>
        </member>
        <member name="T:Octokit.RepositoryForksClient">
            <summary>
            A client for GitHub's Repository Forks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/forks/">Forks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryForksClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Repos Fork API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.RepositoryForksClient.GetAll(System.String,System.String)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryForksClient.GetAll(System.Int64)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryForksClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryForksClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryForksClient.GetAll(System.String,System.String,Octokit.RepositoryForksListRequest)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
        </member>
        <member name="M:Octokit.RepositoryForksClient.GetAll(System.Int64,Octokit.RepositoryForksListRequest)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
        </member>
        <member name="M:Octokit.RepositoryForksClient.GetAll(System.String,System.String,Octokit.RepositoryForksListRequest,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryForksClient.GetAll(System.Int64,Octokit.RepositoryForksListRequest,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.RepositoryForksClient.Create(System.String,System.String,Octokit.NewRepositoryFork)">
            <summary>
            Creates a fork for a repository. Specify organization in the fork parameter to create for an organization.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#create-a-fork">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="fork">Used to fork a repository</param>
        </member>
        <member name="M:Octokit.RepositoryForksClient.Create(System.Int64,Octokit.NewRepositoryFork)">
            <summary>
            Creates a fork for a repository. Specify organization in the fork parameter to create for an organization.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#create-a-fork">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="fork">Used to fork a repository</param>
        </member>
        <member name="T:Octokit.RepositoryHooksClient">
            <summary>
            A client for GitHub's Repository Webhooks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/hooks/">Webhooks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Webhooks API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.GetAll(System.String,System.String)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.GetAll(System.Int64)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="options">Options for changing the API response</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single hook by Id
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#get-single-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single hook by Id
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#get-single-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Create(System.String,System.String,Octokit.NewRepositoryHook)">
            <summary>
            Creates a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hook">The hook's parameters</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#create-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Create(System.Int64,Octokit.NewRepositoryHook)">
            <summary>
            Creates a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hook">The hook's parameters</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#create-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Edit(System.String,System.String,System.Int32,Octokit.EditRepositoryHook)">
            <summary>
            Edits a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <param name="hook">The requested changes to an edit repository hook</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Edit(System.Int64,System.Int32,Octokit.EditRepositoryHook)">
            <summary>
            Edits a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <param name="hook">The requested changes to an edit repository hook</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Test(System.String,System.String,System.Int32)">
            <summary>
            Tests a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#test-a-hook">API documentation</a> for more information.
            This will trigger the hook with the latest push to the current repository if the hook is subscribed to push events. If the hook
            is not subscribed to push events, the server will respond with 204 but no test POST will be generated.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Test(System.Int64,System.Int32)">
            <summary>
            Tests a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#test-a-hook">API documentation</a> for more information.
            This will trigger the hook with the latest push to the current repository if the hook is subscribed to push events. If the hook
            is not subscribed to push events, the server will respond with 204 but no test POST will be generated.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Ping(System.String,System.String,System.Int32)">
            <summary>
            This will trigger a ping event to be sent to the hook.
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Ping(System.Int64,System.Int32)">
            <summary>
            This will trigger a ping event to be sent to the hook.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#delete-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryHooksClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#delete-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.RepositoryInvitationsClient.Accept(System.Int32)">
            <summary>
            Accept a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#accept-a-repository-invitation">API documentation</a> for more information.
            </remarks>
            <param name="invitationId">The id of the invitation</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryInvitationsClient.Decline(System.Int32)">
            <summary>
            Decline a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#decline-a-repository-invitation">API documentation</a> for more information.
            </remarks>
            <param name="invitationId">The id of the invitation</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryInvitationsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#delete-a-repository-invitation">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="invitationId">The id of the invitation</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryInvitationsClient.GetAllForCurrent">
            <summary>
            Gets all invitations for the current user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations">API documentation</a> for more information.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryInvitationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all invitations for the current user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryInvitationsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the invitations on a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryInvitationsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the invitations on a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryInvitationsClient.Edit(System.Int64,System.Int32,Octokit.InvitationUpdate)">
            <summary>
            Updates a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#update-a-repository-invitation">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="invitationId">The id of the invitation</param>
            <param name="permissions">The permission for the collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.RepositoryPagesClient">
            <summary>
            A client for GitHub's Repository Pages API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/">Repository Pages API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryPagesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Repository Pages API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.RepositoryPagesClient.Get(System.String,System.String)">
            <summary>
            Gets the page metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryPagesClient.Get(System.Int64)">
            <summary>
            Gets the page metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryPagesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryPagesClient.GetAll(System.Int64)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryPagesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryPagesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryPagesClient.GetLatest(System.String,System.String)">
            <summary>
            Gets the build metadata for the last build for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-latest-pages-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryPagesClient.GetLatest(System.Int64)">
            <summary>
            Gets the build metadata for the last build for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-latest-pages-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryPagesClient.RequestPageBuild(System.String,System.String)">
            <summary>
            Requests your site be built from the latest revision on the default branch for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#request-a-page-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositoryPagesClient.RequestPageBuild(System.Int64)">
            <summary>
            Requests your site be built from the latest revision on the default branch for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#request-a-page-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.RepositorySecretsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Repository Branches API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.RepositorySecretsClient.GetPublicKey(System.String,System.String)">
            <summary>
            Get the public signing key to encrypt secrets for a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#get-a-repository-public-key">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.SecretsPublicKey"/> instance for the repository public key.</returns>
        </member>
        <member name="M:Octokit.RepositorySecretsClient.GetAll(System.String,System.String)">
            <summary>
            List the secrets for a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#list-repository-secrets">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositorySecretsCollection"/> instance for the list of repository secrets.</returns>
        </member>
        <member name="M:Octokit.RepositorySecretsClient.Get(System.String,System.String,System.String)">
            <summary>
            Get a secret from a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#get-a-repository-secret">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="secretName">The name of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositorySecret"/> instance for the repository secret.</returns>
        </member>
        <member name="M:Octokit.RepositorySecretsClient.CreateOrUpdate(System.String,System.String,System.String,Octokit.UpsertRepositorySecret)">
            <summary>
            Create or update a secret in a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#create-or-update-a-repository-secret">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="secretName">The name of the secret</param>
            <param name="upsertSecret">The encrypted value and id of the encryption key</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositorySecret"/> instance for the repository secret that was created or updated.</returns>
        </member>
        <member name="M:Octokit.RepositorySecretsClient.Delete(System.String,System.String,System.String)">
            <summary>
            Delete a secret in a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/v3/actions#delete-a-repository-secret">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="secretName">The name of the secret</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.RepositoryTrafficClient.GetAllPaths(System.Int64)">
            <summary>
            List the top 10 popular contents over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-paths</remarks>
            <param name="repositoryId">The owner of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryTrafficClient.GetAllPaths(System.String,System.String)">
            <summary>
            List the top 10 popular contents over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-paths</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryTrafficClient.GetAllReferrers(System.Int64)">
            <summary>
            List the top 10 referrers over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-referrers</remarks>
            <param name="repositoryId">The owner of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryTrafficClient.GetAllReferrers(System.String,System.String)">
            <summary>
            List the top 10 referrers over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-referrers</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.RepositoryTrafficClient.GetClones(System.Int64,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of clones and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#clones</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.RepositoryTrafficClient.GetClones(System.String,System.String,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of clones and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#clones</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.RepositoryTrafficClient.GetViews(System.Int64,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of views and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#views</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.RepositoryTrafficClient.GetViews(System.String,System.String,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of views and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#views</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.RepositoryVariablesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Repository Branches API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.RepositoryVariablesClient.GetAllOrganization(System.String,System.String)">
            <summary>
            List the organization variables for a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#list-repository-organization-variables">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositoryVariablesCollection"/> instance for the list of repository variables.</returns>
        </member>
        <member name="M:Octokit.RepositoryVariablesClient.GetAll(System.String,System.String)">
            <summary>
            List the variables for a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#list-repository-variables">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositoryVariablesCollection"/> instance for the list of repository variables.</returns>
        </member>
        <member name="M:Octokit.RepositoryVariablesClient.Get(System.String,System.String,System.String)">
            <summary>
            Get a variable from a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#get-a-repository-variable">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="variableName">The name of the variable</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositoryVariable"/> instance for the repository secret.</returns>
        </member>
        <member name="M:Octokit.RepositoryVariablesClient.Create(System.String,System.String,Octokit.Variable)">
            <summary>
            Create a variable in a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#create-a-repository-variable">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="newVariable">The variable to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositoryVariable"/> instance for the repository variable that was created.</returns>
        </member>
        <member name="M:Octokit.RepositoryVariablesClient.Update(System.String,System.String,Octokit.Variable)">
            <summary>
            Update a variable in a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#update-a-repository-variable">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="variable">The variable to update</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A <see cref="T:Octokit.RepositoryVariable"/> instance for the repository variable that was updated.</returns>
        </member>
        <member name="M:Octokit.RepositoryVariablesClient.Delete(System.String,System.String,System.String)">
            <summary>
            Delete a variable in a repository.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/actions/variables?apiVersion=2022-11-28#delete-a-repository-variable">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repoName">The name of the repository</param>
            <param name="variableName">The name of the variable</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.SearchClient">
            <summary>
            A client for GitHub's Search API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/search/">Search API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.SearchClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Search API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.SearchClient.SearchRepo(Octokit.SearchRepositoriesRequest)">
            <summary>
            search repos
            http://developer.github.com/v3/search/#search-repositories
            </summary>
            <param name="search"></param>
            <returns>List of repos</returns>
        </member>
        <member name="M:Octokit.SearchClient.SearchUsers(Octokit.SearchUsersRequest)">
            <summary>
            search users
            http://developer.github.com/v3/search/#search-users
            </summary>
            <param name="search"></param>
            <returns>List of users</returns>
        </member>
        <member name="M:Octokit.SearchClient.SearchIssues(Octokit.SearchIssuesRequest)">
            <summary>
            search issues
            http://developer.github.com/v3/search/#search-issues
            </summary>
            <param name="search"></param>
            <returns>List of issues</returns>
        </member>
        <member name="M:Octokit.SearchClient.SearchCode(Octokit.SearchCodeRequest)">
            <summary>
            search code
            http://developer.github.com/v3/search/#search-code
            </summary>
            <param name="search"></param>
            <returns>List of files</returns>
        </member>
        <member name="M:Octokit.SearchClient.SearchLabels(Octokit.SearchLabelsRequest)">
            <summary>
            search labels
            https://developer.github.com/v3/search/#search-labels
            </summary>
            <param name="search"></param>
            <returns>List of labels</returns>
        </member>
        <member name="T:Octokit.StarredClient">
            <summary>
            A client for GitHub's Activity Starring API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/starring/">Activity Starring API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.StarredClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Activity Starring API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.StarredClient.GetAllStargazers(System.String,System.String)">
            <summary>
            Retrieves all of the stargazers for the passed repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllStargazers(System.Int64)">
            <summary>
            Retrieves all of the stargazers for the passed repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllStargazers(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllStargazers(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllStargazersWithTimestamps(System.String,System.String)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllStargazersWithTimestamps(System.Int64)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllStargazersWithTimestamps(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllStargazersWithTimestamps(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForCurrent">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForCurrentWithTimestamps">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForCurrentWithTimestamps(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForCurrent(Octokit.StarredRequest)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForCurrent(Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForCurrentWithTimestamps(Octokit.StarredRequest)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForCurrentWithTimestamps(Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForUser(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForUserWithTimestamps(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForUserWithTimestamps(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForUser(System.String,Octokit.StarredRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForUser(System.String,Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForUserWithTimestamps(System.String,Octokit.StarredRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.GetAllForUserWithTimestamps(System.String,Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.CheckStarred(System.String,System.String)">
            <summary>
            Check if a repository is starred by the current authenticated user.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.StarredClient.StarRepo(System.String,System.String)">
            <summary>
            Stars a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to star</param>
            <param name="name">The name of the repository to star</param>
        </member>
        <member name="M:Octokit.StarredClient.RemoveStarFromRepo(System.String,System.String)">
            <summary>
            Unstars a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to unstar</param>
            <param name="name">The name of the repository to unstar</param>
        </member>
        <member name="T:Octokit.StatisticsClient">
            <summary>
            A client for GitHub's Repository Statistics API.
            Note that the GitHub API uses caching on these endpoints,
            see <a href="https://developer.github.com/v3/repos/statistics/#a-word-about-caching">a word about caching</a> for more details.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/statistics/">Repository Statistics API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.StatisticsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Statistics API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetContributors(System.String,System.String)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetContributors(System.Int64)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetContributors(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetContributors(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetCommitActivity(System.String,System.String)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetCommitActivity(System.Int64)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetCommitActivity(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetCommitActivity(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetCodeFrequency(System.String,System.String)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetCodeFrequency(System.Int64)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetCodeFrequency(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetCodeFrequency(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetParticipation(System.String,System.String)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetParticipation(System.Int64)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetParticipation(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetParticipation(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetPunchCard(System.String,System.String)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetPunchCard(System.Int64)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetPunchCard(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="M:Octokit.StatisticsClient.GetPunchCard(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
        </member>
        <member name="T:Octokit.TagsClient">
            <summary>
            A client for GitHub's Git Tags API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/tags/">Git Tags API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.TagsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Git Tags API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.TagsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a tag for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#get-a-tag
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">Tha sha reference of the tag</param>
        </member>
        <member name="M:Octokit.TagsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a tag for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#get-a-tag
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">Tha sha reference of the tag</param>
        </member>
        <member name="M:Octokit.TagsClient.Create(System.String,System.String,Octokit.NewTag)">
            <summary>
            Create a tag for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#create-a-tag-object
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="tag">The tag to create</param>
        </member>
        <member name="M:Octokit.TagsClient.Create(System.Int64,Octokit.NewTag)">
            <summary>
            Create a tag for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#create-a-tag-object
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="tag">The tag to create</param>
        </member>
        <member name="T:Octokit.TeamsClient">
            <summary>
            A client for GitHub's Organization Teams API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/teams/">Organization Teams API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.TeamsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Orgs Team API client.
            </summary>
            <param name="apiConnection">An API connection.</param>
        </member>
        <member name="M:Octokit.TeamsClient.Get(System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Team"/> by identifier.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#get-team
            </remarks>
            <param name="id">The team identifier.</param>
            <returns>The <see cref="T:Octokit.Team"/> with the given identifier.</returns>
        </member>
        <member name="M:Octokit.TeamsClient.GetAll(System.String)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current org.
            </summary>
            <param name="org">Organization to list teams of.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the orgs's teams <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.TeamsClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current org.
            </summary>
            <param name="org">Organization to list teams of.</param>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the orgs's teams <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllForCurrent">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current user.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the user's <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current user.
            </summary>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the user's <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllChildTeams(System.Int32)">
            <summary>
            Returns all child teams of the given team.
            </summary>
            <param name="id">The team identifier</param>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-child-teams
            </remarks>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllChildTeams(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all child teams of the given team.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-child-teams
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options to change API behaviour.</param>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllMembers(System.Int32)">
            <summary>
            Returns all members of the given team.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllMembers(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all members of the given team.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options to change API behaviour.</param>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllMembers(System.Int32,Octokit.TeamMembersRequest)">
            <summary>
            Returns all members with the specified role in the given team of the given role.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="request">The request filter</param>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllMembers(System.Int32,Octokit.TeamMembersRequest,Octokit.ApiOptions)">
            <summary>
            Returns all members with the specified role in the given team of the given role.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="request">The request filter</param>
            <param name="options">Options to change API behaviour.</param>
        </member>
        <member name="M:Octokit.TeamsClient.GetMembershipDetails(System.Int32,System.String)">
            <summary>
            Gets whether the user with the given <paramref name="login"/>
            is a member of the team with the given <paramref name="id"/>.
            A <see cref="T:Octokit.NotFoundException"/> is thrown if the user is not a member.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#get-team-membership">API documentation</a> for more information.
            </remarks>
            <param name="id">The team to check.</param>
            <param name="login">The user to check.</param>
        </member>
        <member name="M:Octokit.TeamsClient.Create(System.String,Octokit.NewTeam)">
            <summary>
            Returns newly created <see cref="T:Octokit.Team" /> for the current org.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>Newly created <see cref="T:Octokit.Team"/></returns>
        </member>
        <member name="M:Octokit.TeamsClient.Update(System.String,System.String,Octokit.UpdateTeam)">
            <summary>
            Updates a team
            To edit a team, the authenticated user must either be an organization owner or a team maintainer
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#update-a-team">API documentation</a> 
            for more information.
            </remarks>
            <returns>updated <see cref="T:Octokit.Team" /> for the current org</returns>
        </member>
        <member name="M:Octokit.TeamsClient.Update(System.Int32,Octokit.UpdateTeam)">
            <summary>
            Returns updated <see cref="T:Octokit.Team" /> for the current org.
            This endpoint route is deprecated and will be removed from the Teams API.
            We recommend migrating your existing code to use the new Update a team endpoint.
            <see cref="M:Octokit.TeamsClient.Update(System.String,System.String,Octokit.UpdateTeam)"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#update-a-team-legacy">API documentation</a> 
            for more information.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>Updated <see cref="T:Octokit.Team"/></returns>
        </member>
        <member name="M:Octokit.TeamsClient.Delete(System.String,System.String)">
            <summary>
            To delete a team, the authenticated user must be an organization owner or team maintainer.
            If you are an organization owner, deleting a parent team will delete all of its child teams as well.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#delete-a-team">API documentation</a> 
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.TeamsClient.Delete(System.Int32)">
            <summary>
            Delete a team - must have owner permissions to do this
            This endpoint route is deprecated and will be removed from the Teams API.
            We recommend migrating your existing code to use the new Delete a team endpoint.
            <see cref="M:Octokit.TeamsClient.Delete(System.String,System.String)"/>.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#delete-a-team-legacy">API documentation</a> 
            </remarks>
            <param name="id">The unique identifier of the team.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.TeamsClient.AddOrEditMembership(System.Int32,System.String,Octokit.UpdateTeamMembership)">
            <summary>
            Adds a <see cref="T:Octokit.User"/> to a <see cref="T:Octokit.Team"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#add-or-update-team-membership">API documentation</a> for more information.
            </remarks>
            <param name="id">The team identifier.</param>
            <param name="login">The user to add to the team.</param>
            <param name="request">Additional parameters for the request</param>
        </member>
        <member name="M:Octokit.TeamsClient.RemoveMembership(System.Int32,System.String)">
            <summary>
            Removes a <see cref="T:Octokit.User"/> from a <see cref="T:Octokit.Team"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#remove-team-member">API documentation</a> for more information.
            </remarks>
            <param name="id">The team identifier.</param>
            <param name="login">The user to remove from the team.</param>
            <returns><see langword="true"/> if the user was removed from the team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllRepositories(System.Int32)">
            <summary>
            Returns all team's repositories.
            </summary>
            <param name="id">Team Id.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The team's repositories</returns>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllRepositories(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all team's repositories.
            </summary>
            <param name="id">Team Id.</param>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The team's repositories</returns>
        </member>
        <member name="M:Octokit.TeamsClient.AddRepository(System.Int32,System.String,System.String)">
            <summary>
            Add or update team repository permissions (Legacy)
            Deprecation Notice: This endpoint route is deprecated and will be removed from the Teams API.
            We recommend migrating your existing code to use the new "Add or update team repository permissions" endpoint.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.TeamsClient.AddRepository(System.Int32,System.String,System.String,Octokit.RepositoryPermissionRequest)">
            <summary>
            Add or update team repository permissions (Legacy)
            Deprecation Notice: This endpoint route is deprecated and will be removed from the Teams API.
            We recommend migrating your existing code to use the new "Add or update team repository permissions" endpoint.
            </summary>
            <param name="id">The team identifier.</param>
            <param name="organization">Org to associate the repo with.</param>
            <param name="repoName">Name of the repo.</param>
            <param name="permission">The permission to grant the team on this repository.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.TeamsClient.RemoveRepository(System.Int32,System.String,System.String)">
            <summary>
            Remove a repository from a team (Legacy)
            Deprecation Notice: This endpoint route is deprecated and will be removed from the Teams API.
            We recommend migrating your existing code to use the new Remove a repository from a team endpoint.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.TeamsClient.IsRepositoryManagedByTeam(System.Int32,System.String,System.String)">
            <summary>
            Gets whether or not the given repository is managed by the given team.
            </summary>
            <param name="id">The team identifier</param>
            <param name="owner">Owner of the org the team is associated with.</param>
            <param name="repo">Name of the repo.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#get-team-repo">API documentation</a> for more information.
            </remarks>
            <returns><see langword="true"/> if the repository is managed by the given team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllPendingInvitations(System.Int32)">
            <summary>
            List all pending invitations for the given team.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#list-pending-team-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="id">The team identifier</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.TeamsClient.GetAllPendingInvitations(System.Int32,Octokit.ApiOptions)">
            <summary>
            List all pending invitations for the given team.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#list-pending-team-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options to change API behaviour</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.TeamsClient.CheckTeamPermissionsForARepository(System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether a team has admin, push, maintain, triage, or pull permission for a repository.
            Repositories inherited through a parent team will also be checked.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#check-team-permissions-for-a-repository">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <param name="owner">The account owner of the repository. The name is not case sensitive.</param>
            <param name="repo">The name of the repository. The name is not case sensitive.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.TeamsClient.CheckTeamPermissionsForARepositoryWithCustomAcceptHeader(System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether a team has admin, push, maintain, triage, or pull permission for a repository.
            Repositories inherited through a parent team will also be checked.
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#check-team-permissions-for-a-repository">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <param name="owner">The account owner of the repository. The name is not case sensitive.</param>
            <param name="repo">The name of the repository. The name is not case sensitive.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.TeamsClient.AddOrUpdateTeamRepositoryPermissions(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add or update team repository permissions
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#add-or-update-team-repository-permissions">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <param name="owner">The account owner of the repository. The name is not case sensitive.</param>
            <param name="repo">The name of the repository. The name is not case sensitive.</param>
            <param name="permission">
            The permission to grant the team on this repository. We accept the following permissions to be set: 
            pull, triage, push, maintain, admin and you can also specify a custom repository role name, if the 
            owning organization has defined any. If no permission is specified, the team's permission attribute 
            will be used to determine what permission to grant the team on this repository
            </param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.TeamsClient.RemoveRepositoryFromATeam(System.String,System.String,System.String,System.String)">
            <summary>
            Remove a repository from a team
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#remove-a-repository-from-a-team">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <param name="owner">The account owner of the repository. The name is not case sensitive.</param>
            <param name="repo">The name of the repository. The name is not case sensitive.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.TeamsClient.GetByName(System.String,System.String)">
            <summary>
            Get a team by slug name
            </summary>
            <remarks>
            See the <a href="https://docs.github.com/en/rest/teams/teams?apiVersion=2022-11-28#get-a-team-by-name">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <exception cref="T:Octokit.NotFoundException">Thrown when the team wasn't found</exception>
            <returns>A <see cref="T:Octokit.Team"/> instance if found, otherwise a <see cref="T:Octokit.NotFoundException"/></returns>
        </member>
        <member name="T:Octokit.TreesClient">
            <summary>
            A client for GitHub's Git Trees API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/trees/">Git Trees API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.TreesClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Git Trees API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.TreesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#get-a-tree
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.TreesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#get-a-tree
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.TreesClient.GetRecursive(System.String,System.String,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            https://developer.github.com/v3/git/trees/#get-a-tree-recursively
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.TreesClient.GetRecursive(System.Int64,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            https://developer.github.com/v3/git/trees/#get-a-tree-recursively
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.TreesClient.Create(System.String,System.String,Octokit.NewTree)">
            <summary>
            Creates a new Tree in the specified repo
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#create-a-tree
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newTree">The value of the new tree</param>
        </member>
        <member name="M:Octokit.TreesClient.Create(System.Int64,Octokit.NewTree)">
            <summary>
            Creates a new Tree in the specified repo
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#create-a-tree
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newTree">The value of the new tree</param>
        </member>
        <member name="T:Octokit.UserAdministrationClient">
            <summary>
            A client for GitHub's User Administration API (GitHub Enterprise)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/">Administration API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.UserAdministrationClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.UserAdministrationClient"/> class.
            </summary>
            <param name="apiConnection">The client's connection</param>
        </member>
        <member name="M:Octokit.UserAdministrationClient.Create(Octokit.NewUser)">
            <summary>
            Create a new user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#create-a-new-user">API documentation</a>
            for more information.
            </remarks>
            <param name="newUser">The <see cref="T:Octokit.NewUser"/> object describing the user to create</param>
            <returns>The created <see cref="T:Octokit.User"/> object</returns>
        </member>
        <member name="M:Octokit.UserAdministrationClient.Rename(System.String,Octokit.UserRename)">
            <summary>
            Rename an existing user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#rename-an-existing-user">API documentation</a>
            for more information.
            Note that this queues a request to rename a user, rather than execute it straight away
            </remarks>
            <param name="login">The username to rename</param>
            <param name="userRename">The <see cref="T:Octokit.UserRename"/> request, specifying the new login</param>
            <returns>A <see cref="T:Octokit.UserRenameResponse"/> object indicating the queued task message and Url to the user</returns>
        </member>
        <member name="M:Octokit.UserAdministrationClient.CreateImpersonationToken(System.String,Octokit.NewImpersonationToken)">
            <summary>
            Create an impersonation OAuth token (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#create-an-impersonation-oauth-token">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to impersonate</param>
            <param name="newImpersonationToken">The <see cref="T:Octokit.NewImpersonationToken"/> request specifying the required scopes</param>
            <returns>An <see cref="T:Octokit.Authorization"/> object containing the impersonation token</returns>
        </member>
        <member name="M:Octokit.UserAdministrationClient.DeleteImpersonationToken(System.String)">
            <summary>
            Deletes an impersonation OAuth token (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-an-impersonation-oauth-token">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to remove impersonation token from</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.UserAdministrationClient.Promote(System.String)">
            <summary>
            Promotes ordinary user to a site administrator (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#promote-an-ordinary-user-to-a-site-administrator">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to promote to administrator.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.UserAdministrationClient.Demote(System.String)">
            <summary>
            Demotes a site administrator to an ordinary user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#demote-a-site-administrator-to-an-ordinary-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to demote from administrator.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.UserAdministrationClient.Suspend(System.String)">
            <summary>
            Suspends a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#suspend-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to suspend.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.UserAdministrationClient.Unsuspend(System.String)">
            <summary>
            Unsuspends a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#unsuspend-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to unsuspend.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.UserAdministrationClient.ListAllPublicKeys">
            <summary>
            List all public keys (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#list-all-public-keys">API documentation</a>
            for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.UserAdministrationClient.Delete(System.String)">
            <summary>
            Delete a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to delete</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.UserAdministrationClient.DeletePublicKey(System.Int32)">
            <summary>
            Delete a public key (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-a-public-key">API documentation</a>
            for more information.
            </remarks>
            <param name="keyId">The key to delete</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.UserEmailsClient">
            <summary>
            A client for GitHub's User Emails API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/emails/">User Emails API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.UserEmailsClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub User Emails API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.UserEmailsClient.GetAll">
            <summary>
            Gets all email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user
            </remarks>
            <returns>The <see cref="T:Octokit.EmailAddress"/>es for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.UserEmailsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user
            </remarks>
            <returns>The <see cref="T:Octokit.EmailAddress"/>es for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.UserEmailsClient.Add(System.String[])">
            <summary>
            Adds email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#add-email-addresses
            </remarks>
            <param name="emailAddresses">The email addresses to add.</param>
            <returns>Returns the added <see cref="T:Octokit.EmailAddress"/>es.</returns>
        </member>
        <member name="M:Octokit.UserEmailsClient.Delete(System.String[])">
            <summary>
            Deletes email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#delete-email-addresses
            </remarks>
            <param name="emailAddresses">The email addresses to delete.</param>
            <returns>Returns the added <see cref="T:Octokit.EmailAddress"/>es.</returns>
        </member>
        <member name="T:Octokit.UserGpgKeysClient">
            <summary>
            A client for GitHub's UserUser GPG Keys API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/">User GPG Keys documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.UserGpgKeysClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub User GPG Keys API client.
            </summary>
            <param name="apiConnection">The API connection.</param>
        </member>
        <member name="M:Octokit.UserGpgKeysClient.GetAllForCurrent">
            <summary>
            Gets all GPG keys for the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.GpgKey"/>s for the current user.</returns>
        </member>
        <member name="M:Octokit.UserGpgKeysClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all GPG keys for the authenticated user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.GpgKey"/>s for the current user.</returns>
        </member>
        <member name="M:Octokit.UserGpgKeysClient.Get(System.Int32)">
            <summary>
            View extended details of the <see cref="T:Octokit.GpgKey"/> for the specified id.
            </summary>
            <param name="id">The Id of the GPG key</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#get-a-single-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns>The <see cref="T:Octokit.GpgKey"/> for the specified Id.</returns>
        </member>
        <member name="M:Octokit.UserGpgKeysClient.Create(Octokit.NewGpgKey)">
            <summary>
            Creates a new <see cref="T:Octokit.GpgKey"/> for the authenticated user.
            </summary>
            <param name="newGpgKey">The new GPG key to add.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#create-a-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns>The newly created <see cref="T:Octokit.GpgKey"/>.</returns>
        </member>
        <member name="M:Octokit.UserGpgKeysClient.Delete(System.Int32)">
            <summary>
            Deletes the GPG key for the specified Id.
            </summary>
            <param name="id">The Id of the GPG key to delete.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#delete-a-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="T:Octokit.UserKeysClient">
            <summary>
            A client for GitHub's User Keys API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/keys/">User Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.UserKeysClient.GetAll(System.String)">
            <summary>
            Gets all verified public keys for a user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user
            </remarks>
            <param name="userName">The @ handle of the user.</param>
            <returns>Lists the verified public keys for a user.</returns>
        </member>
        <member name="M:Octokit.UserKeysClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all verified public keys for a user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user
            </remarks>
            <param name="userName">The @ handle of the user.</param>
            <param name="options">Options to change API's behavior.</param>
            <returns>Lists the verified public keys for a user.</returns>
        </member>
        <member name="M:Octokit.UserKeysClient.GetAllForCurrent">
            <summary>
            Gets all public keys for the authenticated user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-your-public-keys
            </remarks>
            <returns>Lists the current user's keys.</returns>
        </member>
        <member name="M:Octokit.UserKeysClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all public keys for the authenticated user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-your-public-keys
            </remarks>
            <param name="options">Options to change API's behavior.</param>
            <returns>Lists the current user's keys.</returns>
        </member>
        <member name="M:Octokit.UserKeysClient.Get(System.Int32)">
            <summary>
            Retrieves the <see cref="T:Octokit.PublicKey"/> for the specified id.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#get-a-single-public-key
            </remarks>
            <param name="id">The Id of the SSH key</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.UserKeysClient.Create(Octokit.NewPublicKey)">
            <summary>
            Create a public key <see cref="T:Octokit.NewPublicKey"/>.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#create-a-public-key
            </remarks>
            <param name="newKey">The SSH Key contents</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.UserKeysClient.Delete(System.Int32)">
            <summary>
            Delete a public key.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#delete-a-public-key
            </remarks>
            <param name="id">The id of the key to delete</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.UsersClient">
            <summary>
            A client for GitHub's Users API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/">Users API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.UsersClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Users API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="P:Octokit.UsersClient.Email">
             <summary>
             A client for GitHub's User Emails API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/emails/">Emails API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.UsersClient.GitSshKey">
             <summary>
             A client for GitHub's User Keys API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/keys/">Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.UsersClient.GpgKey">
            <summary>
            A client for GitHub's UserUser GPG Keys API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/">User GPG Keys documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.UsersClient.Get(System.String)">
            <summary>
            Returns the user specified by the login.
            </summary>
            <param name="login">The login name for the user</param>
        </member>
        <member name="M:Octokit.UsersClient.Current">
            <summary>
            Returns a <see cref="T:Octokit.User"/> for the current authenticated user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.User"/></returns>
        </member>
        <member name="M:Octokit.UsersClient.Update(Octokit.UserUpdate)">
            <summary>
            Update the specified <see cref="T:Octokit.UserUpdate"/>.
            </summary>
            <param name="user">The login for the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.User"/></returns>
        </member>
        <member name="P:Octokit.UsersClient.Followers">
             <summary>
             A client for GitHub's User Followers API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/followers/">Followers API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.UsersClient.Administration">
             <summary>
             A client for GitHub's User Administration API 
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/users/administration/">User Administration API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.WatchedClient">
            <summary>
            A client for GitHub's Watching API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/activity/watching/">Watching API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.WatchedClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Instantiates a new GitHub Activity Watching API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:Octokit.WatchedClient.GetAllWatchers(System.String,System.String)">
            <summary>
            Retrieves all of the watchers for the passed repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.WatchedClient.GetAllWatchers(System.Int64)">
            <summary>
            Retrieves all of the watchers for the passed repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.WatchedClient.GetAllWatchers(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watchers for the passed repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.WatchedClient.GetAllWatchers(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watchers for the passed repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.WatchedClient.GetAllForCurrent">
            <summary>
            Retrieves all of the watched <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>
            A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>(ies) watched by the current authenticated user.
            </returns>
        </member>
        <member name="M:Octokit.WatchedClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watched <see cref="T:Octokit.Repository"/>(ies) for the current user.
            </summary>
            <param name="options">Options for changing API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>
            A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>(ies) watched by the current authenticated user.
            </returns>
        </member>
        <member name="M:Octokit.WatchedClient.GetAllForUser(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) watched by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>
            A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/>(ies) watched by the specified user.
            </returns>
        </member>
        <member name="M:Octokit.WatchedClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) watched by the specified user.
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>
            A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/>(ies) watched by the specified user.
            </returns>
        </member>
        <member name="M:Octokit.WatchedClient.CheckWatched(System.String,System.String)">
            <summary>
            Check if a repository is watched by the current authenticated user.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.WatchedClient.CheckWatched(System.Int64)">
            <summary>
            Check if a repository is watched by the current authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.WatchedClient.WatchRepo(System.String,System.String,Octokit.NewSubscription)">
            <summary>
            Watches a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to star</param>
            <param name="name">The name of the repository to star</param>
            <param name="newSubscription">A <see cref="T:Octokit.NewSubscription"/> instance describing the new subscription to create</param>
        </member>
        <member name="M:Octokit.WatchedClient.WatchRepo(System.Int64,Octokit.NewSubscription)">
            <summary>
            Watches a repository for the authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newSubscription">A <see cref="T:Octokit.NewSubscription"/> instance describing the new subscription to create</param>
        </member>
        <member name="M:Octokit.WatchedClient.UnwatchRepo(System.String,System.String)">
            <summary>
            Unwatches a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to unstar</param>
            <param name="name">The name of the repository to unstar</param>
        </member>
        <member name="M:Octokit.WatchedClient.UnwatchRepo(System.Int64)">
            <summary>
            Unwatches a repository for the authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="T:Octokit.AbuseException">
            <summary>
            Represents a subset of the HTTP 403 - Forbidden response returned from the API when the forbidden response is related to an abuse detection mechanism.
            Contains the amount of seconds after which it's safe to retry the request.
            </summary>
        </member>
        <member name="M:Octokit.AbuseException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of AbuseException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.AbuseException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of AbuseException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.AbuseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of AbuseException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.ApiException">
            <summary>
            Represents errors that occur from the GitHub API.
            </summary>
        </member>
        <member name="M:Octokit.ApiException.#ctor">
            <summary>
            Constructs an instance of ApiException
            </summary>
        </member>
        <member name="M:Octokit.ApiException.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Constructs an instance of ApiException
            </summary>
            <param name="message">The error message</param>
            <param name="httpStatusCode">The HTTP status code from the response</param>
        </member>
        <member name="M:Octokit.ApiException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs an instance of ApiException
            </summary>
            <param name="message">The error message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.ApiException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of ApiException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.ApiException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of ApiException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.ApiException.#ctor(Octokit.ApiException)">
            <summary>
            Constructs an instance of ApiException
            </summary>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Octokit.ApiException.StatusCode">
            <summary>
            The HTTP status code associated with the response
            </summary>
        </member>
        <member name="P:Octokit.ApiException.ApiError">
            <summary>
            The raw exception payload from the response
            </summary>
        </member>
        <member name="M:Octokit.ApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of ApiException.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="P:Octokit.ApiException.ApiErrorMessageSafe">
            <summary>
            Get the inner error message from the API response
            </summary>
            <remarks>
            Returns null if ApiError is not populated
            </remarks>
        </member>
        <member name="P:Octokit.ApiException.HttpResponseBodySafe">
            <summary>
            Get the inner http response body from the API response
            </summary>
            <remarks>
            Returns empty string if HttpResponse is not populated or if
            response body is not a string
            </remarks>
        </member>
        <member name="T:Octokit.ApiValidationException">
            <summary>
            Represents a HTTP 422 - Unprocessable Entity response returned from the API.
            </summary>
        </member>
        <member name="M:Octokit.ApiValidationException.#ctor">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
        </member>
        <member name="M:Octokit.ApiValidationException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.ApiValidationException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.ApiValidationException.#ctor(Octokit.ApiException)">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.ApiValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.AuthorizationException">
            <summary>
            Represents a HTTP 401 - Unauthorized response returned from the API.
            </summary>
        </member>
        <member name="M:Octokit.AuthorizationException.#ctor">
            <summary>
            Constructs an instance of AuthorizationException
            </summary>
        </member>
        <member name="M:Octokit.AuthorizationException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of AuthorizationException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.AuthorizationException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of AuthorizationException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.AuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of AuthorizationException.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.ForbiddenException">
            <summary>
            Represents a HTTP 403 - Forbidden response returned from the API.
            </summary>
        </member>
        <member name="M:Octokit.ForbiddenException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of ForbiddenException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.ForbiddenException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of ForbiddenException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.ForbiddenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of ForbiddenException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.InvalidGitIgnoreTemplateException">
            <summary>
            Represents a HTTP 403 - Forbidden response returned from the API.
            </summary>
        </member>
        <member name="M:Octokit.InvalidGitIgnoreTemplateException.#ctor">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
        </member>
        <member name="M:Octokit.InvalidGitIgnoreTemplateException.#ctor(Octokit.ApiValidationException)">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
            <param name="innerException">The inner validation exception.</param>
        </member>
        <member name="M:Octokit.InvalidGitIgnoreTemplateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of InvalidGitignoreTemplateException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.LegalRestrictionException">
            <summary>
            Represents a HTTP 451 - Unavailable For Legal Reasons response returned from the API.
            This will returned if GitHub has been asked to takedown the requested resource due to
            a DMCA takedown.
            </summary>
        </member>
        <member name="M:Octokit.LegalRestrictionException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of LegalRestrictionException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.LegalRestrictionException.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Constructs an instance of LegalRestrictionException
            </summary>
            <param name="message">The exception message</param>
            <param name="statusCode">The http status code returned by the response</param>
        </member>
        <member name="M:Octokit.LegalRestrictionException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of LegalRestrictionException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.LegalRestrictionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of LegalRestrictionException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.LoginAttemptsExceededException">
            <summary>
            Represents a "Login Attempts Exceeded" response returned from the API.
            </summary>
        </member>
        <member name="M:Octokit.LoginAttemptsExceededException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of LoginAttemptsExceededException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.LoginAttemptsExceededException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of LoginAttemptsExceededException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.LoginAttemptsExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of LoginAttemptsExceededException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.NotFoundException">
            <summary>
            Represents a HTTP 404 - Not Found response returned from the API.
            </summary>
        </member>
        <member name="M:Octokit.NotFoundException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of NotFoundException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.NotFoundException.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Constructs an instance of NotFoundException
            </summary>
            <param name="message">The exception message</param>
            <param name="statusCode">The http status code returned by the response</param>
        </member>
        <member name="M:Octokit.NotFoundException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of NotFoundException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of NotFoundException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.PullRequestMismatchException">
            <summary>
            Represents an error that occurs when the specified SHA
            doesn't match the current pull request's HEAD
            </summary>
        </member>
        <member name="M:Octokit.PullRequestMismatchException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of <see cref="T:Octokit.PullRequestMismatchException"/>.
            </summary>
            <param name="response"></param>
        </member>
        <member name="M:Octokit.PullRequestMismatchException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of <see cref="T:Octokit.PullRequestMismatchException"/>.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.PullRequestMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of <see cref="T:Octokit.PullRequestNotMergeableException"/>.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.PullRequestNotMergeableException">
            <summary>
            Represents an error that occurs when the pull request is in an
            unmergeable state
            </summary>
        </member>
        <member name="M:Octokit.PullRequestNotMergeableException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of the <see cref="T:Octokit.PullRequestNotMergeableException"/> class.
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.PullRequestNotMergeableException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of the <see cref="T:Octokit.PullRequestNotMergeableException"/> class.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.PullRequestNotMergeableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of <see cref="T:Octokit.PullRequestNotMergeableException"/>.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.RateLimitExceededException">
            <summary>
            Exception thrown when GitHub API Rate limits are exceeded.
            </summary>
            <summary>
            <para>
            For requests using Basic Authentication or OAuth, you can make up to 5,000 requests per hour. For
            unauthenticated requests, the rate limit allows you to make up to 60 requests per hour.
            </para>
            <para>See http://developer.github.com/v3/#rate-limiting for more details.</para>
            </summary>
        </member>
        <member name="M:Octokit.RateLimitExceededException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of RateLimitExceededException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.RateLimitExceededException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of RateLimitExceededException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Octokit.RateLimitExceededException.Limit">
            <summary>
            The maximum number of requests that the consumer is permitted to make per hour.
            </summary>
        </member>
        <member name="P:Octokit.RateLimitExceededException.Remaining">
            <summary>
            The number of requests remaining in the current rate limit window.
            </summary>
        </member>
        <member name="P:Octokit.RateLimitExceededException.Reset">
            <summary>
            The date and time at which the current rate limit window resets
            </summary>
        </member>
        <member name="M:Octokit.RateLimitExceededException.GetRetryAfterTimeSpan">
            <summary>
            Calculates the time from now to wait until the next request can be
            attempted.
            </summary>
            <returns>
            A non-negative <see cref="T:System.TimeSpan"/> value. Returns
            <see cref="F:System.TimeSpan.Zero"/> if the next Rate Limit window has
            started and the next request can be attempted immediately.
            </returns>
            <remarks>
            The return value is calculated using server time data from the 
            response in order to provide a best-effort estimate that is 
            independent from eventual inaccuracies in the client's clock.
            </remarks>
        </member>
        <member name="M:Octokit.RateLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of RateLimitExceededException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.RepositoryExistsException">
            <summary>
            Exception thrown when creating a repository, but it already exists on the server.
            </summary>
        </member>
        <member name="M:Octokit.RepositoryExistsException.#ctor(System.String,System.String,System.Uri,Octokit.ApiValidationException)">
            <summary>
            Constructs an instance of RepositoryExistsException for an organization.
            </summary>
            <param name="organization">The name of the organization of the existing repository</param>
            <param name="name">The name of the existing repository</param>
            <param name="baseAddress">The base address of the repository.</param>
            <param name="innerException">The inner validation exception.</param>
        </member>
        <member name="M:Octokit.RepositoryExistsException.#ctor(System.String,Octokit.ApiValidationException)">
            <summary>
            Constructs an instance of RepositoryExistsException for an account.
            </summary>
            <param name="name">The name of the existing repository</param>
            <param name="innerException">The inner validation exception</param>
        </member>
        <member name="P:Octokit.RepositoryExistsException.RepositoryName">
            <summary>
            The Name of the repository that already exists.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryExistsException.ExistingRepositoryWebUrl">
            <summary>
            The URL to the existing repository's web page on github.com (or enterprise instance).
            </summary>
        </member>
        <member name="P:Octokit.RepositoryExistsException.Message">
            <summary>
            A useful default error message.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryExistsException.Organization">
            <summary>
            The login of the organization of the repository.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryExistsException.OwnerIsOrganization">
            <summary>
            True if the owner is an organization and not the user.
            </summary>
        </member>
        <member name="M:Octokit.RepositoryExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of RepositoryExistsException.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="M:Octokit.RepositoryFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of LoginAttemptsExceededException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.SecondaryRateLimitExceededException">
            <summary>
            Exception thrown when Secondary GitHub API Rate limits are exceeded.
            </summary>
            <summary>
            <para>
            This occurs when GitHub perceives misuse of the API. You may get this if
            you are polling heavily, creating content rapidly or making concurrent requests.
            </para>
            <para>See https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits for more details.</para>
            </summary>
        </member>
        <member name="M:Octokit.SecondaryRateLimitExceededException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of the <see cref="T:Octokit.SecondaryRateLimitExceededException"/> class.
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.SecondaryRateLimitExceededException.#ctor(Octokit.IResponse,System.Exception)">
            <summary>
            Constructs an instance of the <see cref="T:Octokit.SecondaryRateLimitExceededException"/> class.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.SecondaryRateLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of <see  cref="T:Octokit.SecondaryRateLimitExceededException"/>.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.TwoFactorAuthorizationException">
            <summary>
            Represents a failed 2FA challenge from the API
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorAuthorizationException.#ctor(Octokit.TwoFactorType,System.Exception)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="twoFactorType">Expected 2FA response type</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.TwoFactorAuthorizationException.#ctor(Octokit.IResponse,Octokit.TwoFactorType)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="twoFactorType">Expected 2FA response type</param>
        </member>
        <member name="M:Octokit.TwoFactorAuthorizationException.#ctor(Octokit.IResponse,Octokit.TwoFactorType,System.Exception)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="twoFactorType">Expected 2FA response type</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Octokit.TwoFactorAuthorizationException.TwoFactorType">
            <summary>
            Expected 2FA response type
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.TwoFactorType">
            <summary>
            Methods for receiving 2FA authentication codes
            </summary>
        </member>
        <member name="F:Octokit.TwoFactorType.None">
            <summary>
            No method configured
            </summary>
        </member>
        <member name="F:Octokit.TwoFactorType.Unknown">
            <summary>
            Unknown method
            </summary>
        </member>
        <member name="F:Octokit.TwoFactorType.Sms">
            <summary>
            Receive via SMS
            </summary>
        </member>
        <member name="F:Octokit.TwoFactorType.AuthenticatorApp">
            <summary>
            Receive via application
            </summary>
        </member>
        <member name="T:Octokit.TwoFactorChallengeFailedException">
            <summary>
            Represents a failed 2FA challenge from the API
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorChallengeFailedException.#ctor">
            <summary>
            Constructs an instance of TwoFactorChallengeFailedException
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorChallengeFailedException.#ctor(System.String,Octokit.ApiException)">
            <summary>
            Constructs an instance of TwoFactorChallengeFailedException
            </summary>
            <param name="authorizationCode">The authorization code that was incorrect</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.TwoFactorChallengeFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of TwoFactorChallengeFailedException.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.TwoFactorRequiredException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorRequiredException.#ctor">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorRequiredException.#ctor(Octokit.TwoFactorType)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="twoFactorType">Expected 2FA response type</param>
        </member>
        <member name="M:Octokit.TwoFactorRequiredException.#ctor(Octokit.IResponse,Octokit.TwoFactorType)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="twoFactorType">Expected 2FA response type</param>
        </member>
        <member name="M:Octokit.TwoFactorRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.UserIsLastOwnerOfOrganizationException">
            <summary>
            Represents an error that occurs when trying to convert the 
            last owner of the organization to an outside collaborator
            </summary>
        </member>
        <member name="M:Octokit.UserIsLastOwnerOfOrganizationException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of the <see cref="T:Octokit.UserIsLastOwnerOfOrganizationException"/> class.
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.UserIsLastOwnerOfOrganizationException.#ctor(Octokit.IResponse,Octokit.ApiException)">
            <summary>
            Constructs an instance of the <see cref="T:Octokit.UserIsLastOwnerOfOrganizationException"/> class.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.UserIsLastOwnerOfOrganizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of <see cref="T:Octokit.UserIsLastOwnerOfOrganizationException"/>.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.UserIsNotMemberOfOrganizationException">
            <summary>
            Represents an error that occurs when trying to convert a user 
            that is not a member of the organization to an outside collaborator
            </summary>
        </member>
        <member name="M:Octokit.UserIsNotMemberOfOrganizationException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of the <see cref="T:Octokit.UserIsNotMemberOfOrganizationException"/> class.
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.UserIsNotMemberOfOrganizationException.#ctor(Octokit.IResponse,Octokit.ApiException)">
            <summary>
            Constructs an instance of the <see cref="T:Octokit.UserIsNotMemberOfOrganizationException"/> class.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.UserIsNotMemberOfOrganizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of ForbiddenException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.UserIsOrganizationMemberException">
            <summary>
            Represents an error that occurs when trying to remove an 
            outside collaborator that is a member of the organization
            </summary>
        </member>
        <member name="M:Octokit.UserIsOrganizationMemberException.#ctor(Octokit.IResponse)">
            <summary>
            Constructs an instance of the <see cref="T:Octokit.UserIsOrganizationMemberException"/> class.
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.UserIsOrganizationMemberException.#ctor(Octokit.IResponse,Octokit.ApiException)">
            <summary>
            Constructs an instance of the <see cref="T:Octokit.UserIsOrganizationMemberException"/> class.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.UserIsOrganizationMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of <see cref="T:Octokit.UserIsOrganizationMemberException"/>.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.GitHubClient">
            <summary>
            A Client for the GitHub API v3. You can read more about the api here: http://developer.github.com.
            </summary>
        </member>
        <member name="F:Octokit.GitHubClient.GitHubApiUrl">
            <summary>
            The base address for the GitHub API
            </summary>
        </member>
        <member name="M:Octokit.GitHubClient.#ctor(Octokit.ProductHeaderValue)">
            <summary>
            Create a new instance of the GitHub API v3 client pointing to
            https://api.github.com/
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
        </member>
        <member name="M:Octokit.GitHubClient.#ctor(Octokit.ProductHeaderValue,Octokit.ICredentialStore)">
            <summary>
            Create a new instance of the GitHub API v3 client pointing to
            https://api.github.com/
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
            <param name="credentialStore">Provides credentials to the client when making requests</param>
        </member>
        <member name="M:Octokit.GitHubClient.#ctor(Octokit.ProductHeaderValue,System.Uri)">
            <summary>
            Create a new instance of the GitHub API v3 client pointing to the specified baseAddress.
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
            <param name="baseAddress">
            The address to point this client to. Typically used for GitHub Enterprise
            instances</param>
        </member>
        <member name="M:Octokit.GitHubClient.#ctor(Octokit.ProductHeaderValue,Octokit.ICredentialStore,System.Uri)">
            <summary>
            Create a new instance of the GitHub API v3 client pointing to the specified baseAddress.
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
            <param name="credentialStore">Provides credentials to the client when making requests</param>
            <param name="baseAddress">
            The address to point this client to. Typically used for GitHub Enterprise
            instances</param>
        </member>
        <member name="M:Octokit.GitHubClient.#ctor(Octokit.IConnection)">
            <summary>
            Create a new instance of the GitHub API v3 client using the specified connection.
            </summary>
            <param name="connection">The underlying <seealso cref="T:Octokit.IConnection"/> used to make requests</param>
        </member>
        <member name="M:Octokit.GitHubClient.SetRequestTimeout(System.TimeSpan)">
            <summary>
            Sets the timeout for the connection between the client and the server.
            Useful to set a specific timeout for lengthy operations, such as uploading release assets
            </summary>
            <remarks>
            See more information here: https://technet.microsoft.com/library/system.net.http.httpclient.timeout(v=vs.110).aspx
            </remarks>
            <param name="timeout">The Timeout value</param>
        </member>
        <member name="M:Octokit.GitHubClient.GetLastApiInfo">
            <summary>
            Gets the latest API Info - this will be null if no API calls have been made
            </summary>
            <returns><seealso cref="T:Octokit.ApiInfo"/> representing the information returned as part of an Api call</returns>
        </member>
        <member name="P:Octokit.GitHubClient.Credentials">
            <summary>
            Convenience property for getting and setting credentials.
            </summary>
            <remarks>
            You can use this property if you only have a single hard-coded credential. Otherwise, pass in an
            <see cref="T:Octokit.ICredentialStore"/> to the constructor.
            Setting this property will change the <see cref="T:Octokit.ICredentialStore"/> to use
            the default <see cref="T:Octokit.Internal.InMemoryCredentialStore"/> with just these credentials.
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.ResponseCache">
            <summary>
            Convenience property for setting response cache.
            </summary>
            <remarks>
            Setting this property will wrap existing <see cref="T:Octokit.Internal.IHttpClient"/> in <see cref="T:Octokit.Caching.CachingHttpClient"/>.
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.BaseAddress">
            <summary>
            The base address of the GitHub API. This defaults to https://api.github.com,
            but you can change it if needed (to talk to a GitHub:Enterprise server for instance).
            </summary>
        </member>
        <member name="P:Octokit.GitHubClient.Connection">
            <summary>
            Provides a client connection to make rest requests to HTTP endpoints.
            </summary>
        </member>
        <member name="P:Octokit.GitHubClient.Authorization">
            <summary>
            Access GitHub's Authorization API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/oauth_authorizations/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Activity">
            <summary>
            Access GitHub's Activity API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/activity/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Emojis">
            <summary>
            Access GitHub's Emojis API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/emojis
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Issue">
            <summary>
            Access GitHub's Issue API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/issues/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Migration">
            <summary>
            Access GitHub's Migration API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/migration/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Miscellaneous">
            <summary>
            Access GitHub's Miscellaneous API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/misc/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Oauth">
            <summary>
            Access GitHub's OAuth API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/oauth/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Organization">
            <summary>
            Access GitHub's Organizations API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/orgs/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Packages">
            <summary>
            Access GitHub's Pacakges API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/packages
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.PullRequest">
            <summary>
            Access GitHub's Pull Requests API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/pulls/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Repository">
            <summary>
            Access GitHub's Repositories API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Gist">
            <summary>
            Access GitHub's Gists API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/gists/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.User">
            <summary>
            Access GitHub's Users API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/users/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Git">
            <summary>
            Access GitHub's Git Data API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/git/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.GitHubApps">
            <summary>
            Access GitHub's Apps API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/apps/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Search">
            <summary>
            Access GitHub's Search API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/search/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Enterprise">
            <summary>
            Access GitHub's Enterprise API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/enterprise/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Reaction">
            <summary>
            Access GitHub's Reactions API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Check">
            <summary>
            Access GitHub's Checks API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/checks/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Meta">
            <summary>
            Access GitHub's Meta API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/meta
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.RateLimit">
            <summary>
            Access GitHub's Rate Limit API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/rate-limit
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Licenses">
            <summary>
            Access GitHub's Licenses API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/licenses
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.GitIgnore">
            <summary>
            Access GitHub's Git Ignore API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/gitignore
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Markdown">
            <summary>
            Access GitHub's Markdown API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/markdown
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Actions">
            <summary>
            Access GitHub's Actions API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/actions/
            </remarks>
        </member>
        <member name="P:Octokit.GitHubClient.Copilot">
            <summary>
            Access GitHub's Copilot for Business API
            </summary>
        </member>
        <member name="F:Octokit.AcceptHeaders.RawContentMediaType">
            <summary>
            Support for retrieving raw file content with the <see cref="M:Octokit.IConnection.GetRaw(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})"/> method.
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#custom-media-types</remarks>
        </member>
        <member name="T:Octokit.ApiExtensions">
            <summary>
            Extensions for working with the <see cref="T:Octokit.IApiConnection"/>
            </summary>
        </member>
        <member name="M:Octokit.ApiExtensions.GetAll``1(Octokit.IApiConnection,System.Uri)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="connection">The connection to use</param>
            <param name="uri">URI of the API resource to get</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiExtensions.GetHtml(Octokit.IApiConnection,System.Uri)">
            <summary>
            Gets the HTML content of the API resource at the specified URI.
            </summary>
            <param name="connection">The connection to use</param>
            <param name="uri">URI of the API resource to get</param>
            <returns>The API resource's HTML content.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiExtensions.GetHtml(Octokit.IConnection,System.Uri)">
            <summary>
            Performs an asynchronous HTTP GET request that expects a <seealso cref="T:Octokit.IResponse"/> containing HTML.
            </summary>
            <param name="connection">The connection to use</param>
            <param name="uri">URI endpoint to send request to</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.ApiExtensions.GetResponse``1(Octokit.IConnection,System.Uri)">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="connection">The connection to use</param>
            <param name="uri">URI of the API resource to get</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiExtensions.GetResponse``1(Octokit.IConnection,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="connection">The connection to use</param>
            <param name="uri">URI of the API resource to get</param>
            <param name="cancellationToken">A token used to cancel the GetResponse request</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiExtensions.IsTrue(Octokit.IResponse)">
            <summary>
            Returns true if the API call represents a true response, or false if it represents a false response.
            Throws an exception if the HTTP status does not match either a true or false response.
            </summary>
            <remarks>
            Some API endpoints return a 204 for "true" and 404 for false. See https://developer.github.com/v3/activity/starring/#check-if-you-are-starring-a-repository
            for one example. This encapsulates that logic.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown if the status is neither 204 nor 404</exception>
            <param name="response">True for a 204 response, False for a 404</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.ApiUrls">
            <summary>
            Class for retrieving GitHub API URLs
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.Authorizations">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the authorizations for the currently logged in user.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.Authorizations(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all authorizations for a given user
            </summary>
            <param name="id">The user Id to search for</param>
        </member>
        <member name="M:Octokit.ApiUrls.AuthorizationsForClient(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all authorizations for a given client
            </summary>
            <param name="clientId">
            The 20 character OAuth app client key for which to create the token.
            </param>
        </member>
        <member name="M:Octokit.ApiUrls.AllPublicRepositories">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all public repositories in
            response to a GET request.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.AllPublicRepositories(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all public repositories in
            response to a GET request.
            </summary>
            <param name="since">The integer Id of the last Repository that you’ve seen.</param>
        </member>
        <member name="M:Octokit.ApiUrls.Repositories">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the repositories for the currently logged in user in
            response to a GET request. A POST to this URL creates a new repository.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Repositories(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the repositories for the specified login.
            </summary>
            <param name="login">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Repositories(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that create a repository using a template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationRepositories(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the repositories for the specified organization in
            response to a GET request. A POST to this URL creates a new repository for the organization.
            </summary>
            <param name="organization">The name of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationRepositorySecrets(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the secrets for the specified organization in
            response to a GET request.
            </summary>
            <param name="organization">The name of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationRepositorySecret(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a secret for the specified organization in
            response to a GET request. A POST to this URL creates a new secret for the organization.
            </summary>
            <param name="organization">The name of the organization</param>
            <param name="secret">The name of the secret</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationRepositorySecretPublicKey(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the public key for signing secrets for the specified organization in
            response to a GET request.
            </summary>
            <param name="organization">The name of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationRepositorySecretRepositories(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a list of repositories for a secret for the specified organization in
            response to a GET request. A POST to this URL sets the full repository list for a secret in the organization.
            </summary>
            <param name="organization">The name of the organization</param>
            <param name="secret">The name of the secret</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationRepositorySecretRepository(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that adds (PUT) or removes (DELETE) a repository from the visibility list of a secret.
            </summary>
            <param name="organization">The name of the organization</param>
            <param name="secret">The name of the secret</param>
            <param name="repoId">The id of the repo to target</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.UserOrganizations">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the organizations for the currently logged in user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.UserOrganizationMemberships">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the organization memberships for the currently logged in user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.UserOrganizations(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the organizations for the specified login.
            </summary>
            <param name="login">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.AllOrganizations">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the organizations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.AllOrganizations(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the organizations.
            </summary>
            <param name="since">The integer Id of the last Organization that you’ve seen.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Organization(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the organization for the specified organization name
            </summary>
            <param name="organizationName">The name of the organization</param>
            <returns>The <see cref="T:System.Uri"/> that returns the organization for the specified organization name</returns>
        </member>
        <member name="M:Octokit.ApiUrls.SshKeys">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the SSH keys for the currently logged in user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.SshKeys(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the SSH keys for the specified user.
            </summary>
            <param name="login">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Keys">
            <summary>
            Returns the <see cref="T:System.Uri"/> to retrieve keys for the current user.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.Keys(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to retrieve keys for a given user.
            </summary>
            <param name="userName">The user to search on</param>
        </member>
        <member name="M:Octokit.ApiUrls.Keys(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to retrieve a given key.
            </summary>
            <param name="id">The Key Id to retrieve</param>
        </member>
        <member name="M:Octokit.ApiUrls.Emails">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the email addresses for the currently logged in user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Releases(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the releases for the specified repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.ReleasesGenerateNotes(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that generates release notes for the specified repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that generates release notes for the specified repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Releases(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a single release for the specified repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The id of the release</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Releases(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a single release for the specified repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="tag">The tag of the release</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.LatestRelease(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the latest release for the specified repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.ReleaseAssets(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all the assets for the specified release for the specified repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The id of the release</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Asset(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the assets specified by the asset id.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The id of the release asset</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Notifications">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the notifications for the currently logged in user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Notifications(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the notifications for the currently logged in user
            specific to the repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Notification(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified notification.
            </summary>
            <param name="id">The Id of the notification.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.NotificationSubscription(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified notification's subscription status.
            </summary>
            <param name="id">The Id of the notification.</param>
        </member>
        <member name="M:Octokit.ApiUrls.AccessTokens(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for creating a new installation token.
            </summary>
            <param name="installationId">The Id of the GitHub App installation.</param>
        </member>
        <member name="M:Octokit.ApiUrls.App">
            <summary>
            Returns the <see cref="T:System.Uri"/> that creates a github app.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.App(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that creates a github app.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.Installations">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all the installations of the authenticated application.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.UserInstallationRepositories(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists repositories accessible to the user for an installation..
            </summary>
            <param name="installationId">The id of the installation</param>
        </member>
        <member name="M:Octokit.ApiUrls.RepoInstallation(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the repository's installation information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoInstallation(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the repository's installation information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationInstallation(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the organization's installation information.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.UserInstallation(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the user's installation information.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.Installation(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a single installation of the authenticated application.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.UserInstallations">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all the installations in repositories the user has explicit permission to access
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.InstallationRepositories">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all the repositories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Issues">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the issues  across all the authenticated user’s visible
            repositories including owned repositories, member repositories, and organization repositories:
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.IssuesForOwnedAndMember">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the issues across owned and member repositories for the
            authenticated user:
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.Issues(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the issues for the currently logged in user
            specific to the repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Issues(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the issues for the specified organization  for the
            currently logged in user.
            </summary>
            <param name="organization">The name of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Issue(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueLock(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified issue to be locked/unlocked.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueReactions(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueReactions(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified issue.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueReaction(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="reaction">The reactionid for the issue</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueReaction(System.Int64,System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified issue.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="reaction">The reactionid for the issue</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueTimeline(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the timeline of a specified issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="number">The issue number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueTimeline(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the timeline of a specified issue.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueComments(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the comments for all issues in a specific repo.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueComments(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the comments of a specified issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueComment(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified comment.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The comment id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueCommentReactions(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified issue comment.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueCommentReactions(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified issue comment.
            </summary>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueCommentReaction(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified issue comment.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <param name="reaction">The reactionid for the comment</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueCommentReaction(System.Int64,System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified issue comment.
            </summary>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment number</param>
            <param name="reaction">The reactionid for the comment</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitComment(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified comment.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitComments(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the comments of a specified commit.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha of the commit</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitComments(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the comments of a specified commit.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitCommentReactions(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified commit comment.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitCommentReactions(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified commit comment.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitCommentReaction(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified commit comment.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <param name="reaction">The reaction number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitCommentReaction(System.Int64,System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified commit comment.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment number</param>
            <param name="reaction">The reaction number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Assignees(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the assignees to which issues may be assigned.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckAssignee(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a 204 if the login belongs to an assignee of the repository.
            Otherwise returns a 404.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="login">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueAssignees(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to add and remove assignees for an issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Members(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the members of the organization
            </summary>
            <param name="org">The organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Members(System.String,Octokit.OrganizationMembersFilter)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the members of the organization
            </summary>
            <param name="org">The organization</param>
            <param name="filter">The member filter, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <returns>The correct uri</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Members(System.String,Octokit.OrganizationMembersRole)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the members of the organization
            </summary>
            <param name="org">The organization</param>
            <param name="role">The role filter, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <returns>The correct uri</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Members(System.String,Octokit.OrganizationMembersFilter,Octokit.OrganizationMembersRole)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the members of the organization
            </summary>
            <param name="org">The organization</param>
            <param name="filter">The member filter, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <param name="role">The role filter, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <returns>The correct uri</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PublicMembers(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the public members of the organization
            </summary>
            <param name="org">Organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckMember(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a 204 if requester is an organization member and
            the user is, publicly or privately a member of the organization.
            Returns a 404 if the requester is an organization member and the user is not a member or
            the requester is not an organization member and is inquiring about themselves.
            Returns a 302 if the requester is not an organization member.
            </summary>
            <param name="org">The organization being inquired about</param>
            <param name="name">The user being inquired about</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationMember(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns member of organization
            </summary>
            <param name="org">The organization being inquired about</param>
            <param name="user">The user being inquired about</param>
            <returns>The <see cref="T:System.Uri"/> that returns member of organization</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckMemberPublic(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a 204 if the user is a public member of the
            organization.
            Otherwise returns a 404.
            </summary>
            <param name="org">The organization being inquired about</param>
            <param name="name">The user being inquired about</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationMembership(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a 204 if the user is publicizing, or concealing
            their membership in an organization.
            </summary>
            <param name="org">The organization to publicize, or conceal their membership of</param>
            <param name="name">The user publicizing, or concealing their membership of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationMemberships(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the organization memberships
            </summary>
            <param name="org">The name of the organization</param>
            <param name="name">The name of the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationInvitations(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the organization's invitations
            </summary>
            <param name="org">The name of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationPendingInvitations(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the organizations pending invitations
            </summary>
            <param name="org">The name of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationFailedInvitations(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the organizations failed invitations
            </summary>
            <param name="org">The name of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CancelOrganizationInvitation(System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to cancel an organization invitation
            </summary>
            <param name="org">The name of the organization</param>
            <param name="invitationId">The unique identifier of the invitation</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OutsideCollaborators(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the outside collaborators of the organization
            </summary>
            <param name="org">The organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OutsideCollaborators(System.String,Octokit.OrganizationMembersFilter)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the outside collaborators of the organization
            </summary>
            <param name="org">The organization</param>
            <param name="filter">The collaborator filter, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <returns>The correct uri</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Events(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the issue/pull request event and issue info for the specified repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssuesEvents(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the issue/pull request event info for the specified issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssuesEvents(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the issue/pull request event and issue info for the specified repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssuesEvent(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the issue/pull request event and issue info for the specified event.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The event id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Milestone(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the specified milestone.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The milestone number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Milestones(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the milestones for the specified repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Label(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the specified label.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of label</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Labels(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the labels for the specified repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueLabel(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the named label for the specified issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="labelName">The name of the label</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueLabels(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the labels for the specified issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.MilestoneLabels(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the labels for all issues in the specified milestone.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The milestone number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CreateCommitStatus(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to use when creating a commit status for the specified reference.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryHooks(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the repository hooks for the specified reference.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryHookById(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets the repository hook for the specified reference.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="hookId">The identifier of the repository hook</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryHookTest(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that can tests a specified repository hook
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="hookId">The identifier of the repository hook</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryHookPing(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that can ping a specified repository hook
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="hookId">The identifier of the repository hook</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationHooks(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the organization hooks for the specified reference.
            </summary>
            <param name="org">The name of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationHookById(System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets the organization hook for the specified reference.
            </summary>
            <param name="org">The name of the organization</param>
            <param name="hookId">The identifier of the organization hook</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationHookPing(System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that can ping a specified organization hook
            </summary>
            <param name="org">The name of the organization</param>
            <param name="hookId">The identifier of the organization hook</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitStatuses(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the commit statuses for the specified reference.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CombinedCommitStatus(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a combined view of commit statuses for the specified reference.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryForks(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the repository forks for the specified reference.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Watchers(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the watched repositories for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that lists the watched repositories for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Watched">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the watched repositories for the authenticated user.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.WatchedByUser(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the watched repositories for the specified user.
            </summary>
            <param name="user">The user that has the watches</param>
        </member>
        <member name="M:Octokit.ApiUrls.Watched(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that shows whether the repo is starred by the current user.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Stargazers(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the starred repositories for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that lists the starred repositories for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Starred">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the starred repositories for the authenticated user.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.StarredByUser(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the starred repositories for the specified user.
            </summary>
            <param name="user">The user that has the stars</param>
        </member>
        <member name="M:Octokit.ApiUrls.Starred(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that shows whether the repo is starred by the current user.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Tag(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified tag.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The tag reference (SHA)</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CreateTag(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for creating a tag object.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Events">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the list of public events.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Feeds">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the feeds available to the authenticating user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Gist">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the list of public gists.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.Gist(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified gist.
            </summary>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.ApiUrls.ForkGist(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the forks for the specified gist.
            </summary>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.ApiUrls.PublicGists">
            <summary>
            Returns the <see cref="T:System.Uri"/> for all public gists.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.StarredGists">
            <summary>
            Returns the <see cref="T:System.Uri"/> for all started public gists.
            </summary>
        </member>
        <member name="M:Octokit.ApiUrls.UsersGists(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for all gists for a given user.
            </summary>
            <param name="user">The user to search for</param>
        </member>
        <member name="M:Octokit.ApiUrls.StarGist(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to star a given gist.
            </summary>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.ApiUrls.GistComments(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the comments for the specified gist.
            </summary>
            <param name="gistId">The id of the gist</param>
        </member>
        <member name="M:Octokit.ApiUrls.GistCommits(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the commits for the specified gist.
            </summary>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequest(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the specified pull request.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequests(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the pull requests for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.MergePullRequest(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the pull request merge state.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/> that returns the pull request merge state.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestCommits(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the commits on a pull request.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/> that returns the commits on a pull request.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestFiles(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the files on a pull request.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/> that returns the files on a pull request.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.GistComment(System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a specific comment for the specified commit.
            </summary>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
        </member>
        <member name="M:Octokit.ApiUrls.Commit(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified commit.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (SHA)</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Reference(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified reference.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Reference(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified reference.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="referenceName">The reference name</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CreateCommit(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for creating a commit object.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.CreateMerge(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for creating a merge object.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.NetworkEvents(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the network of repositories.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the network of repositories.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationEvents(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the organization.
            </summary>
            <param name="organization">The name of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.ReceivedEvents(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the received events for a user.
            </summary>
            <param name="user">The login of the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.ReceivedEvents(System.String,System.Boolean)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the received events for a user.
            </summary>
            <param name="user">The login of the user</param>
            <param name="isPublic">Whether to return public events or not</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PerformedEvents(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for events performed by a user.
            </summary>
            <param name="user">The login of the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PerformedEvents(System.String,System.Boolean)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for events performed by a user.
            </summary>
            <param name="user">The login of the user</param>
            <param name="isPublic">Whether to return public events or not</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationEvents(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for events associated with an organization.
            </summary>
            <param name="user">The login of the user</param>
            <param name="organization">The name of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewComments(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the comments of a specified pull request review.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviews(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reviews opf a specified pull request
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewComment(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified pull request review comment.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <returns>The <see cref="T:System.Uri"/></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReview(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified pull request review.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <returns>The <see cref="T:System.Uri"/></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewDismissal(System.Int64,System.Int32,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for dismissing a specified pull request review
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <returns>The <see cref="T:System.Uri"/></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewDismissal(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for dismissing a specified pull request review
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <returns>The <see cref="T:System.Uri"/></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewSubmit(System.Int64,System.Int32,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for submitting a pull request review
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <returns>The <see cref="T:System.Uri"/> that </returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewSubmit(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for submitting a pull request review
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <returns>The <see cref="T:System.Uri"/></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewComments(System.Int64,System.Int32,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for submitting a pull request review
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <returns>The <see cref="T:System.Uri"/> that </returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewComments(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for submitting a pull request review
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <returns>The <see cref="T:System.Uri"/></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReview(System.Int64,System.Int32,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a specified pull request review.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <returns>The <see cref="T:System.Uri"/></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewCommentReactions(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reactions of a specified pull request review comment.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewCommentReactions(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reactions of a specified pull request review comment.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewCommentReaction(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified pull request review comment.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <param name="reaction">The reactionid for the comment</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewCommentReaction(System.Int64,System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reaction of a specified pull request review comment.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment number</param>
            <param name="reaction">The reactionid for the comment</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewCommentsRepository(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the pull request review comments on a specified repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>The <see cref="T:System.Uri"/></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Blobs(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a specific blob.
            </summary>
            <param name="owner">The owner of the blob</param>
            <param name="name">The name of the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Blob(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a specific blob.
            </summary>
            <param name="owner">The owner of the blob</param>
            <param name="name">The name of the organization</param>
            <param name="reference">The SHA of the blob</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Tree(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified tree.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Tree(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified tree.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The tree reference (SHA)</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.TreeRecursive(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified tree.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The tree reference (SHA)</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationTeams(System.String)">
            <summary>
            returns the <see cref="T:System.Uri"/> for org teams
            use for both Get and Create methods
            </summary>
            <param name="organization"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.UserTeams">
            <summary>
            Returns the <see cref="T:System.Uri"/> to discover teams
            for the current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.TeamChildTeams(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for child teams
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Teams(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for teams
            use for getting, updating, or deleting a <see cref="T:Octokit.Team"/>.
            </summary>
            <param name="id">The id of the <see cref="T:Octokit.Team"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.TeamsByOrganizationAndSlug(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for teams
            use for updating, or deleteing a <see cref="T:Octokit.Team"/>.
            </summary>
            <param name="org"></param>
            <param name="teamSlug"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.TeamMember(System.Int32,System.String)">
            <summary>
            returns the <see cref="T:System.Uri"/> for team member
            </summary>
            <param name="id">The team id</param>
            <param name="login">The user login.</param>
        </member>
        <member name="M:Octokit.ApiUrls.TeamMembers(System.Int32)">
            <summary>
            returns the <see cref="T:System.Uri"/> for team members list
            </summary>
            <param name="id">The team id</param>
        </member>
        <member name="M:Octokit.ApiUrls.TeamRepositories(System.Int32)">
            <summary>
            returns the <see cref="T:System.Uri"/> for the repositories
            </summary>
            <param name="id">The team id</param>
        </member>
        <member name="M:Octokit.ApiUrls.TeamRepository(System.Int32,System.String,System.String)">
            <summary>
            returns the <see cref="T:System.Uri"/> for a team repository
            </summary>
            <param name="id">The team id</param>
            <param name="organization">The organization id</param>
            <param name="repoName">The repository name</param>
        </member>
        <member name="M:Octokit.ApiUrls.TeamPermissionsForARepository(System.String,System.String,System.String,System.String)">
            <summary>
            returns the <see cref="T:System.Uri"/> for a team repository
            </summary>
            <param name="org">The organization name. The name is not case sensitive.</param>
            <param name="teamSlug">The slug of the team name.</param>
            <param name="owner">The account owner of the repository. The name is not case sensitive.</param>
            <param name="repo">The name of the repository. The name is not case sensitive.</param>
        </member>
        <member name="M:Octokit.ApiUrls.TeamPendingInvitations(System.Int32)">
            <summary>
            returns the <see cref="T:System.Uri"/> for the teams pending invitations
            </summary>
            <param name="id">The team id</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoCollaborators(System.String,System.String)">
            <summary>
            returns the <see cref="T:System.Uri"/> for teams
            use for update or deleting a team
            </summary>
            <param name="owner">owner of repo</param>
            <param name="name">name of repo</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoCollaborator(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to check user is collaborator
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="user">The name of user</param>
            <returns>The <see cref="T:System.Uri"/> to check user is collaborator</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoCollaborator(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to check user is collaborator
            </summary>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">The name of the user</param>
            <returns>The <see cref="T:System.Uri"/> to check user is collaborator</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoCollaboratorPermission(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to review the collaborators permission
            </summary>
            <param name="owner">The owner of the repo</param>
            <param name="repo">The name of the repo</param>
            <param name="user">The name of the user</param>
            <returns>The <see cref="T:System.Uri"/> to review the collaborators permission</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoBranches(System.String,System.String)">
            <summary>
            returns the <see cref="T:System.Uri"/> for branches
            </summary>
            <param name="owner">owner of repo</param>
            <param name="name">name of repo</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.SearchRepositories">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for searching repositories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.SearchUsers">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for searching users
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.SearchIssues">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for searching issues
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.SearchCode">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for searching code
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.SearchLabels">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for searching labels
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryCodeOwnersErrors(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository codeowners errors.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>the <see cref="T:System.Uri"/> for repository topics.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryCodeOwnersErrors(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository codeowners errors.
            </summary>
            <param name="repositoryId">The ID of the repository</param>
            <returns>the <see cref="T:System.Uri"/> for repository topics.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryContributors(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository contributors.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTopics(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository topics.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>the <see cref="T:System.Uri"/> for repository topics.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTopics(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository topics.
            </summary>
            <param name="repositoryId">The ID of the repository</param>
            <returns>the <see cref="T:System.Uri"/> for repository topics.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryLanguages(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository languages.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTeams(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository teams.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTags(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository tags.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTransfer(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a repository transfer.
            </summary>
            <param name="owner">The current owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTransfer(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a repository transfer.
            </summary>
            <param name="repositoryId">The id of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryCommit(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository commits.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (SHA)</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryCommits(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository commits.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryCommitsBranchesWhereHead(System.String,System.String,System.String)">
            repos/{owner}/{repo}/commits/{commit_sha}/
             <summary>
             Returns the <see cref="T:System.Uri"/> that lists all branches where the given commit SHA is the HEAD, or latest commit for the branch.
             </summary>
             <param name="owner">The owner of the repository</param>
             <param name="name">The name of the repository</param>
             <param name="reference">The commit reference (SHA)</param>
             <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryCommitsBranchesWhereHead(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists all branches where the given commit SHA is the HEAD, or latest commit for the branch.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (SHA)</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryCommitsPull(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the check suites for the specified reference.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (SHA)</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryCommitsPull(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the check suites for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (SHA)</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoCompare(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for comparing two commits.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="base">The base commit</param>
            <param name="head">The head commit</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoBranch(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a repository branch.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoBranchProtection(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a repository branches protection.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoBranchProtection(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a repository branches protection.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoRequiredStatusChecks(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for required status checks for a protected branch.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoRequiredStatusChecks(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for required status checks for a protected branch.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoRequiredStatusChecksContexts(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for required status checks for a protected branch.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoRequiredStatusChecksContexts(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for required status checks for a protected branch.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoProtectedBranchReviewEnforcement(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for required_pull_request_reviews for a protected branch
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branchName">The name of the branch</param>
        </member>
        <member name="M:Octokit.ApiUrls.RepoProtectedBranchReviewEnforcement(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for required_pull_request_reviews for a protected branch
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branchName">The name of the branch</param>
        </member>
        <member name="M:Octokit.ApiUrls.RepoProtectedBranchAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for admin enforcement for a protected branch
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branchName">The name of the branch</param>
        </member>
        <member name="M:Octokit.ApiUrls.RepoProtectedBranchAdminEnforcement(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for admin enforcement for a protected branch
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branchName">The name of the branch</param>
        </member>
        <member name="M:Octokit.ApiUrls.RepoRestrictions(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for restrictions for a protected branch.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoRestrictions(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for restrictions for a protected branch.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoRestrictionsTeams(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for team restrictions for a protected branch.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoRestrictionsTeams(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for team restrictions for a protected branch.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoRestrictionsUsers(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for user restrictions for a protected branch.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoRestrictionsUsers(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for user restrictions for a protected branch.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Repository(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryDeployKey(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a deploy key for a repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The id of the deploy key of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryDeployKeys(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for deploy keys for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryVulnerabilityAlerts(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for checking vulnerability alerts for a repository.
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Deployments(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Deployments API for the given repository.
            </summary>
            <param name="owner">Owner of the repository</param>
            <param name="name">Name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the Deployments API for the given repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.DeploymentEnvironments(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Deployment Environments API for the given repository.
            </summary>
            <param name="owner">Owner of the repository</param>
            <param name="name">Name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the Deployments API for the given repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.DeploymentStatuses(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Deployment Statuses API for the given deployment.
            </summary>
            <param name="owner">Owner of the repository</param>
            <param name="name">Name of the repository</param>
            <param name="deploymentId">Id of the deployment</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Followers">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for retrieving the
            current users followers
            </summary>
            <returns>The <see cref="T:System.Uri"/> for retrieving the current users followers</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Followers(System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for retrieving
            the followers for the specified user
            </summary>
            <param name="login">name of the user</param>
            <returns>The <see cref="T:System.Uri"/> for retrieving the specified users followers</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Following">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for retrieving the users the current user follows
            </summary>
            <returns>The <see cref="T:System.Uri"/> for retrieving the users the current user follows</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Following(System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for retrieving the users the specified user follows
            </summary>
            <param name="login">name of the user</param>
            <returns>The <see cref="T:System.Uri"/> for retrieving the users the specified user follows</returns>
        </member>
        <member name="M:Octokit.ApiUrls.IsFollowing(System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for checking is the current user is following
            another user
            </summary>
            <param name="following">name of the user followed</param>
            <returns>The <see cref="T:System.Uri"/> for checking if the current user follows the specified user.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.IsFollowing(System.String,System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for checking if a user is following another user
            </summary>
            <param name="login">name of the user following</param>
            <param name="following">name of the user followed</param>
            <returns>The <see cref="T:System.Uri"/> for checking if the specified user follows another user</returns>
        </member>
        <member name="M:Octokit.ApiUrls.User(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the user for the given login
            </summary>
            <param name="login">Name of the user</param>
            <returns>The <see cref="T:System.Uri"/> for the user for the given login</returns>
        </member>
        <member name="M:Octokit.ApiUrls.OauthAuthorize">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for initiating the OAuth Web login Flow
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OauthDeviceCode">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for initiating the OAuth device Flow
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.OauthAccessToken">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> to request an OAuth access token.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryReadme(System.String,System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for getting the README of the specified repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for getting the README of the specified repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryContent(System.String,System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for getting the contents of the specified repository's root
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for getting the contents of the specified repository's root</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryContent(System.String,System.String,System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for getting the contents of the specified repository and path
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path of the contents to get</param>
            <returns>The <see cref="T:System.Uri"/> for getting the contents of the specified repository and path</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryArchiveLink(System.String,System.String,Octokit.ArchiveFormat,System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for getting an archive of a given repository's contents, in a specific format
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
            <returns>The <see cref="T:System.Uri"/> for getting an archive of a given repository's contents, in a specific format</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryContent(System.String,System.String,System.String,System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for getting the contents of the specified repository and path
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path of the contents to get</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually main)</param>
            <returns>The <see cref="T:System.Uri"/> for getting the contents of the specified repository and path</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryPage(System.String,System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for getting the page metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for getting the page metadata for a given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryPageBuilds(System.String,System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for getting all build metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for getting all build metadata for a given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryPageBuildsLatest(System.String,System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for getting the build metadata for the last build for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for getting the build metadata for the last build for a given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.StatsContributors(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the contributors for the given repository
            </summary>
            <param name="owner">Owner of the repository</param>
            <param name="name">Name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the contributors for the given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.StatsCommitActivity(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the commit activity for the given repository
            </summary>
            <param name="owner">Owner of the repository</param>
            <param name="name">Name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the commit activity for the given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.StatsCodeFrequency(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the code frequency for the given repository
            </summary>
            <param name="owner">Owner of the repository</param>
            <param name="name">Name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the code frequency for the given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.StatsParticipation(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the participation for the given repository
            </summary>
            <param name="owner">Owner of the repository</param>
            <param name="name">Name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the participation for the given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.StatsPunchCard(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the punch card for the given repository
            </summary>
            <param name="owner">Owner of the repository</param>
            <param name="name">Name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the punch card for the given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.AdminPreReceiveEnvironments">
            <summary>
            Creates the <see cref="T:System.Uri"/> for pre-receive environments.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.AdminPreReceiveEnvironments(System.Int64)">
            <summary>
            Creates the <see cref="T:System.Uri"/> for pre-receive environments.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.AdminPreReceiveEnvironmentDownload(System.Int64)">
            <summary>
            Creates the <see cref="T:System.Uri"/> for pre-receive environment download status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.AdminPreReceiveEnvironmentDownloadStatus(System.Int64)">
            <summary>
            Creates the <see cref="T:System.Uri"/> for pre-receive environment download status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.AdminPreReceiveHooks">
            <summary>
            Creates the <see cref="T:System.Uri"/> for pre-receive hooks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.AdminPreReceiveHooks(System.Int64)">
            <summary>
            Creates the <see cref="T:System.Uri"/> for pre-receive hooks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.UserAdministrationSiteAdmin(System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for altering administration status of a user.
            </summary>
            <param name="login">The login for the intended user.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.UserAdministrationSuspension(System.String)">
            <summary>
            Creates the relative <see cref="T:System.Uri"/> for altering suspension status of a user.
            </summary>
            <param name="login">The login for the intended user.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Asset(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the assets specified by the asset id.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release asset</param>
            <returns>The <see cref="T:System.Uri"/> that returns the assets specified by the asset id.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Assignees(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the assignees to which issues may be assigned.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that returns all of the assignees to which issues may be assigned.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Blobs(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a specific blob.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for a specific blob.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Blob(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a specific blob.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA of the blob</param>
            <returns>The <see cref="T:System.Uri"/> for a specific blob.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckAssignee(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a 204 if the login belongs to an assignee of the repository. Otherwise returns a 404.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="login">The login for the user</param>
            <returns>The <see cref="T:System.Uri"/> that returns a 204 if the login belongs to an assignee of the repository. Otherwise returns a 404.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CombinedCommitStatus(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a combined view of commit statuses for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <returns>The <see cref="T:System.Uri"/> that returns a combined view of commit statuses for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Commit(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified commit.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (SHA)</param>
            <returns>The <see cref="T:System.Uri"/> for the specified commit.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitComment(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified comment.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment number</param>
            <returns>The <see cref="T:System.Uri"/> for the specified comment.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitComments(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the comments of a specified commit.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha of the commit</param>
            <returns>The <see cref="T:System.Uri"/> for the comments of a specified commit.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitComments(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the comments of a specified commit.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the comments of a specified commit.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CommitStatuses(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the commit statuses for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <returns>The <see cref="T:System.Uri"/> that lists the commit statuses for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CreateCommit(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for creating a commit object.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for creating a commit object.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CreateCommitStatus(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to use when creating a commit status for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <returns>The <see cref="T:System.Uri"/> to use when creating a commit status for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CreateMerge(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for creating a merge object.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for creating a merge object.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CreateTag(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for creating a tag object.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for creating a tag object.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Deployments(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Deployments API for the given repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the Deployments API for the given repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.DeploymentEnvironments(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Deployment Environments API for the given repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the Deployments API for the given repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.DeploymentStatuses(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Deployment Statuses API for the given deployment.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="deploymentId">Id of the deployment</param>
            <returns>The <see cref="T:System.Uri"/> for the Deployment Statuses API for the given deployment.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Events(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the issue/pull request event and issue info for the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that returns the issue/pull request event and issue info for the specified repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.GpgKeys">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all the GPG Keys for the authenticated user.
            </summary>
            <returns>The <see cref="T:System.Uri"/> that returns all the GPG Keys for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.GpgKeys(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the GPG Key for the authenticated user for the specified Id.
            </summary>
            <param name="id">The <see cref="T:System.Uri"/> that returns the GPG Key for the authenticated user for the specified Id.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.Issue(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified issue.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <returns>The <see cref="T:System.Uri"/> for the specified issue.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueComment(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified comment.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The comment id</param>
            <returns>The <see cref="T:System.Uri"/> for the specified comment.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueComments(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the comments for all issues in a specific repo.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the comments for all issues in a specific repo.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueComments(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the comments of a specified issue.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <returns>The <see cref="T:System.Uri"/> for the comments of a specified issue.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueLabel(System.Int64,System.Int32,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the named label for the specified issue.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="labelName">The name of the label</param>
            <returns>The <see cref="T:System.Uri"/> that returns the named label for the specified issue.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueLabels(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the labels for the specified issue.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <returns>The <see cref="T:System.Uri"/> that returns all of the labels for the specified issue.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssueLock(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified issue to be locked/unlocked.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <returns>The <see cref="T:System.Uri"/> for the specified issue to be locked/unlocked.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Issues(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the issues for the currently logged in user specific to the repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that returns all of the issues for the currently logged in user specific to the repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssuesEvent(System.Int64,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the issue/pull request event and issue info for the specified event.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The event id</param>
            <returns>The <see cref="T:System.Uri"/> that returns the issue/pull request event and issue info for the specified event.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssuesEvents(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the issue/pull request event info for the specified issue.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <returns>The <see cref="T:System.Uri"/> that returns the issue/pull request event info for the specified issue.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.IssuesEvents(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the issue/pull request event and issue info for the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that returns the issue/pull request event and issue info for the specified repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Label(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the specified label.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of label</param>
            <returns>The <see cref="T:System.Uri"/> that returns the specified label.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Labels(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the labels for the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that returns all of the labels for the specified repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.LatestRelease(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the latest release for the specified repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that returns the latest release for the specified repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.MergePullRequest(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the pull request merge state.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/> that returns the pull request merge state.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Milestone(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the specified milestone.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The milestone number</param>
            <returns>The <see cref="T:System.Uri"/> that returns the specified milestone.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.MilestoneLabels(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the labels for all issues in the specified milestone.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The milestone number</param>
            <returns>The <see cref="T:System.Uri"/> that returns all of the labels for all issues in the specified milestone.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Milestones(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the milestones for the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that returns all of the milestones for the specified repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Notifications(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the notifications for the currently logged in user specific to the repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that returns all of the notifications for the currently logged in user specific to the repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequest(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the specified pull request.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/> that returns the specified pull request.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestCommits(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the commits on a pull request.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/> that returns the commits on a pull request.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestFiles(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the files on a pull request.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/> that returns the files on a pull request.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewComment(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified pull request review comment.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment number</param>
            <returns>The <see cref="T:System.Uri"/> that </returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewComments(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the comments of a specified pull request review.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/> that </returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviews(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the reviews of a specified pull request
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/> that </returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewCommentsRepository(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the pull request review comments on a specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that </returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequests(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the pull requests for a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that lists the pull requests for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Reference(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Reference(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="referenceName">The reference name</param>
            <returns>The <see cref="T:System.Uri"/> for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ReleaseAssets(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all the assets for the specified release for the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release</param>
            <returns>The <see cref="T:System.Uri"/> that returns all the assets for the specified release for the specified repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Releases(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the releases for the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that returns all of the releases for the specified repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ReleasesGenerateNotes(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that generates release notes for the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that generates release notes for the specified repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Releases(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a single release for the specified repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release</param>
            <returns>The <see cref="T:System.Uri"/> that returns a single release for the specified repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Releases(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns a single release for the specified repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="tag">The tag of the release</param>
            <returns>The <see cref="T:System.Uri"/> that returns a single release for the specified repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoBranch(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a repository branch.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branchName">The name of the branch</param>
            <returns>The <see cref="T:System.Uri"/> for a repository branch.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoBranches(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the branches for the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that returns all of the branches for the specified repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoCollaborators(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all of the collaborators for the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that returns all of the collaborators for the specified repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepoCompare(System.Int64,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for comparing two commits.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="base">The base commit</param>
            <param name="head">The head commit</param>
            <returns>The <see cref="T:System.Uri"/> for comparing two commits.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Repository(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryArchiveLink(System.Int64,Octokit.ArchiveFormat,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for getting an archive of a given repository's contents, in a specific format
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
            <returns>The <see cref="T:System.Uri"/> for getting an archive of a given repository's contents, in a specific format</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryCommit(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository commits.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (SHA)</param>
            <returns>The <see cref="T:System.Uri"/> for repository commits.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryCommits(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository commits.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for repository commits.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryContent(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for getting the contents of the specified repository's root
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for getting the contents of the specified repository's root</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryContent(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for getting the contents of the specified repository and path
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path of the contents to get</param>
            <returns>The <see cref="T:System.Uri"/> for getting the contents of the specified repository and path</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryContent(System.Int64,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for getting the contents of the specified repository and path
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path of the contents to get</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually main)</param>
            <returns>The <see cref="T:System.Uri"/> for getting the contents of the specified repository and path</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryContributors(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository contributors.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for repository contributors.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryDeployKey(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a deploy key for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The id of the deploy key of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for a deploy key for a repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryDeployKeys(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for deploy keys for a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for deploy keys for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryForks(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the repository forks for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that lists the repository forks for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryHookById(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets the repository hook for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The identifier of the repository hook</param>
            <returns>The <see cref="T:System.Uri"/> that gets the repository hook for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryHookPing(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that can ping a specified repository hook
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The identifier of the repository hook</param>
            <returns>The <see cref="T:System.Uri"/> that can ping a specified repository hook</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryHooks(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the repository hooks for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that lists the repository hooks for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryHookTest(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that can tests a specified repository hook
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The identifier of the repository hook</param>
            <returns>The <see cref="T:System.Uri"/> that can tests a specified repository hook</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryLanguages(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository languages.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for repository languages.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryPage(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for getting the page metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for getting the page metadata for a given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryPageBuilds(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for getting all build metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for getting all build metadata for a given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryPageBuildsLatest(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for getting the build metadata for the last build for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for getting the build metadata for the last build for a given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryReadme(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for getting the README of the specified repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for getting the README of the specified repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTags(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository tags.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for repository tags.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTeams(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository teams.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for repository teams.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Stargazers(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the starred repositories for the authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that lists the starred repositories for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.StatsCodeFrequency(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the code frequency for the given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the code frequency for the given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.StatsCommitActivity(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the commit activity for the given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the commit activity for the given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.StatsContributors(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the contributors for the given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the contributors for the given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.StatsParticipation(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the participation for the given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the participation for the given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.StatsPunchCard(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the punch card for the given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the punch card for the given repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Tag(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified tag.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The tag reference (SHA)</param>
            <returns>The <see cref="T:System.Uri"/> for the specified tag.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Tree(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified tree.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for the specified tree.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Tree(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified tree.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The tree reference (SHA)</param>
            <returns>The <see cref="T:System.Uri"/> for the specified tree.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.TreeRecursive(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified tree.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The tree reference (SHA)</param>
            <returns>The <see cref="T:System.Uri"/> for the specified tree.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Watched(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that shows whether the repo is starred by the current user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that shows whether the repo is starred by the current user.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Watchers(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the watched repositories for the authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that lists the watched repositories for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Reactions(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for deleting a reaction.
            </summary>
            <param name="number">The reaction number</param>
            <returns>The <see cref="T:System.Uri"/> that lists the watched repositories for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryInvitations(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository invitations.
            </summary>
            <param name="repositoryId">The id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for repository invitations.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryInvitations(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a single repository invitation.
            </summary>
            <param name="repositoryId">The id of the repository</param>
            <param name="invitationId">The id of the invitation</param>
            <returns>The <see cref="T:System.Uri"/> for repository invitations.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.UserInvitations">
            <summary>
            Returns the <see cref="T:System.Uri"/> for invitations for the current user.
            </summary>
            <returns>The <see cref="T:System.Uri"/> for invitations for the current user.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.UserInvitations(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a single invitation of the current user.
            </summary>
            <param name="invitationId">The id of the invitation</param>
            <returns>The <see cref="T:System.Uri"/> for invitations for the current user.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTrafficReferrers(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository traffic referrers.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> for repository traffic referrers.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTrafficReferrers(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository traffic referrers.
            </summary>
            <param name="repositoryId">The id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for repository traffic referrers.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTrafficPaths(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository traffic paths.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> for repository traffic paths.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTrafficPaths(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository traffic paths.
            </summary>
            <param name="repositoryId">The id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for repository traffic paths.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTrafficViews(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository traffic views.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> for repository traffic views.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTrafficViews(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository traffic views.
            </summary>
            <param name="repositoryId">The id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for repository traffic views.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTrafficClones(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository traffic clones.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> for repository traffic clones.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryTrafficClones(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository traffic clones.
            </summary>
            <param name="repositoryId">The id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for repository traffic clones.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewRequests(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for pull request review requests.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/> for pull request review requests.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PullRequestReviewRequests(System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for pull request review requests.
            </summary>
            <param name="repositoryId">The id of the repository</param>
            <param name="number">The pull request number</param>
            <returns>The <see cref="T:System.Uri"/> for pull request review requests.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryProjects(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified project projects.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for projects.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryProjects(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified project projects.
            </summary>
            <param name="repositoryId">The id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for projects.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.OrganizationProjects(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified organization projects.
            </summary>
            <param name="organization">The name of the organization</param>
            <returns>The <see cref="T:System.Uri"/> for projects.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Project(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a project.
            </summary>
            <param name="id">The id of the project</param>
            <returns>The <see cref="T:System.Uri"/> for repository projects.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ProjectColumn(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for project columns.
            </summary>
            <param name="id">The id of the columns</param>
            <returns>The <see cref="T:System.Uri"/> for project columns.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ProjectColumns(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for a specific project column.
            </summary>
            <param name="projectId">The id of the project</param>
            <returns>The <see cref="T:System.Uri"/> for a specific project column.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ProjectColumnMove(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to move a project column.
            </summary>
            <param name="id">The id of the column to move</param>
            <returns>The <see cref="T:System.Uri"/> to move a project column.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ProjectCard(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for project cards.
            </summary>
            <param name="id">The id of the card</param>
            <returns>The <see cref="T:System.Uri"/> for project cards.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ProjectCards(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for project cards.
            </summary>
            <param name="columnId">The id of the column</param>
            <returns>The <see cref="T:System.Uri"/> for project cards.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ProjectCardMove(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to move a project card.
            </summary>
            <param name="id">The id of the card to move</param>
            <returns>The <see cref="T:System.Uri"/> to move a project card.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryLicense(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository's license requests.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> for repository's license requests.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryLicense(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for repository's license requests.
            </summary>
            <param name="repositoryId">The id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> for repository's license requests.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckRun(System.Int64,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the specified check run.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The check run Id</param>
            <returns>The <see cref="T:System.Uri"/> that returns the specified check run.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckRun(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the specified check run.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="id">The check run Id</param>
            <returns>The <see cref="T:System.Uri"/> that returns the specified check run.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckRuns(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the check runs for the repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that handles the check runs for the repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckRuns(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the check runs for the repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> that handles the check runs for the repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckRunsForReference(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the check runs for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The git reference</param>
            <returns>The <see cref="T:System.Uri"/> that returns the check runs for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckRunsForReference(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the check runs for the specified reference.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="reference">The git reference</param>
            <returns>The <see cref="T:System.Uri"/> that returns the check runs for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckRunsForCheckSuite(System.Int64,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the check runs for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <returns>The <see cref="T:System.Uri"/> that returns the check runs for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckRunsForCheckSuite(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the check runs for the specified reference.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <returns>The <see cref="T:System.Uri"/> that returns the check runs for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckRunAnnotations(System.Int64,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the annotations for the specified check run.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <returns>The <see cref="T:System.Uri"/> that returns the annotations for the specified check run.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckRunAnnotations(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the annotations for the specified check run.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="checkRunId">The Id of the check run</param>
            <returns>The <see cref="T:System.Uri"/> that returns the annotations for the specified check run.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckSuite(System.Int64,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the specified check suite.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The check run Id</param>
            <returns>The <see cref="T:System.Uri"/> that returns the specified check suite.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckSuite(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns the specified check suite.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="id">The check run Id</param>
            <returns>The <see cref="T:System.Uri"/> that returns the specified check suite.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckSuitesForReference(System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the check suites for the specified reference.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The git reference</param>
            <returns>The <see cref="T:System.Uri"/> that returns the check suites for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckSuitesForReference(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the check suites for the specified reference.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="reference">The git reference</param>
            <returns>The <see cref="T:System.Uri"/> that returns the check suites for the specified reference.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckSuites(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the check suites for the repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that handles the check suites for the repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckSuites(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the check suites for the repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> that handles the check suites for the repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckSuiteRerequest(System.Int64,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the check suite requests for the repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <returns>The <see cref="T:System.Uri"/> that handles the check suite requests for the repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckSuiteRerequest(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the check suite requests for the repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <returns>The <see cref="T:System.Uri"/> that handles the check suite requests for the repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckSuitePreferences(System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the check suite preferences for the repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>The <see cref="T:System.Uri"/> that handles the check suite preferences for the repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CheckSuitePreferences(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the check suite preferences for the repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> that handles the check suite preferences for the repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositorySecret(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the repository secrets for the repository
            </summary>
            <param name="owner">The owner of the repo</param>
            <param name="repo">The name of the repo</param>
            <param name="secret">The name of the secret</param>
            <returns>The <see cref="T:System.Uri"/> that handles the repository secrets for the repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositorySecrets(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the repository secrets for the repository
            </summary>
            <param name="owner">The owner of the repo</param>
            <param name="repo">The name of the repo</param>
            <returns>The <see cref="T:System.Uri"/> that handles the repository secrets for the repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositorySecretsPublicKey(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the repository secrets for the repository
            </summary>
            <param name="owner">The owner of the repo</param>
            <param name="repo">The name of the repo</param>
            <returns>The <see cref="T:System.Uri"/> that handles the repository secrets for the repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryVariable(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the repository variables for the repository
            </summary>
            <param name="owner">The owner of the repo</param>
            <param name="repo">The name of the repo</param>
            <param name="variable">The name of the variable</param>
            <returns>The <see cref="T:System.Uri"/> that handles the repository variables for the repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryVariables(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the repository variables for the repository
            </summary>
            <param name="owner">The owner of the repo</param>
            <param name="repo">The name of the repo</param>
            <returns>The <see cref="T:System.Uri"/> that handles the repository variables for the repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryOrganizationVariables(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the organization variables for the repository
            </summary>
            <param name="owner">The owner of the repo</param>
            <param name="repo">The name of the repo</param>
            <returns>The <see cref="T:System.Uri"/> that handles the organization variables for the repository</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Emojis">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all emojis in
            response to a GET request.
            </summary>
            <returns>The <see cref="T:System.Uri"/> for emojis.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RawMarkdown">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns rendered markdown in
            response to a POST request.
            </summary>
            <returns>The <see cref="T:System.Uri"/> to render markdown.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Markdown">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns rendered markdown in
            response to a POST request.
            </summary>
            <returns>The <see cref="T:System.Uri"/> to render markdown.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.GitIgnoreTemplates">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all git ignore templates in
            response to a GET request.
            </summary>
            <returns>The <see cref="T:System.Uri"/> to git ignore templates.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.GitIgnoreTemplates(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns specified git ignore templates in
            response to a GET request.
            </summary>
            <param name="templateName">The name of the template to retrieve</param>
            <returns>The <see cref="T:System.Uri"/> to git ignore template.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Licenses">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all licenses in
            response to a GET request.
            </summary>
            <returns>The <see cref="T:System.Uri"/> to licenses.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Licenses(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns specified license in
            response to a GET request.
            </summary>
            <param name="key">The key of the license to retrieve</param>
            <returns>The <see cref="T:System.Uri"/> to license.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RateLimit">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns rate limit in
            response to a GET request.
            </summary>
            <returns>The <see cref="T:System.Uri"/> to rate limit.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Meta">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns meta in
            response to a GET request.
            </summary>
            <returns>The <see cref="T:System.Uri"/> to meta.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.AllOrganizationCredentials(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all organization credentials in
            response to a GET request.
            </summary>
            <param name="org">The organization name.</param>
            <returns>The <see cref="T:System.Uri"/> to meta.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.AllOrganizationCredentials(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that returns all organization credentials for a given login in
            response to a GET request.
            </summary>
            <param name="org">The organization name.</param>
            <param name="login">Limits the list of credentials authorizations for an organization to a specific login</param>
            <returns>The <see cref="T:System.Uri"/> to meta.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackagesOrg(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Packages request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Packages endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageOrg(System.String,Octokit.PackageType,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageRestoreOrg(System.String,Octokit.PackageType,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Restore request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package Restore endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageVersionsOrg(System.String,Octokit.PackageType,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Versions request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageVersionOrg(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Version request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageVersionRestoreOrg(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Version request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackagesActiveUser">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Packages request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Packages endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageActiveUser(Octokit.PackageType,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageRestoreActiveUser(Octokit.PackageType,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Restore request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package Restore endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageVersionsActiveUser(Octokit.PackageType,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Versions request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageVersionActiveUser(Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Version request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageVersionRestoreActiveUser(Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Version request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackagesUser(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Packages request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Packages endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageUser(System.String,Octokit.PackageType,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageRestoreUser(System.String,Octokit.PackageType,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Restore request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package Restore endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageVersionsUser(System.String,Octokit.PackageType,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Versions request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageVersionUser(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Version request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.PackageVersionRestoreUser(System.String,Octokit.PackageType,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the Package Version request
            </summary>
            <returns>The <see cref="T:System.Uri"/> Package endpoint.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsDispatchWorkflow(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that disables an Actions workflow for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowId">The Id of the workflow.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsDispatchWorkflow(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that disables an Actions workflow for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowFileName">The workflow file name.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsDisableWorkflow(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that disables an Actions workflow for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowFileName">The workflow file name.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsDisableWorkflow(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that disables an Actions workflow for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowId">The Id of the workflow.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsEnableWorkflow(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that enables an Actions workflow for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowFileName">The workflow file name.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsEnableWorkflow(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that enables an Actions workflow for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowId">The Id of the workflow.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsGetWorkflow(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowFileName">The workflow file name.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsGetWorkflow(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowId">The Id of the workflow.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsGetWorkflowUsage(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets an Actions workflow'usage for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowFileName">The workflow file name.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsGetWorkflowUsage(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets an Actions workflow's usage for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowId">The Id of the workflow.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListWorkflows(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions workflows for the repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions workflows for the repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsRerunWorkflowJob(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that re-runs an Actions workflow job for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="jobId">The Id of the workflow job.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsGetWorkflowJob(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that re-runs an Actions workflow job for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="jobId">The Id of the workflow job.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsGetWorkflowJobLogs(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets the logs an Actions workflow job for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="jobId">The Id of the workflow job.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow job for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListWorkflowJobs(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions jobs for a workflow run.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow run.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions workflows runs for a workflow.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListWorkflowJobs(System.String,System.String,System.Int64,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions jobs for a workflow run.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="attemptNumber">The attempt number of the workflow job.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions workflows runs for a workflow.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsWorkflowRuns(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets Actions workflow runs for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> that gets Actions workflow runs for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsWorkflowRun(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets an Actions workflow run for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow run.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow run for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsWorkflowRunAttempt(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets an Actions workflow run attempt for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="attemptNumber">The attempt number of the workflow run.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow run for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsApproveWorkflowRun(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that approves an Actions workflow run for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow run.</param>
            <returns>The <see cref="T:System.Uri"/> that approves an Actions workflow run for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsCancelWorkflowRun(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that cancels an Actions workflow run for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow run.</param>
            <returns>The <see cref="T:System.Uri"/> that cancels an Actions workflow run for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsGetWorkflowRunLogs(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets the logs an Actions workflow run attempt for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow run.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow run for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsGetWorkflowRunAttemptLogs(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets the logs an Actions workflow run attempt for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow run.</param>
            <param name="attemptNumber">The attempt number of the workflow run.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow run for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsRerunWorkflowRun(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that re-runs an Actions workflow run for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow job.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsRerunWorkflowRunFailedJobs(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that re-runs failed jobs of an Actions workflow run for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow job.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsGetWorkflowRunUsage(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets an Actions workflow's usage for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow.</param>
            <returns>The <see cref="T:System.Uri"/> that gets an Actions workflow for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsWorkflowRunApprovals(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets Actions workflow run approvals for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow.</param>
            <returns>The <see cref="T:System.Uri"/> that gets Actions workflow run approvals for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsWorkflowRunPendingDeployments(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that gets Actions workflow run pending deployments for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runId">The Id of the workflow.</param>
            <returns>The <see cref="T:System.Uri"/> that gets Actions workflow run pending deployments for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListWorkflowRuns(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions workflow runs for a workflow.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowId">The Id of the workflow.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions workflows runs for a workflow.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListWorkflowRuns(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions workflow runs for a workflow.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="workflowFileName">The workflow file name.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions workflows runs for a workflow.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListSelfHostedRunnersForEnterprise(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runners for an enterprise.
            </summary>
            <param name="enterprise">The name of the enterprise.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runners for an enterprise.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListSelfHostedRunnersForOrganization(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runners for an organization.
            </summary>
            <param name="org">The name of the organization.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runners for an organization.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListSelfHostedRunnersForRepository(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runners for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runners for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListSelfHostedRunnersForEnterpriseRunnerGroup(System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner for a runner group in an enterprise.
            </summary>
            <param name="enterprise">The name of the enterprise.</param>
            <param name="runnerGroupId">The Id of the runner group.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner for a runner group in an enterprise.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListSelfHostedRunnersForOrganizationRunnerGroup(System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner for a runner group in an organization.
            </summary>
            <param name="org">The name of the organization.</param>
            <param name="runnerGroupId">The Id of the runner group.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner for a runner group in an organization.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListSelfHostedRunnersForRepositoryRunnerGroup(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner for a runner group in a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runnerGroupId">The Id of the runner group.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner for a runner group in a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListRunnerApplicationsForEnterprise(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner applications for an enterprise.
            </summary>
            <param name="enterprise">The name of the enterprise.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner applications for an enterprise.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListRunnerApplicationsForOrganization(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner applications for an organization.
            </summary>
            <param name="org">The name of the organization.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner applications for an organization.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListRunnerApplicationsForRepository(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner applications for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner applications for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsDeleteEnterpriseRunner(System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner delete from an enterprise.
            </summary>
            <param name="enterprise">The name of the enterprise.</param>
            <param name="runnerId">The Id of the runner.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner delete from an enterprise.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsDeleteOrganizationRunner(System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner delete from an organization.
            </summary>
            <param name="org">The name of the organization.</param>
            <param name="runnerId">The Id of the runner.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner delete from an organization.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsDeleteRepositoryRunner(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner delete from a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <param name="runnerId">The Id of the runner.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner delete from a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsCreateEnterpriseRegistrationToken(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner registration token for an enterprise.
            </summary>
            <param name="enterprise">The name of the enterprise.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner registration token for an enterprise.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsCreateOrganizationRegistrationToken(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner registration token for an organization.
            </summary>
            <param name="org">The name of the organization.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner registration token for an organization.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsCreateRepositoryRegistrationToken(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner registration token for a repository.
            </summary>
            <param name="owner">The owner of repo</param>
            <param name="repo">The name of repo</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner registration token for a repository.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsGetEnterpriseRunnerGroup(System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner groups for an enterprise.
            </summary>
            <param name="enterprise">The name of the enterprise.</param>
            <param name="runnerGroupId">Unique identifier of the self-hosted runner group.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner groups for an enterprise.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsGetOrganizationRunnerGroup(System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner groups for an organization.
            </summary>
            <param name="org">The name of the organization.</param>
            <param name="runnerGroupId">Unique identifier of the self-hosted runner group.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner groups for an organization.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListEnterpriseRunnerGroups(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner groups for an enterprise.
            </summary>
            <param name="enterprise">The name of the enterprise.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner groups for an enterprise.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListOrganizationRunnerGroups(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner groups for an organization.
            </summary>
            <param name="org">The name of the organization.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner groups for an organization.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListEnterpriseRunnerGroupOrganizations(System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner group organizations that belong to an enterprise.
            </summary>
            <param name="enterprise">The name of the enterprise.</param>
            <param name="runnerGroupId">The Id of the runner group.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner group organizations that belong to an enterprise.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsListOrganizationRunnerGroupRepositories(System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles the Actions self-hosted runner group repositories that belong to an organization.
            </summary>
            <param name="org">The name of the organization.</param>
            <param name="runnerGroupId">The Id of the runner group.</param>
            <returns>The <see cref="T:System.Uri"/> that handles the Actions self-hosted runner group repositories that belong to an organization.</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CopilotBillingLicense(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles adding or removing of copilot licenses for an organisation
            </summary>
            <param name="org">The name of the organization</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CopilotBillingSettings(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that handles reading copilot billing settings for an organization
            </summary>
            <param name="org">The name of the organization</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.CopilotAllocatedLicenses(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that allows for searching across all licenses for an organisation
            </summary>
            <param name="org"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.ApiUrls.ListArtifacts(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> that lists the artifacts for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="repository">The name of the repository</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.Artifact(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> for the specified artifact.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="repository">The name of the repository</param>
            <param name="artifactId">The id of the artifact</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.DownloadArtifact(System.String,System.String,System.Int64,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to download the specified artifact.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="repository">The name of the repository</param>
            <param name="artifactId">The id of the artifact</param>
            <param name="archiveFormat">The archive format e.g. zip</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ListWorkflowArtifacts(System.String,System.String,System.Int64)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to list the artifacts for a workflow.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="repository">The name of the repository</param>
            <param name="runId">The id of the workflow run</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.RepositoryBranchRename(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to rename a repository branch.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="repository">The name of the repository</param>
            <param name="branch">The name of the branch to rename</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsOrganizationOidcSubjectClaim(System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to get or set an organization OIDC subject claim.
            </summary>
            <param name="organization">The organization name</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.ActionsRepositoryOidcSubjectClaim(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to get or set a repository OIDC subject claim.
            </summary>
            <param name="owner">The account owner of the repository</param>
            <param name="repository">The name of the repository</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.AutolinksCreate(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to create an autolink
            </summary>
            <param name="owner">The account owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.AutolinksDelete(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to delete an autolink
            </summary>
            <param name="owner">The account owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="autolinkId">The unique identifier of the autolink</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.AutolinksGet(System.String,System.String,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Uri"/> to get an autolink
            </summary>
            <param name="owner">The account owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="autolinkId">The unique identifier of the autolink</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="M:Octokit.ApiUrls.AutolinksGetAll(System.String,System.String)">
            <summary>
             Returns the <see cref="T:System.Uri"/> to get a list of autolinks configured for the given repository
            </summary>
            <param name="owner">The account owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <returns>A Uri Instance</returns>
        </member>
        <member name="T:Octokit.AuthorizationExtensions">
            <summary>
            Represents operations to simplify triggering the authorization flow
            </summary>
        </member>
        <member name="M:Octokit.AuthorizationExtensions.GetOrCreateApplicationAuthentication(Octokit.IAuthorizationsClient,System.String,System.String,Octokit.NewAuthorization,System.Func{Octokit.TwoFactorRequiredException,System.Threading.Tasks.Task{Octokit.TwoFactorChallengeResult}})">
            <summary>
            This method will create a new authorization for the specified OAuth application, only if an authorization 
            for that application doesn’t already exist for the user. It returns the user’s token for the application
            if one exists. Otherwise, it creates a new one.
            </summary>
            <remarks>
            <para>
            This method allows the caller to provide a callback which is used to retrieve the two-factor code from
            the user. Typically the callback is used to show some user interface to the user.
            </para>
            <para>
            See <a href="http://developer.github.com/v3/oauth/#list-your-authorizations">API documentation</a> 
            for more details.
            </para>
            </remarks>
            <param name="authorizationsClient">The <see cref="T:Octokit.IAuthorizationsClient" /> this method extends</param>
            <param name="clientId">Client Id for the OAuth application that is requesting the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Defines the scopes and metadata for the token</param>
            <param name="twoFactorChallengeHandler">Callback used to retrieve the two-factor authentication code
            from the user</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Ensure">
            <summary>
              Ensure input parameters
            </summary>
        </member>
        <member name="M:Octokit.Ensure.ArgumentNotNull(System.Object,System.String)">
            <summary>
            Checks an argument to ensure it isn't null.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="M:Octokit.Ensure.ArgumentNotNullOrDefault``1(``0,System.String)">
            <summary>
            Checks an argument to ensure it isn't null or the default value.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="M:Octokit.Ensure.ArgumentNotNullOrEmptyString(System.String,System.String)">
            <summary>
            Checks a string argument to ensure it isn't null or empty.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="M:Octokit.Ensure.GreaterThanZero(System.TimeSpan,System.String)">
            <summary>
            Checks a timespan argument to ensure it is a positive value.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="M:Octokit.Ensure.GreaterThanZero(System.Int32,System.String)">
            <summary>
            Checks an integer argument to ensure it is a positive value.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="M:Octokit.Ensure.ArgumentNotNullOrEmptyEnumerable``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Checks an enumerable argument to ensure it isn't null or empty.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="M:Octokit.HttpExtensions.IsSuccessStatusCode(Octokit.IResponse)">
            <summary>
            Gets a value that indicates whether the HTTP response was successful.
            </summary>
        </member>
        <member name="T:Octokit.IApiPagination">
            <summary>
            Used to paginate through API response results.
            </summary>
            <remarks>
            This is meant to be internal, but I factored it out so we can change our mind more easily later.
            </remarks>
        </member>
        <member name="M:Octokit.IApiPagination.GetAllPages``1(System.Func{System.Threading.Tasks.Task{Octokit.IReadOnlyPagedCollection{``0}}},System.Uri)">
            <summary>
            Paginate a request to asynchronous fetch the results until no more are returned
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="getFirstPage">A function which generates the first request</param>
            <param name="uri">The original URI (used only for raising an exception)</param>
        </member>
        <member name="T:Octokit.IReadOnlyPagedCollection`1">
            <summary>
            Reflects a collection of data returned from an API that can be paged.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Octokit.IReadOnlyPagedCollection`1.GetNextPage">
            <summary>
            Returns the next page of items.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Octokit.Helpers.ReferenceExtensions">
            <summary>
            Represents operations to simplify working with references
            </summary>
        </member>
        <member name="M:Octokit.Helpers.ReferenceExtensions.CreateBranch(Octokit.IReferencesClient,System.String,System.String,System.String,Octokit.Reference)">
            <summary>
            Creates a branch, based off the branch specified.
            </summary>
            <param name="referencesClient">The <see cref="T:Octokit.IReferencesClient" /> this method extends</param>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="branchName">The new branch name</param>
            <param name="baseReference">The <see cref="T:Octokit.Reference" /> to base the branch from</param>
        </member>
        <member name="M:Octokit.Helpers.ReferenceExtensions.CreateBranch(Octokit.IReferencesClient,System.String,System.String,System.String)">
            <summary>
            Creates a branch, based off the master branch.
            </summary>
            <param name="referencesClient">The <see cref="T:Octokit.IReferencesClient" /> this method extends</param>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="branchName">The new branch name</param>
        </member>
        <member name="M:Octokit.Helpers.ReferenceExtensions.CreateBranch(Octokit.IReferencesClient,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a branch, based off the default branch.
            </summary>
            <param name="referencesClient">The <see cref="T:Octokit.IReferencesClient" /> this method extends</param>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="branchName">The new branch name</param>
            <param name="defaultBranchName">The repository's default branch name</param>
        </member>
        <member name="T:Octokit.Helpers.SerializeAsBase64Attribute">
            <summary>
            Attribute used to denote that a string property should be serialized as a base64 encoded string.
            </summary>
        </member>
        <member name="T:Octokit.Helpers.UnixTimestampExtensions">
            <summary>
            Extensions for converting between different time representations
            </summary>
        </member>
        <member name="M:Octokit.Helpers.UnixTimestampExtensions.FromUnixTime(System.Int64)">
            <summary>
            Convert a Unix tick to a <see cref="T:System.DateTimeOffset"/> with UTC offset
            </summary>
            <param name="unixTime">UTC tick</param>
        </member>
        <member name="M:Octokit.Helpers.UnixTimestampExtensions.ToUnixTime(System.DateTimeOffset)">
            <summary>
            Convert <see cref="T:System.DateTimeOffset"/> with UTC offset to a Unix tick
            </summary>
            <param name="date">Date Time with UTC offset</param>
        </member>
        <member name="T:Octokit.TwoFactorChallengeResult">
            <summary>
            Represents the response to a 2FA challenge from the API
            </summary>
        </member>
        <member name="F:Octokit.TwoFactorChallengeResult.RequestResendCode">
            <summary>
            Helper action for resending the 2FA code
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorChallengeResult.#ctor(System.String)">
            <summary>
            Construct an instance of TwoFactorChallengeResult
            </summary>
            <param name="authenticationCode"></param>
        </member>
        <member name="P:Octokit.TwoFactorChallengeResult.ResendCodeRequested">
            <summary>
            True if this request should resent an authentication code
            </summary>
        </member>
        <member name="P:Octokit.TwoFactorChallengeResult.AuthenticationCode">
            <summary>
            The user-specified authentication code
            </summary>
        </member>
        <member name="T:Octokit.UriExtensions">
            <summary>
            Extensions for working with Uris
            </summary>
        </member>
        <member name="M:Octokit.UriExtensions.StripRelativeUri(System.Uri)">
            <summary>
            Returns a Uri where any existing relative Uri component is stripped
            eg https://example.com/some/path becomes https://example.com
            </summary>
            <param name="uri">Base Uri</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.UriExtensions.ReplaceRelativeUri(System.Uri,System.Uri)">
            <summary>
            Returns a Uri where any existing relative Uri component is replaced with the respective value
            eg https://example.com/some/path becomes https://example.com/replacement/path
            </summary>
            <param name="uri">Base Uri</param>
            <param name="relativeUri">Relative Uri to add to the base Uri, replacing any existing relative Uri component</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.UriExtensions.ApplyParameters(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Merge a dictionary of values with an existing <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">Original request Uri</param>
            <param name="parameters">Collection of key-value pairs</param>
            <returns>Updated request Uri</returns>
        </member>
        <member name="T:Octokit.ApiConnection">
            <summary>
            A connection for making API requests against URI endpoints.
            Provides type-friendly convenience methods that wrap <see cref="T:Octokit.IConnection"/> methods.
            </summary>
        </member>
        <member name="M:Octokit.ApiConnection.#ctor(Octokit.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ApiConnection"/> class.
            </summary>
            <param name="connection">A connection for making HTTP requests</param>
        </member>
        <member name="M:Octokit.ApiConnection.#ctor(Octokit.IConnection,Octokit.IApiPagination)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ApiConnection"/> class.
            </summary>
            <param name="connection">A connection for making HTTP requests</param>
            <param name="pagination">A pagination for paging API responses</param>
        </member>
        <member name="P:Octokit.ApiConnection.Connection">
            <summary>
            The underlying connection.
            </summary>
        </member>
        <member name="M:Octokit.ApiConnection.Get``1(System.Uri)">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Func{System.Object,System.Object})">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="preprocessResponseBody">Function to preprocess HTTP response prior to deserialization (can be null)</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetHtml(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the HTML content of the API resource at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns>The API resource's HTML content.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetRaw(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the raw content of the API resource at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns>The API resource's raw content or <c>null</c> if the <paramref name="uri"/> points to a directory.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetRawStream(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.ApiConnection.GetAll``1(System.Uri)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetAll``1(System.Uri,Octokit.ApiOptions)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="options">Options for changing the API response</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetAll``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetAll``1(System.Uri,System.String)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetAll``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Octokit.ApiOptions)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <param name="options">Options for changing the API response</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetAll``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Post(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns><seealso cref="T:System.Net.HttpStatusCode"/>Representing the received HTTP response</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Post``1(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Post``1(System.Uri,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Post``1(System.Uri,System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Post``1(System.Uri,System.Object,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="contentType">Content type of the API request</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Post``1(System.Uri,System.Object,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="contentType">Content type of the API request</param>
            <param name="twoFactorAuthenticationCode">Two Factor Authentication Code</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Put(System.Uri)">
            <summary>
            Creates or replaces the API resource at the specified URI
            </summary>
            <param name="uri">URI of the API resource to put</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.Put(System.Uri,System.Object)">
            <summary>
            Creates or replaces the API resource at the specified URI
            </summary>
            <param name="uri">URI of the API resource to put</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.Put``1(System.Uri,System.Object)">
            <summary>
            Creates or replaces the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to create or replace</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Put``1(System.Uri,System.Object,System.String)">
            <summary>
            Creates or replaces the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to create or replace</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Put``1(System.Uri,System.Object,System.String,System.String)">
            <summary>
            Creates or replaces the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to create or replace</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Patch(System.Uri)">
            <summary>
            Updates the API resource at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to patch</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.Patch(System.Uri,System.String)">
            <summary>
            Updates the API resource at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to patch</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.Patch``1(System.Uri,System.Object)">
            <summary>
            Updates the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to update</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <returns>The updated API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Patch``1(System.Uri,System.Object,System.String)">
            <summary>
            Updates the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to update</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>The updated API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Delete(System.Uri)">
            <summary>
            Deletes the API object at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to delete</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.Delete(System.Uri,System.String)">
            <summary>
            Deletes the API object at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to delete</param>
            <param name="twoFactorAuthenticationCode">Two Factor Code</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.Delete(System.Uri,System.Object)">
            <summary>
            Deletes the API object at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to delete</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.Delete(System.Uri,System.Object,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accept response media type</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.ApiConnection.Delete``1(System.Uri,System.Object)">
            <summary>
            Performs an asynchronous HTTP DELETE request.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
        </member>
        <member name="M:Octokit.ApiConnection.Delete``1(System.Uri,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="accepts">Specifies accept response media type</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.ApiConnection.Delete``1(System.Uri,System.Object,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accept response media type</param>
        </member>
        <member name="M:Octokit.ApiConnection.GetQueuedOperation``1(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Executes a GET to the API object at the specified URI. This operation is appropriate for API calls which 
            queue long running calculations and return a collection of a resource.
            It expects the API to respond with an initial 202 Accepted, and queries again until a 200 OK is received.
            It returns an empty collection if it receives a 204 No Content response.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to update</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
            <returns>The updated API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="T:Octokit.ApiInfo">
            <summary>
            Extra information returned as part of each API response.
            </summary>
        </member>
        <member name="P:Octokit.ApiInfo.OauthScopes">
            <summary>
            Oauth scopes that were included in the token used to make the request.
            </summary>
        </member>
        <member name="P:Octokit.ApiInfo.AcceptedOauthScopes">
            <summary>
            Oauth scopes accepted for this particular call.
            </summary>
        </member>
        <member name="P:Octokit.ApiInfo.Etag">
            <summary>
            Etag
            </summary>
        </member>
        <member name="P:Octokit.ApiInfo.Links">
            <summary>
            Links to things like next/previous pages
            </summary>
        </member>
        <member name="P:Octokit.ApiInfo.RateLimit">
            <summary>
            Information about the API rate limit
            </summary>
        </member>
        <member name="P:Octokit.ApiInfo.ServerTimeDifference">
            <summary>
            The best-effort time difference between the server and the client.
            </summary>
            <remarks>
            If both the server and the client have reasonably accurate clocks,
            the value of this property will be close to <see cref="F:System.TimeSpan.Zero"/>.
            The actual value is sensitive to network transmission and processing 
            delays.
            </remarks>
        </member>
        <member name="M:Octokit.ApiInfo.Clone">
            <summary>
            Allows you to clone ApiInfo 
            </summary>
            <returns>A clone of <seealso cref="T:Octokit.ApiInfo"/></returns>
        </member>
        <member name="M:Octokit.AssignableExtensions.IsAssignableToGenericType(System.Type,System.Type)">
            <summary>
            Determines whether the <paramref name="genericType"/> is assignable from
            <paramref name="givenType"/> taking into account generic definitions
            </summary>
        </member>
        <member name="T:Octokit.Connection">
            <summary>
            A connection for making HTTP requests against URI endpoints.
            </summary>
        </member>
        <member name="M:Octokit.Connection.#ctor(Octokit.ProductHeaderValue)">
            <summary>
            Creates a new connection instance used to make requests of the GitHub API.
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
        </member>
        <member name="M:Octokit.Connection.#ctor(Octokit.ProductHeaderValue,Octokit.Internal.IHttpClient)">
            <summary>
            Creates a new connection instance used to make requests of the GitHub API.
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
            <param name="httpClient">
            The client to use for executing requests
            </param>
        </member>
        <member name="M:Octokit.Connection.#ctor(Octokit.ProductHeaderValue,System.Uri)">
            <summary>
            Creates a new connection instance used to make requests of the GitHub API.
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
            <param name="baseAddress">
            The address to point this client to such as https://api.github.com or the URL to a GitHub Enterprise
            instance</param>
        </member>
        <member name="M:Octokit.Connection.#ctor(Octokit.ProductHeaderValue,Octokit.ICredentialStore)">
            <summary>
            Creates a new connection instance used to make requests of the GitHub API.
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
            <param name="credentialStore">Provides credentials to the client when making requests</param>
        </member>
        <member name="M:Octokit.Connection.#ctor(Octokit.ProductHeaderValue,System.Uri,Octokit.ICredentialStore)">
            <summary>
            Creates a new connection instance used to make requests of the GitHub API.
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
            <param name="baseAddress">
            The address to point this client to such as https://api.github.com or the URL to a GitHub Enterprise
            instance</param>
            <param name="credentialStore">Provides credentials to the client when making requests</param>
        </member>
        <member name="M:Octokit.Connection.#ctor(Octokit.ProductHeaderValue,System.Uri,Octokit.ICredentialStore,Octokit.Internal.IHttpClient,Octokit.Internal.IJsonSerializer)">
            <summary>
            Creates a new connection instance used to make requests of the GitHub API.
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productInformation">
            The name (and optionally version) of the product using this library, the name of your GitHub organization, or your GitHub username (in that order of preference). This is sent to the server as part of
            the user agent for analytics purposes, and used by GitHub to contact you if there are problems.
            </param>
            <param name="baseAddress">
            The address to point this client to such as https://api.github.com or the URL to a GitHub Enterprise
            instance</param>
            <param name="credentialStore">Provides credentials to the client when making requests</param>
            <param name="httpClient">A raw <see cref="T:Octokit.Internal.IHttpClient"/> used to make requests</param>
            <param name="serializer">Class used to serialize and deserialize JSON requests</param>
        </member>
        <member name="M:Octokit.Connection.GetLastApiInfo">
            <summary>
            Gets the latest API Info - this will be null if no API calls have been made
            </summary>
            <returns><seealso cref="T:Octokit.ApiInfo"/> representing the information returned as part of an Api call</returns>
        </member>
        <member name="M:Octokit.Connection.GetHtml(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Performs an asynchronous HTTP GET request that expects a <seealso cref="T:Octokit.IResponse"/> containing HTML.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.Connection.GetRaw(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Performs an asynchronous HTTP GET request that expects a <seealso cref="T:Octokit.IResponse"/> containing raw data.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
            <remarks>The <see cref="P:Octokit.IResponse.Body"/> property will be <c>null</c> if the <paramref name="uri"/> points to a directory instead of a file</remarks>
        </member>
        <member name="M:Octokit.Connection.GetRaw(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.Connection.GetRawStream(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Octokit.Connection.Post(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous HTTP POST request.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.Connection.Post``1(System.Uri,System.Object,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <param name="contentType">Specifies the media type of the request body</param>
            <param name="twoFactorAuthenticationCode">Two Factor Authentication Code</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.Connection.Patch(System.Uri)">
            <summary>
            Performs an asynchronous HTTP PATCH request.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.Connection.Patch(System.Uri,System.String)">
            <summary>
            Performs an asynchronous HTTP PATCH request.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="accepts">Specifies accept response media type</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.Connection.Put(System.Uri)">
            <summary>
            Performs an asynchronous HTTP PUT request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.Connection.Put(System.Uri,System.Object)">
            <summary>
            Performs an asynchronous HTTP PUT request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.Connection.Delete(System.Uri)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.Connection.Delete(System.Uri,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="twoFactorAuthenticationCode">Two Factor Code</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.Connection.Delete(System.Uri,System.Object)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.Connection.Delete(System.Uri,System.Object,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accept response media type</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.Connection.Delete``1(System.Uri,System.Object)">
            <summary>
            Performs an asynchronous HTTP DELETE request.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
        </member>
        <member name="M:Octokit.Connection.Delete``1(System.Uri,System.Object,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accept response media type</param>
        </member>
        <member name="P:Octokit.Connection.BaseAddress">
            <summary>
            Base address for the connection.
            </summary>
        </member>
        <member name="P:Octokit.Connection.CredentialStore">
            <summary>
            Gets the <seealso cref="T:Octokit.ICredentialStore"/> used to provide credentials for the connection.
            </summary>
        </member>
        <member name="P:Octokit.Connection.Credentials">
            <summary>
            Gets or sets the credentials used by the connection.
            </summary>
            <remarks>
            You can use this property if you only have a single hard-coded credential. Otherwise, pass in an
            <see cref="T:Octokit.ICredentialStore"/> to the constructor.
            Setting this property will change the <see cref="T:Octokit.ICredentialStore"/> to use
            the default <see cref="T:Octokit.Internal.InMemoryCredentialStore"/> with just these credentials.
            </remarks>
        </member>
        <member name="P:Octokit.Connection.ResponseCache">
            <summary>
            Sets response cache used by the connection.
            </summary>
            <remarks>
            Setting this property will wrap existing <see cref="T:Octokit.Internal.IHttpClient"/> in <see cref="T:Octokit.Caching.CachingHttpClient"/>.
            </remarks>
        </member>
        <member name="M:Octokit.Connection.SetRequestTimeout(System.TimeSpan)">
            <summary>
            Sets the timeout for the connection between the client and the server.
            </summary>
            <param name="timeout">The Timeout value</param>
        </member>
        <member name="T:Octokit.IApiConnection">
            <summary>
            A connection for making API requests against URI endpoints.
            Provides type-friendly convenience methods that wrap <see cref="T:Octokit.IConnection"/> methods.
            </summary>
        </member>
        <member name="P:Octokit.IApiConnection.Connection">
            <summary>
            The underlying connection.
            </summary>
        </member>
        <member name="M:Octokit.IApiConnection.Get``1(System.Uri)">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.GetHtml(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the HTML content of the API resource at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns>The API resource's HTML content.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.GetRaw(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the raw content of the API resource at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns>The API resource's raw content or <c>null</c> if the <paramref name="uri"/> points to a directory.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.GetRawStream(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the raw stream of the API resource at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns>The API resource's raw stream or <c>null</c> if the <paramref name="uri"/> points to a directory.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.GetAll``1(System.Uri)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.GetAll``1(System.Uri,Octokit.ApiOptions)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="options">Options for changing the API response</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.GetAll``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.GetAll``1(System.Uri,System.String)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.GetAll``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Octokit.ApiOptions)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <param name="options">Options for changing the API response</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.GetAll``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.GetAll``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Octokit.ApiOptions)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="options">Options for changing the API response</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.GetAll``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Octokit.ApiOptions,System.Func{System.Object,System.Object})">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="options">Options for changing the API response</param>
            <param name="preprocessResponseBody">Function to preprocess HTTP response prior to deserialization (can be null)</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Post(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns><seealso cref="T:System.Net.HttpStatusCode"/>Representing the received HTTP response</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Post``1(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Post``1(System.Uri,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Post``1(System.Uri,System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Post``1(System.Uri,System.Object,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="contentType">Content type of the API request</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Post``1(System.Uri,System.Object,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="contentType">Content type of the API request</param>
            <param name="twoFactorAuthenticationCode">Two Factor Authentication Code</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Post``1(System.Uri,System.Object,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="contentType">Content type of the API request</param>
            <param name="timeout">Timeout for the request</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Put(System.Uri)">
            <summary>
            Creates or replaces the API resource at the specified URI
            </summary>
            <param name="uri">URI of the API resource to put</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.IApiConnection.Put(System.Uri,System.Object)">
            <summary>
            Creates or replaces the API resource at the specified URI
            </summary>
            <param name="uri">URI of the API resource to put</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.IApiConnection.Put``1(System.Uri,System.Object)">
            <summary>
            Creates or replaces the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to create or replace</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Put``1(System.Uri,System.Object,System.String)">
            <summary>
            Creates or replaces the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to create or replace</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Put``1(System.Uri,System.Object,System.String,System.String)">
            <summary>
            Creates or replaces the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to create or replace</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Patch(System.Uri)">
            <summary>
            Updates the API resource at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to patch</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.IApiConnection.Patch(System.Uri,System.String)">
            <summary>
            Updates the API resource at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to patch</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.IApiConnection.Patch``1(System.Uri,System.Object)">
            <summary>
            Updates the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to update</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <returns>The updated API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Patch``1(System.Uri,System.Object,System.String)">
            <summary>
            Updates the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to update</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>The updated API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.IApiConnection.Delete(System.Uri)">
            <summary>
            Deletes the API object at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to delete</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.IApiConnection.Delete(System.Uri,System.String)">
            <summary>
            Deletes the API object at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to delete</param>
            <param name="twoFactorAuthenticationCode">Two Factor Code</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.IApiConnection.Delete(System.Uri,System.Object)">
            <summary>
            Deletes the API object at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to delete</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.IApiConnection.Delete(System.Uri,System.Object,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accept response media type</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.IApiConnection.Delete``1(System.Uri,System.Object)">
            <summary>
            Performs an asynchronous HTTP DELETE request.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
        </member>
        <member name="M:Octokit.IApiConnection.Delete``1(System.Uri,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="accepts">Specifies accept response media type</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.IApiConnection.Delete``1(System.Uri,System.Object,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accept response media type</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.IApiConnection.GetQueuedOperation``1(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Executes a GET to the API object at the specified URI. This operation is appropriate for API calls which 
            queue long running calculations and return a collection of a resource.
            It expects the API to respond with an initial 202 Accepted, and queries again until a 200 OK is received.
            It returns an empty collection if it receives a 204 No Content response.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to update</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
            <returns>The updated API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="T:Octokit.IApiInfoProvider">
            <summary>
            Provides a property for the Last recorded API information
            </summary>
        </member>
        <member name="M:Octokit.IApiInfoProvider.GetLastApiInfo">
            <summary>
            Gets the latest API Info - this will be null if no API calls have been made
            </summary>
            <returns><seealso cref="T:Octokit.ApiInfo"/> representing the information returned as part of an API call</returns>
        </member>
        <member name="T:Octokit.IConnection">
            <summary>
            A connection for making HTTP requests against URI endpoints.
            </summary>
        </member>
        <member name="M:Octokit.IConnection.GetHtml(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Performs an asynchronous HTTP GET request that expects a <seealso cref="T:Octokit.IResponse"/> containing HTML.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.GetRaw(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Performs an asynchronous HTTP GET request that expects a <seealso cref="T:Octokit.IResponse"/> containing raw data.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
            <remarks>The <see cref="P:Octokit.IResponse.Body"/> property will be <c>null</c> if the <paramref name="uri"/> points to a directory instead of a file</remarks>
        </member>
        <member name="M:Octokit.IConnection.GetRaw(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.TimeSpan)">
            <summary>
            Performs an asynchronous HTTP GET request that expects a <seealso cref="T:Octokit.IResponse"/> containing raw data.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <param name="timeout">The Timeout value</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
            <remarks>The <see cref="P:Octokit.IResponse.Body"/> property will be <c>null</c> if the <paramref name="uri"/> points to a directory instead of a file</remarks>
        </member>
        <member name="M:Octokit.IConnection.GetRawStream(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Performs an asynchronous HTTP GET request that expects a <seealso cref="T:Octokit.IResponse"/> containing raw data.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
            <remarks>The <see cref="P:Octokit.IResponse.Body"/> property will be <c>null</c> if the <paramref name="uri"/> points to a directory instead of a file</remarks>
        </member>
        <member name="M:Octokit.IConnection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Performs an asynchronous HTTP GET request.
            Attempts to map the response to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Performs an asynchronous HTTP GET request.
            Attempts to map the response to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous HTTP GET request.
            Attempts to map the response to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <param name="cancellationToken">A token used to cancel the Get request</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Threading.CancellationToken,System.Func{System.Object,System.Object})">
            <summary>
            Performs an asynchronous HTTP GET request.
            Attempts to map the response to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <param name="cancellationToken">A token used to cancel the Get request</param>
            <param name="preprocessResponseBody">Function to preprocess HTTP response prior to deserialization (can be null)</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Get``1(System.Uri,System.TimeSpan)">
            <summary>
            Performs an asynchronous HTTP GET request.
            Attempts to map the response to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="timeout">Expiration time of the request</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Patch(System.Uri)">
            <summary>
            Performs an asynchronous HTTP PATCH request.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Patch(System.Uri,System.String)">
            <summary>
            Performs an asynchronous HTTP PATCH request.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Patch``1(System.Uri,System.Object)">
            <summary>
            Performs an asynchronous HTTP PATCH request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Patch``1(System.Uri,System.Object,System.String)">
            <summary>
            Performs an asynchronous HTTP PATCH request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Post(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous HTTP POST request.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.IConnection.Post(System.Uri,System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous HTTP POST request.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.IConnection.Post``1(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Post``1(System.Uri,System.Object,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <param name="contentType">Specifies the media type of the request body</param>
            <param name="parameters">Extra parameters for authentication.</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Post``1(System.Uri,System.Object,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <param name="contentType">Specifies the media type of the request body</param>
            <param name="twoFactorAuthenticationCode">Two Factor Authentication Code</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Post``1(System.Uri,System.Object,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <param name="contentType">Specifies the media type of the request body</param>
            <param name="timeout"></param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Post``1(System.Uri,System.Object,System.String,System.String,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <remarks>
            We have one case where we need to override the BaseAddress. This overload is for that case.
            https://developer.github.com/v3/oauth/#web-application-flow
            </remarks>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <param name="contentType">Specifies the media type of the request body</param>
            <param name="baseAddress">Allows overriding the base address for a post.</param>
            <param name="cancellationToken">An optional token to monitor for cancellation requests</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Put``1(System.Uri,System.Object)">
            <summary>
            Performs an asynchronous HTTP PUT request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The body of the request</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Put``1(System.Uri,System.Object,System.String)">
            <summary>
            Performs an asynchronous HTTP PUT request using the provided two factor authentication code.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <param name="twoFactorAuthenticationCode">Two factory authentication code to use</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Put``1(System.Uri,System.Object,System.String,System.String)">
            <summary>
            Performs an asynchronous HTTP PUT request using the provided two factor authentication code.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <param name="twoFactorAuthenticationCode">Two factory authentication code to use</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <returns><seealso cref="T:Octokit.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.IConnection.Put(System.Uri)">
            <summary>
            Performs an asynchronous HTTP PUT request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.IConnection.Put(System.Uri,System.Object)">
            <summary>
            Performs an asynchronous HTTP PUT request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.IConnection.Delete(System.Uri)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.IConnection.Delete(System.Uri,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="twoFactorAuthenticationCode">Two Factor Code</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.IConnection.Delete(System.Uri,System.Object)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.IConnection.Delete(System.Uri,System.Object,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accept response media type</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.IConnection.Delete``1(System.Uri,System.Object)">
            <summary>
            Performs an asynchronous HTTP DELETE request.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
        </member>
        <member name="M:Octokit.IConnection.Delete``1(System.Uri,System.Object,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accept response media type</param>
        </member>
        <member name="P:Octokit.IConnection.BaseAddress">
            <summary>
            Base address for the connection.
            </summary>
        </member>
        <member name="P:Octokit.IConnection.CredentialStore">
            <summary>
            Gets the <seealso cref="T:Octokit.ICredentialStore"/> used to provide credentials for the connection.
            </summary>
        </member>
        <member name="P:Octokit.IConnection.Credentials">
            <summary>
            Gets or sets the credentials used by the connection.
            </summary>
            <remarks>
            You can use this property if you only have a single hard-coded credential. Otherwise, pass in an
            <see cref="T:Octokit.ICredentialStore"/> to the constructor.
            Setting this property will change the <see cref="T:Octokit.ICredentialStore"/> to use
            the default <see cref="T:Octokit.Internal.InMemoryCredentialStore"/> with just these credentials.
            </remarks>
        </member>
        <member name="P:Octokit.IConnection.ResponseCache">
            <summary>
            Sets response cache used by the connection.
            </summary>
            <remarks>
            Setting this property will wrap existing <see cref="T:Octokit.Internal.IHttpClient"/> in <see cref="T:Octokit.Caching.CachingHttpClient"/>.
            </remarks>
        </member>
        <member name="M:Octokit.IConnection.SetRequestTimeout(System.TimeSpan)">
            <summary>
            Sets the timeout for the connection between the client and the server.
            </summary>
            <param name="timeout">The Timeout value</param>
        </member>
        <member name="T:Octokit.ICredentialStore">
            <summary>
            Abstraction for interacting with credentials
            </summary>
        </member>
        <member name="M:Octokit.ICredentialStore.GetCredentials">
            <summary>
            Retrieve the credentials from the underlying store
            </summary>
            <returns>A continuation containing credentials</returns>
        </member>
        <member name="T:Octokit.IApiResponse`1">
            <summary>
            A response from an API call that includes the deserialized object instance.
            </summary>
        </member>
        <member name="P:Octokit.IApiResponse`1.Body">
            <summary>
            Object deserialized from the JSON response body.
            </summary>
        </member>
        <member name="P:Octokit.IApiResponse`1.HttpResponse">
            <summary>
            The original non-deserialized http response.
            </summary>
        </member>
        <member name="T:Octokit.IResponse">
            <summary>
            Represents a generic HTTP response
            </summary>
        </member>
        <member name="P:Octokit.IResponse.Body">
            <summary>
            Raw response body. Typically a string, but when requesting images, or binary files, it will be a Stream.
            </summary>
        </member>
        <member name="P:Octokit.IResponse.Headers">
            <summary>
            Information about the API.
            </summary>
        </member>
        <member name="P:Octokit.IResponse.ApiInfo">
            <summary>
            Information about the API response parsed from the response headers.
            </summary>
        </member>
        <member name="P:Octokit.IResponse.StatusCode">
            <summary>
            The response status code.
            </summary>
        </member>
        <member name="P:Octokit.IResponse.ContentType">
            <summary>
            The content type of the response.
            </summary>
        </member>
        <member name="T:Octokit.ProductHeaderValue">
            <summary>
            Represents a product header value. This is used to generate the User Agent string sent with each request. The
            name used should represent the product, the GitHub Organization, or the GitHub username that's using Octokit.net (in that order of preference).
            </summary>
            <remarks>
            This class is a wrapper around <seealso href="https://msdn.microsoft.com/en-us/library/system.net.http.headers.productheadervalue(v=vs.118).aspx"/>
            so that consumers of Octokit.net would not have to add a reference to the System.Net.Http.Headers namespace.
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
        </member>
        <member name="M:Octokit.ProductHeaderValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ProductHeaderValue"/> class.
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="name">The name of the product, the GitHub Organization, or the GitHub Username (in that order of preference) that's using Octokit</param>
        </member>
        <member name="M:Octokit.ProductHeaderValue.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ProductHeaderValue"/> class.
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="name">The name of the product, the GitHub Organization, or the GitHub Username (in that order of preference) that's using Octokit</param>
            <param name="version">The version of the product that's using Octokit</param>
        </member>
        <member name="M:Octokit.ProductHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ProductHeaderValue"/> class.
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
            <param name="productHeader">The <see cref="T:System.Net.Http.Headers.ProductHeaderValue"/>.</param>
        </member>
        <member name="P:Octokit.ProductHeaderValue.Name">
            <summary>
            The name of the product, the GitHub Organization, or the GitHub Username that's using Octokit (in that order of preference)
            </summary>
            <remarks>
            See more information regarding User-Agent requirements here: https://developer.github.com/v3/#user-agent-required
            </remarks>
        </member>
        <member name="P:Octokit.ProductHeaderValue.Version">
            <summary>
            The version of the product.
            </summary>
        </member>
        <member name="M:Octokit.ProductHeaderValue.Parse(System.String)">
            <summary>
            Parses a string in the format "foo" or "foo/1.0" and returns the corresponding
            <see cref="T:Octokit.ProductHeaderValue" /> instance.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Octokit.ProductHeaderValue.TryParse(System.String,Octokit.ProductHeaderValue@)">
            <summary>
            Parses a string in the format "foo" or "foo/1.0" and returns the corresponding
            <see cref="T:Octokit.ProductHeaderValue" /> instance via an out parameter.
            </summary>
            <param name="input">The input.</param>
            <param name="parsedValue">The parsed value.</param>
        </member>
        <member name="P:Octokit.RateLimit.Limit">
            <summary>
            The maximum number of requests that the consumer is permitted to make per hour.
            </summary>
        </member>
        <member name="P:Octokit.RateLimit.Remaining">
            <summary>
            The number of requests remaining in the current rate limit window.
            </summary>
        </member>
        <member name="P:Octokit.RateLimit.Reset">
            <summary>
            The date and time at which the current rate limit window resets
            </summary>
        </member>
        <member name="P:Octokit.RateLimit.ResetAsUtcEpochSeconds">
            <summary>
            The date and time at which the current rate limit window resets - in UTC epoch seconds
            </summary>
        </member>
        <member name="M:Octokit.RateLimit.Clone">
            <summary>
            Allows you to clone RateLimit
            </summary>
            <returns>A clone of <seealso cref="T:Octokit.RateLimit"/></returns>
        </member>
        <member name="T:Octokit.RequestBody">
            <summary>
            Container for the static <see cref="F:Octokit.RequestBody.Empty"/> method that represents an
            intentional empty request body to avoid overloading <code>null</code>.
            </summary>
        </member>
        <member name="T:Octokit.IGitHubClient">
            <summary>
            A Client for the GitHub API v3. You can read more about the API here: http://developer.github.com.
            </summary>
        </member>
        <member name="M:Octokit.IGitHubClient.SetRequestTimeout(System.TimeSpan)">
            <summary>
            Sets the timeout for the connection between the client and the server.
            GitHub will terminate the request if it takes more than 10 seconds to process the request
            Useful to set a specific timeout for lengthy operations, such as uploading release assets
            </summary>
            <remarks>
            See more information here: https://technet.microsoft.com/library/system.net.http.httpclient.timeout(v=vs.110).aspx
            </remarks>
            <param name="timeout">The Timeout value</param>
        </member>
        <member name="P:Octokit.IGitHubClient.Connection">
            <summary>
            Provides a client connection to make rest requests to HTTP endpoints.
            </summary>
        </member>
        <member name="P:Octokit.IGitHubClient.Authorization">
            <summary>
            Access GitHub's Authorization API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/oauth_authorizations/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Activity">
            <summary>
            Access GitHub's Activity API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/activity/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Actions">
            <summary>
            Access GitHub's Actions API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/actions/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.GitHubApps">
            <summary>
            Access GitHub's Application API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/apps/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Issue">
            <summary>
            Access GitHub's Issue API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/issues/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Migration">
            <summary>
            Access GitHub's Migration API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/migration/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Miscellaneous">
            <summary>
            Access GitHub's Miscellaneous API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/misc/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Oauth">
            <summary>
            Access GitHub's OAuth API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/oauth/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Organization">
            <summary>
            Access GitHub's Organizations API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/orgs/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Packages">
            <summary>
            Access GitHub's Pacakges API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/packages
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.PullRequest">
            <summary>
            Access GitHub's Pull Requests API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/pulls/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Repository">
            <summary>
            Access GitHub's Repositories API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Gist">
            <summary>
            Access GitHub's Gists API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/gists/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.User">
            <summary>
            Access GitHub's Users API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/users/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Git">
            <summary>
            Access GitHub's Git Data API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/git/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Search">
            <summary>
            Access GitHub's Search API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/search/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Enterprise">
            <summary>
            Access GitHub's Enterprise API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/enterprise/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Reaction">
            <summary>
            Access GitHub's Reactions API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Check">
            <summary>
            Access GitHub's Checks API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/checks/
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Meta">
            <summary>
            Access GitHub's Meta API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/meta
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.RateLimit">
            <summary>
            Access GitHub's Rate Limit API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/rate-limit
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Markdown">
            <summary>
            Access GitHub's Markdown API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/markdown
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.GitIgnore">
            <summary>
            Access GitHub's Git Ignore API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/gitignore
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Licenses">
            <summary>
            Access GitHub's Licenses API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://docs.github.com/rest/licenses
            </remarks>
        </member>
        <member name="P:Octokit.IGitHubClient.Copilot">
            <summary>
            Access to the GitHub Copilot for Business API
            </summary>
        </member>
        <member name="T:Octokit.AuthorAssociation">
            <summary>
            States of a Team/Organization Membership
            </summary>
        </member>
        <member name="F:Octokit.AuthorAssociation.Collaborator">
            <summary>
            Author has been invited to collaborate on the repository.
            </summary>
        </member>
        <member name="F:Octokit.AuthorAssociation.Contributor">
            <summary>
            Author has previously committed to the repository.
            </summary>
        </member>
        <member name="F:Octokit.AuthorAssociation.FirstTimer">
            <summary>
            Author has not previously committed to GitHub.
            </summary>
        </member>
        <member name="F:Octokit.AuthorAssociation.FirstTimeContributor">
            <summary>
            Author has not previously committed to the repository.
            </summary>
        </member>
        <member name="F:Octokit.AuthorAssociation.Member">
            <summary>
            Author is a member of the organization that owns the repository.
            </summary>
        </member>
        <member name="F:Octokit.AuthorAssociation.Owner">
            <summary>
            Author is the owner of the repository. 
            </summary>
        </member>
        <member name="F:Octokit.AuthorAssociation.None">
            <summary>
            Author has no association with the repository.
            </summary>
        </member>
        <member name="T:Octokit.CheckSuitePreferenceAutoTrigger">
            <summary>
            Enables or disables automatic creation of CheckSuite events upon pushes to the repository
            </summary>
        </member>
        <member name="M:Octokit.CheckSuitePreferenceAutoTrigger.#ctor(System.Int64,System.Boolean)">
            <summary>
            Enables or disables automatic creation of CheckSuite events upon pushes to the repository
            </summary>
            <param name="appId">The Id of the GitHub App (required)</param>
            <param name="setting">Set to true to enable automatic creation of CheckSuite events upon pushes to the repository, or false to disable them (required)</param>
        </member>
        <member name="P:Octokit.CheckSuitePreferenceAutoTrigger.AppId">
            <summary>
            The Id of the GitHub App
            </summary>
        </member>
        <member name="P:Octokit.CheckSuitePreferenceAutoTrigger.Setting">
            <summary>
            Set to true to enable automatic creation of CheckSuite events upon pushes to the repository, or false to disable them
            </summary>
        </member>
        <member name="T:Octokit.CheckSuitePreferences">
            <summary>
            Check Suite preferences
            </summary>
        </member>
        <member name="M:Octokit.CheckSuitePreferences.#ctor(System.Collections.Generic.IReadOnlyList{Octokit.CheckSuitePreferenceAutoTrigger})">
            <summary>
            Check Suite preferences
            </summary>
            <param name="autoTriggerChecks">Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default</param>
        </member>
        <member name="P:Octokit.CheckSuitePreferences.AutoTriggerChecks">
            <summary>
            Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default
            </summary>
        </member>
        <member name="T:Octokit.Committer">
            <summary>
            Represents the author or committer to a Git commit. This is the information stored in Git and should not be
            confused with GitHub account information.
            </summary>
        </member>
        <member name="M:Octokit.Committer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.Committer"/> class.
            </summary>
        </member>
        <member name="M:Octokit.Committer.#ctor(System.String,System.String,System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.Committer"/> class.
            </summary>
            <param name="name">The full name of the author or committer.</param>
            <param name="email">The email.</param>
            <param name="date">The date.</param>
        </member>
        <member name="M:Octokit.Committer.#ctor(System.String,System.String,System.String,System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.Committer"/> class.
            </summary>
            <param name="nodeId">The GraphQL Node Id</param>
            <param name="name">The full name of the author or committer.</param>
            <param name="email">The email.</param>
            <param name="date">The date.</param>
        </member>
        <member name="P:Octokit.Committer.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Committer.Name">
            <summary>
            Gets the name of the author or committer.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Octokit.Committer.Email">
            <summary>
            Gets the email of the author or committer.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Octokit.Committer.Date">
            <summary>
            Gets the date of the author or contributor's contributions.
            </summary>
            <value>
            The date.
            </value>
        </member>
        <member name="T:Octokit.LockReason">
            <summary>
            The possible reasons that an issue or pull request was locked.
            </summary>
        </member>
        <member name="F:Octokit.PackageType.Npm">
            <summary>
            Npm repository packages
            </summary>
        </member>
        <member name="F:Octokit.PackageType.Maven">
            <summary>
            Gradle registry packages
            </summary>
        </member>
        <member name="F:Octokit.PackageType.RubyGems">
            <summary>
            RubyGems packages
            </summary>
        </member>
        <member name="F:Octokit.PackageType.Docker">
            <summary>
            Docker container registry packages
            </summary>
        </member>
        <member name="F:Octokit.PackageType.Nuget">
            <summary>
            Nuget registry packages
            </summary>
        </member>
        <member name="F:Octokit.PackageType.Container">
            <summary>
            Container registry packages
            </summary>
        </member>
        <member name="F:Octokit.PackageVersionState.Active">
            <summary>
            Package version which is active
            </summary>
        </member>
        <member name="F:Octokit.PackageVersionState.Deleted">
            <summary>
            Package version which is deleted
            </summary>
        </member>
        <member name="F:Octokit.PackageVisibility.Public">
            <summary>
            Only public packages
            </summary>
        </member>
        <member name="F:Octokit.PackageVisibility.Private">
            <summary>
            Only private packages
            </summary>
        </member>
        <member name="F:Octokit.PackageVisibility.Internal">
            <summary>
            Only supported by container package types, otherwise the same as private
            </summary>
        </member>
        <member name="T:Octokit.TeamPermissionLegacy">
            <summary>
            The permission to grant the team on this repository(Legacy).
            </summary>
        </member>
        <member name="T:Octokit.TeamPermission">
            <summary>
            Deprecated. The permission that new repositories will be added to the team with when none is specified
            Default: pull
            Can be one of: pull, push
            </summary>
        </member>
        <member name="F:Octokit.TeamPermission.Pull">
            <summary>
            team members can pull, but not push to these repositories
            </summary>
        </member>
        <member name="F:Octokit.TeamPermission.Push">
            <summary>
            team members can pull and push to these repositories
            </summary>
        </member>
        <member name="T:Octokit.InvitationPermissionType">
            <summary>
            The permission associated with the invitation for a collaborator in a repository
            </summary>
        </member>
        <member name="T:Octokit.TeamRepositoryPermissions">
            <summary>
            Object for team repository permissions
            </summary>
        </member>
        <member name="P:Octokit.TeamRepositoryPermissions.Pull">
            <summary>
            Can read and clone repository.
            Can also open and comment on issues and pull requests.
            Required
            </summary>
        </member>
        <member name="P:Octokit.TeamRepositoryPermissions.Triage">
            <summary>
            Can read and clone repository.
            Can also manage issues and pull requests.
            Required
            </summary>
        </member>
        <member name="P:Octokit.TeamRepositoryPermissions.Push">
            <summary>
            Can read, clone, and push to repository.
            Can also manage issues and pull requests.
            Required
            </summary>
        </member>
        <member name="P:Octokit.TeamRepositoryPermissions.Maintain">
            <summary>
            Can read, clone, and push to repository.
            They can also manage issues, pull requests, and some repository settings.
            Required
            </summary>
        </member>
        <member name="P:Octokit.TeamRepositoryPermissions.Admin">
            <summary>
            Can read, clone, and push to repository.
            Can also manage issues, pull requests, and repository settings, including adding collaborators.
            Required
            </summary>
        </member>
        <member name="T:Octokit.CollaboratorPermissions">
            <summary>
            Object for collaborator permissions
            </summary>
        </member>
        <member name="P:Octokit.ApiOptions.StartPage">
            <summary>
            Specify the start page for pagination actions
            </summary>
            <remarks>
            Page numbering is 1-based on the server
            </remarks>
        </member>
        <member name="P:Octokit.ApiOptions.PageCount">
            <summary>
            Specify the number of pages to return
            </summary>
        </member>
        <member name="P:Octokit.ApiOptions.PageSize">
            <summary>
            Specify the number of results to return for each page
            </summary>
            <remarks>
            Results returned may be less than this total if you reach the final page of results
            </remarks>
        </member>
        <member name="T:Octokit.AssigneesUpdate">
            <summary>
            Used to add assignees to an issue.
            </summary>
            <remarks>
            API: https://developer.github.com/v3/git/commits/#create-a-commit
            </remarks>
        </member>
        <member name="T:Octokit.AuthorizationUpdate">
            <summary>
            Used to create a new authorization.
            </summary>
        </member>
        <member name="P:Octokit.AuthorizationUpdate.Scopes">
            <summary>
            Replaces the authorization scopes with this list.
            </summary>
        </member>
        <member name="P:Octokit.AuthorizationUpdate.AddScopes">
            <summary>
            A list of scopes to add to this authorization.
            </summary>
        </member>
        <member name="P:Octokit.AuthorizationUpdate.RemoveScopes">
            <summary>
            A list of scopes to remove from this authorization.
            </summary>
        </member>
        <member name="P:Octokit.AuthorizationUpdate.Note">
            <summary>
            An optional note to remind you what the OAuth token is for.
            </summary>
        </member>
        <member name="P:Octokit.AuthorizationUpdate.NoteUrl">
            <summary>
            An optional URL to remind you what app the OAuth token is for.
            </summary>
        </member>
        <member name="P:Octokit.AuthorizationUpdate.Fingerprint">
            <summary>
            Optional parameter that allows an OAuth application to create multiple authorizations for a single user
            </summary>
        </member>
        <member name="T:Octokit.AutolinkRequest">
            <summary>
            Represents a repository Autolink object.
            </summary>
        </member>
        <member name="P:Octokit.AutolinkRequest.KeyPrefix">
            <summary>
            This prefix appended by certain characters will generate a link any time it is found in an issue, pull request, or commit.
            </summary>
        </member>
        <member name="P:Octokit.AutolinkRequest.UrlTemplate">
            <summary>
            The URL must contain &lt;num&gt; for the reference number. &lt;num&gt; matches different characters depending on the value of is_alphanumeric.
            </summary>
        </member>
        <member name="P:Octokit.AutolinkRequest.IsAlphanumeric">
            <summary>
            Whether this autolink reference matches alphanumeric characters. If true, the &lt;num&gt; parameter of the url_template matches alphanumeric characters A-Z (case insensitive), 0-9, and -. If false, this autolink reference only matches numeric characters.
            </summary>
        </member>
        <member name="T:Octokit.BaseSearchRequest">
            <summary>
            Base class for searching issues/code/users/repos
            </summary>
        </member>
        <member name="M:Octokit.BaseSearchRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.BaseSearchRequest"/> class.
            </summary>
        </member>
        <member name="M:Octokit.BaseSearchRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.BaseSearchRequest"/> class.
            </summary>
            <param name="term">The term.</param>
        </member>
        <member name="P:Octokit.BaseSearchRequest.Term">
            <summary>
            The search term
            </summary>
        </member>
        <member name="P:Octokit.BaseSearchRequest.Sort">
            <summary>
            The sort field
            </summary>
        </member>
        <member name="P:Octokit.BaseSearchRequest.SortOrder">
            <summary>
            Gets the sort order as a properly formatted lowercased query string parameter.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="P:Octokit.BaseSearchRequest.Order">
            <summary>
            Optional Sort order if sort parameter is provided. One of asc or desc; the default is desc.
            </summary>
        </member>
        <member name="P:Octokit.BaseSearchRequest.Page">
            <summary>
            Page of paginated results
            </summary>
        </member>
        <member name="P:Octokit.BaseSearchRequest.PerPage">
            <summary>
            Number of items per page
            </summary>
        </member>
        <member name="M:Octokit.BaseSearchRequest.MergedQualifiers">
            <summary>
            All qualifiers that are used for this search
            </summary>
        </member>
        <member name="P:Octokit.BaseSearchRequest.TermAndQualifiers">
            <summary>
            Add qualifiers onto the search term
            </summary>
        </member>
        <member name="M:Octokit.BaseSearchRequest.AdditionalParameters">
            <summary>
            Any additional parameters required by the derived class
            </summary>
        </member>
        <member name="P:Octokit.BaseSearchRequest.Parameters">
            <summary>
            Get the query parameters that will be appending onto the search
            </summary>
        </member>
        <member name="T:Octokit.BodyWrapper">
            <summary>
            Wraps a string for the body of a request.
            </summary>
        </member>
        <member name="M:Octokit.BodyWrapper.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.BodyWrapper"/> class.
            </summary>
            <param name="body">The body.</param>
        </member>
        <member name="P:Octokit.BodyWrapper.Body">
            <summary>
            Gets the body.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="T:Octokit.BranchProtectionSettingsUpdate">
            <summary>
            Specifies the requested settings for branch protection
            </summary>
            <remarks>
            Note: this is a PREVIEW api: https://developer.github.com/changes/2016-06-27-protected-branches-api-update/
            </remarks>
        </member>
        <member name="M:Octokit.BranchProtectionSettingsUpdate.#ctor(Octokit.BranchProtectionRequiredStatusChecksUpdate)">
            <summary>
            Create a BranchProtection update request
            </summary>
            <param name="requiredStatusChecks">Specifies the requested status check settings. Pass null to disable status checks</param>
        </member>
        <member name="M:Octokit.BranchProtectionSettingsUpdate.#ctor(Octokit.BranchProtectionRequiredReviewsUpdate)">
            <summary>
            Create a BranchProtection update request
            </summary>
            <param name="requiredPullRequestReviews">Specifies if reviews are required to merge the pull request. Pass null to disable restrictions</param>
        </member>
        <member name="M:Octokit.BranchProtectionSettingsUpdate.#ctor(Octokit.BranchProtectionPushRestrictionsUpdate)">
            <summary>
            Create a BranchProtection update request
            </summary>
            <param name="restrictions">Specifies the requested push access restrictions (applies only to Organization owned repositories). Pass null to disable push access restrictions</param>
        </member>
        <member name="M:Octokit.BranchProtectionSettingsUpdate.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Create a BranchProtection update request
            </summary>
            <param name="enforceAdmins">Specifies whether the protections applied to this branch also apply to repository admins</param>
            <param name="lockBranch">Optionally specfies that the branch should be read-only.</param>
        </member>
        <member name="M:Octokit.BranchProtectionSettingsUpdate.#ctor(Octokit.BranchProtectionRequiredStatusChecksUpdate,Octokit.BranchProtectionRequiredReviewsUpdate,System.Boolean,System.Boolean)">
            <summary>
            Create a BranchProtection update request
            </summary>
            <param name="requiredStatusChecks">Specifies the requested status check settings. Pass null to disable status checks</param>
            <param name="requiredPullRequestReviews">Specifies if reviews are required to merge the pull request. Pass null to disable required reviews</param>
            <param name="enforceAdmins">Specifies whether the protections applied to this branch also apply to repository admins</param>
            <param name="lockBranch">Optionally specfies that the branch should be read-only.</param>
        </member>
        <member name="M:Octokit.BranchProtectionSettingsUpdate.#ctor(Octokit.BranchProtectionRequiredStatusChecksUpdate,Octokit.BranchProtectionRequiredReviewsUpdate,Octokit.BranchProtectionPushRestrictionsUpdate,System.Boolean,System.Boolean)">
            <summary>
            Create a BranchProtection update request
            </summary>
            <param name="requiredStatusChecks">Specifies the requested status check settings. Pass null to disable status checks</param>
            <param name="requiredPullRequestReviews">Specifies if reviews are required to merge the pull request. Pass null to disable required reviews</param>
            <param name="restrictions">Specifies the requested push access restrictions (applies only to Organization owned repositories). Pass null to disable push access restrictions</param>
            <param name="enforceAdmins">Specifies whether the protections applied to this branch also apply to repository admins</param>
            <param name="lockBranch">Optionally specfies that the branch should be read-only.</param>
        </member>
        <member name="M:Octokit.BranchProtectionSettingsUpdate.#ctor(Octokit.BranchProtectionRequiredStatusChecksUpdate,Octokit.BranchProtectionRequiredReviewsUpdate,Octokit.BranchProtectionPushRestrictionsUpdate,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Boolean},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create a BranchProtection update request
            </summary>
            <param name="requiredStatusChecks">Specifies the requested status check settings. Pass null to disable status checks</param>
            <param name="requiredPullRequestReviews">Specifies if reviews are required to merge the pull request. Pass null to disable required reviews</param>
            <param name="restrictions">Specifies the requested push access restrictions (applies only to Organization owned repositories). Pass null to disable push access restrictions</param>
            <param name="requiredSignatures">Specifies whether commits to a branch are required to be signed by gpg keys</param>
            <param name="enforceAdmins">Specifies whether the protections applied to this branch also apply to repository admins</param>
            <param name="requiredLinearHistory">Enforces a linear commit Git history</param>
            <param name="allowForcePushes">Permits force pushes to the protected branch</param>
            <param name="allowDeletions">Allows deletion of the protected branch</param>
            <param name="blockCreations">The restrictions branch protection settings will also block pushes which create new branches</param>
            <param name="requiredConversationResolution">Requires all conversations on code to be resolved before a pull request can be merged</param>
            <param name="lockBranch">Optionally specfies that the branch should be read-only.</param>
        </member>
        <member name="P:Octokit.BranchProtectionSettingsUpdate.RequiredStatusChecks">
            <summary>
            Status check settings for the protected branch
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettingsUpdate.RequiredPullRequestReviews">
            <summary>
            Required Pull Request review settings for the protected branch
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettingsUpdate.Restrictions">
            <summary>
            Push access restrictions for the protected branch
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettingsUpdate.RequiredSignatures">
            <summary>
            Specifies whether the signed commits are required for this branch
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettingsUpdate.EnforceAdmins">
            <summary>
            Specifies whether the protections applied to this branch also apply to repository admins
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettingsUpdate.LockBranch">
            <summary>
            Specifies whether this branch should be read-only.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettingsUpdate.RequiredLinearHistory">
            <summary>
            Enforces a linear commit Git history. Default is false.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettingsUpdate.AllowForcePushes">
            <summary>
            Permits force pushes to the protected branch by anyone with write access to the repository. Default is false.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettingsUpdate.AllowDeletions">
            <summary>
            Allows deletion of the protected branch by anyone with write access to the repository. Default is false.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettingsUpdate.BlockCreations">
            <summary>
            If set to true, the restrictions branch protection settings which limits who can push will also block pushes which create new branches, unless the push is initiated by a user, team, or app which has the ability to push. Default is false.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettingsUpdate.RequiredConversationResolution">
            <summary>
            Requires all conversations on code to be resolved before a pull request can be merged. Default is false.
            </summary>
        </member>
        <member name="T:Octokit.BranchProtectionRequiredStatusChecksUpdate">
            <summary>
            Specifies settings for status checks which must pass before branches can be merged into the protected branch
            </summary>
        </member>
        <member name="M:Octokit.BranchProtectionRequiredStatusChecksUpdate.#ctor(System.Boolean,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Status check settings for branch protection
            </summary>
            <param name="strict">Require branches to be up to date before merging</param>
            <param name="contexts">Require status checks to pass before merging</param>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredStatusChecksUpdate.Strict">
            <summary>
            Require branches to be up to date before merging
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredStatusChecksUpdate.Contexts">
            <summary>
            Require status checks to pass before merging
            </summary>
        </member>
        <member name="T:Octokit.BranchProtectionPushRestrictionsUpdate">
            <summary>
            Specifies teams and/or people allowed to push to the protected branch. Required status checks will still prevent these people from merging if the checks fail
            </summary>
        </member>
        <member name="M:Octokit.BranchProtectionPushRestrictionsUpdate.#ctor">
            <summary>
            Specify only administrators are allowed to push to this branch. Required status checks will still prevent these people from merging if the checks fail
            </summary>
        </member>
        <member name="M:Octokit.BranchProtectionPushRestrictionsUpdate.#ctor(Octokit.BranchProtectionTeamCollection)">
            <summary>
            Specify teams (in addition to Administrators) allowed to push to this branch. Required status checks will still prevent these people from merging if the checks fail
            </summary>
            <param name="teams">List of Team slugs allowed to push to this branch</param>
        </member>
        <member name="M:Octokit.BranchProtectionPushRestrictionsUpdate.#ctor(Octokit.BranchProtectionUserCollection)">
            <summary>
            Specify people (in addition to Administrators) allowed to push to this branch. Required status checks will still prevent these people from merging if the checks fail
            </summary>
            <param name="users">List of User logins allowed to push to this branch</param>
        </member>
        <member name="M:Octokit.BranchProtectionPushRestrictionsUpdate.#ctor(Octokit.BranchProtectionTeamCollection,Octokit.BranchProtectionUserCollection)">
            <summary>
            Specify teams and/or people (in addition to Administrators) allowed to push to this branch. Required status checks will still prevent these people from merging if the checks fail
            </summary>
            <param name="teams">List of Team slugs allowed to push to this branch</param>
            <param name="users">List of User logins allowed to push to this branch</param>
        </member>
        <member name="P:Octokit.BranchProtectionPushRestrictionsUpdate.Teams">
            <summary>
            List of Team slugs allowed to push to this branch
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionPushRestrictionsUpdate.Users">
            <summary>
            List of User logins allowed to push to this branch
            </summary>
        </member>
        <member name="T:Octokit.BranchProtectionRequiredReviewsUpdate">
            <summary>
            Specifies settings for requiring pull request reviews before merging a pull request.
            </summary>
        </member>
        <member name="M:Octokit.BranchProtectionRequiredReviewsUpdate.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Settings for requiring reviews before a pull request can be merged.
            </summary>
            <param name="dismissStaleReviews">Dismiss approved reviews automatically when a new commit is pushed.</param>
            <param name="requireCodeOwnerReviews">Blocks merge until code owners have reviewed.</param>
            <param name="requiredApprovingReviewCount">Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.</param>
            <param name="requireLastPushApproval">Whether the most recent push must be approved by someone other than the person who pushed it. Default: false.</param>
        </member>
        <member name="M:Octokit.BranchProtectionRequiredReviewsUpdate.#ctor(Octokit.BranchProtectionRequiredReviewsDismissalRestrictionsUpdate,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Settings for requiring reviews before a pull request can be merged.
            </summary>
            <param name="dismissalRestrictions">Specify which users and teams can dismiss pull request reviews (applies only to Organization owned repositories).</param>
            <param name="dismissStaleReviews">Dismiss approved reviews automatically when a new commit is pushed.</param>
            <param name="requireCodeOwnerReviews">Blocks merge until code owners have reviewed.</param>
            <param name="requiredApprovingReviewCount">Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.</param>
            <param name="requireLastPushApproval">Whether the most recent push must be approved by someone other than the person who pushed it. Default: false.</param>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviewsUpdate.DismissalRestrictions">
            <summary>
            Specify which users and teams can dismiss pull request reviews.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviewsUpdate.DismissStaleReviews">
            <summary>
            Dismiss approved reviews automatically when a new commit is pushed.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviewsUpdate.RequireCodeOwnerReviews">
            <summary>
            Blocks merge until code owners have reviewed.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviewsUpdate.RequiredApprovingReviewCount">
            <summary>
            Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviewsUpdate.RequireLastPushApproval">
            <summary>
            Whether the most recent push must be approved by someone other than the person who pushed it. Default: false
            </summary>
        </member>
        <member name="T:Octokit.BranchProtectionRequiredReviewsDismissalRestrictionsUpdate">
            <summary>
            Specifies whether review dismissal for the protected branch will be restricted to Admins, specified Teams/Users or unrestricted
            </summary>
        </member>
        <member name="M:Octokit.BranchProtectionRequiredReviewsDismissalRestrictionsUpdate.#ctor(System.Boolean)">
            <summary>
            Specify whether dismissing reviews is restricted or not
            </summary>
            <param name="enabled">True to restrict review dismissal to Administrators, false to disable restrictions</param>
        </member>
        <member name="M:Octokit.BranchProtectionRequiredReviewsDismissalRestrictionsUpdate.#ctor(Octokit.BranchProtectionTeamCollection)">
            <summary>
            Restrict dismissing reviews to the specified teams (in addition to Administrators).
            </summary>
            <param name="teams">List of Team slugs allowed to dismiss reviews</param>
        </member>
        <member name="M:Octokit.BranchProtectionRequiredReviewsDismissalRestrictionsUpdate.#ctor(Octokit.BranchProtectionUserCollection)">
            <summary>
            Restrict dismissing reviews to the specified people (in addition to Administrators).
            </summary>
            <param name="users">List of User logins allowed to dismiss reviews</param>
        </member>
        <member name="M:Octokit.BranchProtectionRequiredReviewsDismissalRestrictionsUpdate.#ctor(Octokit.BranchProtectionTeamCollection,Octokit.BranchProtectionUserCollection)">
            <summary>
            Restrict dismissing reviews to the specified teams and people (in addition to Administrators).
            </summary>
            <param name="teams">List of Team slugs allowed to dismiss reviews</param>
            <param name="users">List of User logins allowed to dismiss reviews</param>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviewsDismissalRestrictionsUpdate.Teams">
            <summary>
            List of Team slugs allowed to dismiss reviews
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviewsDismissalRestrictionsUpdate.Users">
            <summary>
            List of User logins allowed to dismiss reviews
            </summary>
        </member>
        <member name="T:Octokit.CheckRunRequest">
            <summary>
            Details to filter a check suite request, such as by App Id or check run name
            </summary>
        </member>
        <member name="P:Octokit.CheckRunRequest.CheckName">
            <summary>
            Returns check runs with the specified name.
            </summary>
        </member>
        <member name="P:Octokit.CheckRunRequest.Status">
            <summary>
            Returns check runs with the specified status. Can be one of queued, in_progress, or completed.
            </summary>
        </member>
        <member name="P:Octokit.CheckRunRequest.Filter">
            <summary>
            Filters check runs by their completed_at timestamp. Can be one of latest (returning the most recent check runs) or all. Default: latest
            </summary>
        </member>
        <member name="M:Octokit.CheckRunUpdate.#ctor">
            <summary>
            Creates a new Check Run
            </summary>
        </member>
        <member name="P:Octokit.CheckRunUpdate.Name">
            <summary>
            The name of the check. For example, "code-coverage"
            </summary>
        </member>
        <member name="P:Octokit.CheckRunUpdate.DetailsUrl">
            <summary>
            The URL of the integrator's site that has the full details of the check
            </summary>
        </member>
        <member name="P:Octokit.CheckRunUpdate.ExternalId">
            <summary>
            A reference for the run on the integrator's system
            </summary>
        </member>
        <member name="P:Octokit.CheckRunUpdate.Status">
            <summary>
            The current status. Can be one of queued, in_progress, or completed. Default: queued
            </summary>
        </member>
        <member name="P:Octokit.CheckRunUpdate.StartedAt">
            <summary>
            The time that the check run began
            </summary>
        </member>
        <member name="P:Octokit.CheckRunUpdate.Conclusion">
            <summary>
            Required if you provide completed_at or a status of completed. The final conclusion of the check. Can be one of success, failure, neutral, cancelled, timed_out, or action_required. When the conclusion is action_required, additional details should be provided on the site specified by details_url.
            Note: Providing conclusion will automatically set the status parameter to completed
            </summary>
        </member>
        <member name="P:Octokit.CheckRunUpdate.CompletedAt">
            <summary>
            Required if you provide conclusion. The time the check completed
            </summary>
        </member>
        <member name="P:Octokit.CheckRunUpdate.Output">
            <summary>
            Check runs can accept a variety of data in the output object, including a title and summary and can optionally provide descriptive details about the run
            </summary>
        </member>
        <member name="P:Octokit.CheckRunUpdate.Actions">
            <summary>
            Possible further actions the integrator can perform, which a user may trigger. Each action includes a label, identifier and description. A maximum of three actions are accepted
            </summary>
        </member>
        <member name="T:Octokit.CheckSuiteRequest">
            <summary>
            Details to filter a check suite request, such as by App Id or check run name
            </summary>
        </member>
        <member name="P:Octokit.CheckSuiteRequest.AppId">
            <summary>
            Filters check suites by GitHub App Id
            </summary>
        </member>
        <member name="P:Octokit.CheckSuiteRequest.CheckName">
            <summary>
            Filters check suites by the name of the check run
            </summary>
        </member>
        <member name="T:Octokit.CheckSuiteTriggerRequest">
            <summary>
            Request to trigger the creation of a check suite
            </summary>
        </member>
        <member name="M:Octokit.CheckSuiteTriggerRequest.#ctor(System.String)">
            <summary>
            Request to trigger the creation of a check suite
            </summary>
            <param name="headSha">The sha of the head commit (required)</param>
        </member>
        <member name="P:Octokit.CheckSuiteTriggerRequest.HeadSha">
            <summary>
            The sha of the head commit
            </summary>
        </member>
        <member name="M:Octokit.CollaboratorRequest.#ctor(System.String)">
            <summary>
            Used to set the permission for a collaborator.
            </summary>
        </member>
        <member name="P:Octokit.CollaboratorRequest.Permission">
            <summary>
            The permission to grant the collaborator on this repository.
            Only valid on organization-owned repositories. We accept the following permissions to be set: 
            pull, triage, push, maintain, admin and you can also specify a custom repository role name, 
            if the owning organization has defined any.
            </summary>
        </member>
        <member name="T:Octokit.CommitRequest">
            <summary>
            Encapsulates the parameters for a request to retrieve commits.
            </summary>
        </member>
        <member name="P:Octokit.CommitRequest.Sha">
            <summary>
            SHA or branch to start listing commits from.
            </summary>
        </member>
        <member name="P:Octokit.CommitRequest.Path">
            <summary>
            Only commits containing this file path will be returned.
            </summary>
        </member>
        <member name="P:Octokit.CommitRequest.Author">
            <summary>
            GitHub login or email address by which to filter by commit author.
            </summary>
        </member>
        <member name="P:Octokit.CommitRequest.Since">
            <summary>
            Only commits after this date will be returned.
            </summary>
        </member>
        <member name="P:Octokit.CommitRequest.Until">
            <summary>
            Only commits before this date will be returned.
            </summary>
        </member>
        <member name="T:Octokit.ContentRequest">
            <summary>
            Base class with common properties for all the Repository Content Request APIs.
            </summary>
        </member>
        <member name="M:Octokit.ContentRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ContentRequest"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Octokit.ContentRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ContentRequest"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="branch">The branch the request is for.</param>
        </member>
        <member name="P:Octokit.ContentRequest.Message">
            <summary>
            The commit message. This is required.
            </summary>
        </member>
        <member name="P:Octokit.ContentRequest.Branch">
            <summary>
            The branch name. If null, this defaults to the default branch which is usually "main".
            </summary>
        </member>
        <member name="P:Octokit.ContentRequest.Committer">
            <summary>
            Specifies the committer to use for the commit. This is optional.
            </summary>
        </member>
        <member name="P:Octokit.ContentRequest.Author">
            <summary>
            Specifies the author to use for the commit. This is optional.
            </summary>
        </member>
        <member name="T:Octokit.DeleteFileRequest">
            <summary>
            Represents the request to delete a file in a repository.
            </summary>
        </member>
        <member name="M:Octokit.DeleteFileRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.DeleteFileRequest"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="sha">The sha.</param>
        </member>
        <member name="M:Octokit.DeleteFileRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.DeleteFileRequest"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="sha">The sha.</param>
            <param name="branch">The branch the request is for.</param>
        </member>
        <member name="T:Octokit.CreateFileRequest">
            <summary>
            Represents the parameters to create a file in a repository.
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#create-a-file</remarks>
        </member>
        <member name="M:Octokit.CreateFileRequest.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of a <see cref="T:Octokit.CreateFileRequest" />.
            </summary>
            <param name="message">The message.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:Octokit.CreateFileRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.CreateFileRequest"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="content">The content.</param>
            <param name="branch">The branch the request is for.</param>
        </member>
        <member name="M:Octokit.CreateFileRequest.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates an instance of a <see cref="T:Octokit.CreateFileRequest" />.
            </summary>
            <param name="message">The message.</param>
            <param name="content">The content.</param>
            <param name="convertContentToBase64">True to convert content to base64.</param>
        </member>
        <member name="M:Octokit.CreateFileRequest.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.CreateFileRequest"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="content">The content.</param>
            <param name="branch">The branch the request is for.</param>
            <param name="convertContentToBase64">True to convert content to base64.</param>
        </member>
        <member name="P:Octokit.CreateFileRequest.Content">
            <summary>
            The contents of the file to create, Base64 encoded. This is required.
            </summary>
        </member>
        <member name="T:Octokit.UpdateFileRequest">
            <summary>
            Represents the parameters to update a file in a repository.
            </summary>
        </member>
        <member name="M:Octokit.UpdateFileRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates an instance of a <see cref="T:Octokit.UpdateFileRequest" />.
            </summary>
            <param name="message">The message.</param>
            <param name="content">The content.</param>
            <param name="sha">The sha.</param>
        </member>
        <member name="M:Octokit.UpdateFileRequest.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Creates an instance of a <see cref="T:Octokit.UpdateFileRequest" />.
            </summary>
            <param name="message">The message.</param>
            <param name="content">The content.</param>
            <param name="sha">The sha.</param>
            <param name="branch">The branch the request is for.</param>
        </member>
        <member name="M:Octokit.UpdateFileRequest.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates an instance of a <see cref="T:Octokit.UpdateFileRequest" />.
            </summary>
            <param name="message">The message.</param>
            <param name="content">The content.</param>
            <param name="sha">The sha.</param>
            <param name="convertContentToBase64">True to convert content to base64.</param>
        </member>
        <member name="M:Octokit.UpdateFileRequest.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates an instance of a <see cref="T:Octokit.UpdateFileRequest" />.
            </summary>
            <param name="message">The message.</param>
            <param name="content">The content.</param>
            <param name="sha">The sha.</param>
            <param name="branch">The branch the request is for.</param>
            <param name="convertContentToBase64">True to convert content to base64.</param>
        </member>
        <member name="P:Octokit.UpdateFileRequest.Sha">
            <summary>
            The blob SHA of the file being replaced.
            </summary>
        </member>
        <member name="T:Octokit.CreateWorkflowDispatch">
            <summary>
            Specifies the values used to create a workflow dispatch event.
            </summary>
        </member>
        <member name="M:Octokit.CreateWorkflowDispatch.#ctor(System.String)">
            <summary>
            Creates a new workflow dispatch event.
            </summary>
            <param name="ref">Required. The git reference for the workflow. The reference can be a branch or tag name.</param>
        </member>
        <member name="P:Octokit.CreateWorkflowDispatch.Ref">
            <summary>
            The git reference for the workflow. The reference can be a branch or tag name.
            </summary>
        </member>
        <member name="P:Octokit.CreateWorkflowDispatch.Inputs">
            <summary>
            Input keys and values configured in the workflow file.
            </summary>
        </member>
        <member name="T:Octokit.DraftPullRequestReviewComment">
            <summary>
            A draft comment that is part of a Pull Request Review
            </summary>
        </member>
        <member name="M:Octokit.DraftPullRequestReviewComment.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Creates a draft comment
            </summary>
            <param name="body">The text of the comment</param>
            <param name="path">The relative path of the file to comment on</param>
            <param name="position">The line index in the diff to comment on</param>
        </member>
        <member name="P:Octokit.DraftPullRequestReviewComment.Body">
            <summary>
            The text of the comment.
            </summary>
        </member>
        <member name="P:Octokit.DraftPullRequestReviewComment.Path">
            <summary>
            The relative path of the file to comment on.
            </summary>
        </member>
        <member name="P:Octokit.DraftPullRequestReviewComment.Position">
            <summary>
            The line index in the diff to comment on.
            </summary>
        </member>
        <member name="T:Octokit.EditOrganizationHook">
            <summary>
            Represents the requested changes to an edit repository hook.
            </summary>
        </member>
        <member name="M:Octokit.EditOrganizationHook.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.EditOrganizationHook"/> class.
            </summary>
        </member>
        <member name="M:Octokit.EditOrganizationHook.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.EditOrganizationHook"/> class.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:Octokit.EditOrganizationHook.Events">
            <summary>
            Gets or sets the events.
            </summary>
            <value>
            The events.
            </value>
        </member>
        <member name="P:Octokit.EditOrganizationHook.Active">
            <summary>
            Gets or sets the active.
            </summary>
            <value>
            The active.
            </value>
        </member>
        <member name="T:Octokit.EditRepositoryHook">
            <summary>
            Represents the requested changes to an edit repository hook.
            </summary>
        </member>
        <member name="M:Octokit.EditRepositoryHook.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.EditRepositoryHook"/> class.
            </summary>
        </member>
        <member name="M:Octokit.EditRepositoryHook.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.EditRepositoryHook"/> class.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:Octokit.EditRepositoryHook.Events">
            <summary>
            Gets or sets the events.
            </summary>
            <value>
            The events.
            </value>
        </member>
        <member name="P:Octokit.EditRepositoryHook.RemoveEvents">
            <summary>
            Gets or sets the remove events.
            </summary>
            <value>
            The remove events.
            </value>
        </member>
        <member name="P:Octokit.EditRepositoryHook.Active">
            <summary>
            Gets or sets the active.
            </summary>
            <value>
            The active.
            </value>
        </member>
        <member name="P:Octokit.Models.Request.Enterprise.AuditLogApiOptions.PageSize">
            <summary>
            Specify the number of results to return for each page
            </summary>
            <remarks>
            Results returned may be less than this total if you reach the final page of results
            </remarks>
        </member>
        <member name="T:Octokit.Models.Request.Enterprise.AuditLogRequest">
            <summary>
            Used to filter a audit log request.
            </summary>
        </member>
        <member name="T:Octokit.Models.Request.Enterprise.IncludeFilter">
            <summary>
            The range of filters available for event types.
            </summary>
            <remarks>https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log</remarks>
        </member>
        <member name="F:Octokit.Models.Request.Enterprise.IncludeFilter.Web">
            <summary>
            Web (non-git) events. (Default)
            </summary>
        </member>
        <member name="F:Octokit.Models.Request.Enterprise.IncludeFilter.Git">
            <summary>
            Git events.
            </summary>
        </member>
        <member name="F:Octokit.Models.Request.Enterprise.IncludeFilter.All">
            <summary>
            Both web and Git events.
            </summary>
        </member>
        <member name="T:Octokit.Models.Request.Enterprise.AuditLogSortDirection">
            <summary>
            The two possible sort directions.
            </summary>
        </member>
        <member name="F:Octokit.Models.Request.Enterprise.AuditLogSortDirection.Ascending">
            <summary>
            Sort ascending
            </summary>
        </member>
        <member name="F:Octokit.Models.Request.Enterprise.AuditLogSortDirection.Descending">
            <summary>
            Sort descending
            </summary>
        </member>
        <member name="P:Octokit.Models.Response.DeploymentEnvironment.Id">
            <summary>
            Id of this deployment environment
            </summary>
        </member>
        <member name="P:Octokit.Models.Response.DeploymentEnvironment.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Models.Response.DeploymentEnvironment.Name">
            <summary>
            Environment Name
            </summary>
        </member>
        <member name="P:Octokit.Models.Response.DeploymentEnvironment.Url">
            <summary>
            Environment API URL
            </summary>
        </member>
        <member name="P:Octokit.Models.Response.DeploymentEnvironment.HtmlUrl">
            <summary>
            Environment HTML URL
            </summary>
        </member>
        <member name="P:Octokit.Models.Response.DeploymentEnvironment.CreatedAt">
            <summary>
            Date and time that the environment was created.
            </summary>
        </member>
        <member name="P:Octokit.Models.Response.DeploymentEnvironment.UpdatedAt">
            <summary>
            Date and time that the environment was updated.
            </summary>
        </member>
        <member name="P:Octokit.Models.Response.DeploymentEnvironmentsResponse.TotalCount">
            <summary>
            The total count of secrets for the repository
            </summary>
        </member>
        <member name="P:Octokit.Models.Response.DeploymentEnvironmentsResponse.Environments">
            <summary>
            The list of secrets for the repository
            </summary>
        </member>
        <member name="T:Octokit.NewLdapMapping">
            <summary>
            Describes a new organization to create via the <see cref="M:Octokit.IEnterpriseOrganizationClient.Create(Octokit.NewOrganization)" /> method.
            </summary>
        </member>
        <member name="M:Octokit.NewLdapMapping.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewLdapMapping"/> class.
            </summary>
            <param name="ldapDistinguishedName">The LDAP Distinguished Name</param>
        </member>
        <member name="P:Octokit.NewLdapMapping.LdapDistinguishedName">
            <summary>
            The LDAP Distinguished Name (required)
            </summary>
        </member>
        <member name="T:Octokit.NewOrganization">
            <summary>
            Describes a new organization to create via the <see cref="M:Octokit.IEnterpriseOrganizationClient.Create(Octokit.NewOrganization)" /> method.
            </summary>
        </member>
        <member name="M:Octokit.NewOrganization.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewOrganization"/> class.
            </summary>
            <param name="login">The organization's username</param>
            <param name="admin">The login of the user who will manage this organization</param>
        </member>
        <member name="M:Octokit.NewOrganization.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewOrganization"/> class.
            </summary>
            <param name="login">The organization's username</param>
            <param name="admin">The login of the user who will manage this organization</param>
            <param name="profileName">The organization's display name</param>
        </member>
        <member name="P:Octokit.NewOrganization.Login">
            <summary>
            The organization's username (required)
            </summary>
        </member>
        <member name="P:Octokit.NewOrganization.Admin">
            <summary>
            The login of the user who will manage this organization (required)
            </summary>
        </member>
        <member name="P:Octokit.NewOrganization.ProfileName">
            <summary>
            The organization's display name
            </summary>
        </member>
        <member name="T:Octokit.NewPreReceiveEnvironment">
            <summary>
            Describes a new pre-receive environment.
            </summary>
        </member>
        <member name="M:Octokit.NewPreReceiveEnvironment.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewPreReceiveEnvironment"/> class.
            </summary>
            <param name="name">The name of the environment as displayed in the UI.</param>
            <param name="imageUrl">URL to the tarball that will be downloaded and extracted.</param>
        </member>
        <member name="P:Octokit.NewPreReceiveEnvironment.Name">
            <summary>
            The name of the environment as displayed in the UI.
            </summary>
        </member>
        <member name="P:Octokit.NewPreReceiveEnvironment.ImageUrl">
            <summary>
            URL to the tarball that will be downloaded and extracted.
            </summary>
        </member>
        <member name="T:Octokit.NewPreReceiveHook">
            <summary>
            Describes a new pre-receive hook.
            </summary>
        </member>
        <member name="M:Octokit.NewPreReceiveHook.#ctor(System.String,Octokit.Repository,System.String,Octokit.PreReceiveEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewPreReceiveHook"/> class.
            </summary>
            <param name="name">The name of the hook.</param>
            <param name="script">The script that the hook runs.</param>
            <param name="scriptRepository">The repository where the script is kept.</param>
            <param name="environment">The pre-receive environment where the script is executed.</param>
        </member>
        <member name="M:Octokit.NewPreReceiveHook.#ctor(System.String,System.String,System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewPreReceiveHook"/> class.
            </summary>
            <param name="name">The name of the hook.</param>
            <param name="script">The script that the hook runs.</param>
            <param name="scriptRepositoryFullName">The <see cref="P:Octokit.Repository.FullName"/> of a repository where the script is kept.</param>
            <param name="environmentId">The <see cref="P:Octokit.PreReceiveEnvironment.Id"/> of a pre-receive environment where the script is executed.</param>
        </member>
        <member name="P:Octokit.NewPreReceiveHook.Name">
            <summary>
            The name of the hook.
            </summary>
        </member>
        <member name="P:Octokit.NewPreReceiveHook.Script">
            <summary>
            The script that the hook runs.
            </summary>
        </member>
        <member name="P:Octokit.NewPreReceiveHook.ScriptRepository">
            <summary>
            The script that the hook runs.
            </summary>
        </member>
        <member name="P:Octokit.NewPreReceiveHook.Environment">
            <summary>
            The script that the hook runs.
            </summary>
        </member>
        <member name="P:Octokit.NewPreReceiveHook.Enforcement">
            <summary>
            The state of enforcement for this hook. default: <see cref="F:Octokit.PreReceiveHookEnforcement.Disabled"/>
            </summary>
        </member>
        <member name="P:Octokit.NewPreReceiveHook.AllowDownstreamConfiguration">
            <summary>
            Whether enforcement can be overridden at the org or repo level. default: false.
            </summary>
        </member>
        <member name="T:Octokit.PreReceiveEnvironmentReference">
            <summary>
            A reference to a pre-receive environment.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironmentReference.Id">
            <summary>
            The identifier for the pre-receive environment.
            </summary>
        </member>
        <member name="T:Octokit.RepositoryReference">
            <summary>
            A Reference to a repository.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryReference.FullName">
            <summary>
            The full name for the repository.
            </summary>
        </member>
        <member name="M:Octokit.UpdateMaintenanceRequest.#ctor">
            <summary>
            Maintenance request with default details (results in Maintenance mode being turned off immediately)
            </summary>
        </member>
        <member name="M:Octokit.UpdateMaintenanceRequest.#ctor(Octokit.UpdateMaintenanceRequestDetails)">
            <summary>
            Maintenance request with specific details
            </summary>
        </member>
        <member name="P:Octokit.UpdateMaintenanceRequest.Maintenance">
            <summary>
            Details for the maintenance request
            </summary>
        </member>
        <member name="M:Octokit.UpdateMaintenanceRequestDetails.#ctor">
            <summary>
            Maintenance request details with default values (results in Maintenance mode being turned off immediately)
            </summary>
        </member>
        <member name="M:Octokit.UpdateMaintenanceRequestDetails.#ctor(System.Boolean)">
            <summary>
            Maintenance request details to enable/disable maintenance mode immediately
            </summary>
            <param name="enabled">true to enable, false to disable</param>
        </member>
        <member name="M:Octokit.UpdateMaintenanceRequestDetails.#ctor(System.Boolean,System.String)">
            <summary>
            Maintenance request details to enable/disable maintenance at a specified time (only applicable when enabling maintenance)
            </summary>
            <param name="enabled">true to enable, false to disable</param>
            <param name="when">A phrase specifying when maintenance mode will be enabled.  Phrase uses humanized forms supported by the <a href="https://github.com/mojombo/chronic">mojombo/chronic library</a> used by the GitHub API</param>
            such as "this friday at 5pm" or "5 minutes before midday tomorrow"
            <remarks>If enabled is false, the when parameter is ignored and maintenance is turned off immediately</remarks>
        </member>
        <member name="M:Octokit.UpdateMaintenanceRequestDetails.#ctor(System.Boolean,System.DateTimeOffset)">
            <summary>
            Maintenance request details to enable/disable maintenance at a specified time (only applicable when enabling maintenance)
            </summary>
            <param name="enabled">true to enable, false to disable</param>
            <param name="when">A <see cref="T:System.DateTimeOffset"/> specifying when maintenance mode will be enabled.</param>
            <remarks>If enabled is false, the when parameter is ignored and maintenance is turned off immediately</remarks>
        </member>
        <member name="P:Octokit.UpdateMaintenanceRequestDetails.Enabled">
            <summary>
            Whether maintenance mode is enabled or disabled
            </summary>
        </member>
        <member name="P:Octokit.UpdateMaintenanceRequestDetails.When">
            <summary>
            When maintenance mode will take effect (only applicable when enabling maintenance)
            </summary>
        </member>
        <member name="T:Octokit.UpdatePreReceiveEnvironment">
            <summary>
            Describes an update to an existing pre-receive environment.
            </summary>
        </member>
        <member name="P:Octokit.UpdatePreReceiveEnvironment.Name">
            <summary>
            The name of the environment as displayed in the UI.
            </summary>
        </member>
        <member name="P:Octokit.UpdatePreReceiveEnvironment.ImageUrl">
            <summary>
            URL to the tarball that will be downloaded and extracted.
            </summary>
        </member>
        <member name="T:Octokit.UpdatePreReceiveHook">
            <summary>
            Describes a new pre-receive hook.
            </summary>
        </member>
        <member name="P:Octokit.UpdatePreReceiveHook.Name">
            <summary>
            The name of the hook.
            </summary>
        </member>
        <member name="P:Octokit.UpdatePreReceiveHook.Script">
            <summary>
            The script that the hook runs.
            </summary>
        </member>
        <member name="P:Octokit.UpdatePreReceiveHook.ScriptRepository">
            <summary>
            The script that the hook runs.
            </summary>
        </member>
        <member name="P:Octokit.UpdatePreReceiveHook.Environment">
            <summary>
            The script that the hook runs.
            </summary>
        </member>
        <member name="P:Octokit.UpdatePreReceiveHook.Enforcement">
            <summary>
            The state of enforcement for this hook. Defaults is <see cref="F:Octokit.PreReceiveHookEnforcement.Disabled"/>
            </summary>
        </member>
        <member name="P:Octokit.UpdatePreReceiveHook.AllowDownstreamConfiguration">
            <summary>
            Whether enforcement can be overridden at the org or repo level. Default is false.
            </summary>
        </member>
        <member name="T:Octokit.FormUrlEncodedParameters">
            <summary>
            Base class for classes which represent UrlFormEncoded parameters to certain API endpoints.
            </summary>
        </member>
        <member name="M:Octokit.FormUrlEncodedParameters.ToFormUrlEncodedParameterString">
            <summary>
            Converts the derived object into a UrlFormEncoded parameter string containing named parameters and their json serialized values
            This format is required for particular API calls (eg the GitHub Enterprise Management Console API) that take a parameter formatted as json but not in the request body
            </summary>
        </member>
        <member name="T:Octokit.GenerateReleaseNotesRequest">
            <summary>
            Used to generate release notes for a given tag.
            </summary>
            <remarks>
            API: https://docs.github.com/rest/releases/releases#generate-release-notes-content-for-a-release
            </remarks>
        </member>
        <member name="M:Octokit.GenerateReleaseNotesRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.GenerateReleaseNotesRequest"/> class.
            </summary>
            <param name="tagName">Name of the tag to create in the repository for this release.</param>
        </member>
        <member name="P:Octokit.GenerateReleaseNotesRequest.TagName">
            <summary>
            Gets the name of the tag.
            </summary>
            <value>
            The name of the tag.
            </value>
        </member>
        <member name="P:Octokit.GenerateReleaseNotesRequest.TargetCommitish">
            <summary>
            The name of the previous tag to use as the starting point for the release notes.
            Use to manually specify the range for the set of changes considered as part this release.
            </summary>
            <value>
            The target commitish.
            </value>
        </member>
        <member name="P:Octokit.GenerateReleaseNotesRequest.PreviousTagName">
            <summary>
            Gets the name of the tag.
            </summary>
            <value>
            The name of the previous tag.
            </value>
        </member>
        <member name="P:Octokit.GenerateReleaseNotesRequest.ConfigurationFilePath">
            <summary>
            Specifies a path to a file in the repository containing configuration settings used for generating the
            release notes. If unspecified, the configuration file located in the repository at '.github/release.yml' or
            '.github/release.yaml' will be used. If that is not present, the default configuration will be used.
            </summary>
            <value>
            The path to the configuration file.
            </value>
        </member>
        <member name="T:Octokit.GistFileUpdate">
            <summary>
            Used as part of a <see cref="T:Octokit.GistUpdate" /> to update the name or contents of an existing gist file
            </summary>
            <remarks>
            API docs: https://developer.github.com/v3/gists/
            </remarks>
        </member>
        <member name="P:Octokit.GistFileUpdate.NewFileName">
            <summary>
            Gets or sets the new name of the file.
            </summary>
            <value>
            The new name of the file.
            </value>
        </member>
        <member name="P:Octokit.GistFileUpdate.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="T:Octokit.GistRequest">
            <summary>
            Used to request Gists since a certain date.
            </summary>
            <remarks>
            API docs: https://developer.github.com/v3/gists/
            </remarks>
        </member>
        <member name="M:Octokit.GistRequest.#ctor(System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.GistRequest"/> class.
            </summary>
            <param name="since">The date for which only gists updated at or after this time are returned.</param>
        </member>
        <member name="P:Octokit.GistRequest.Since">
            <summary>
            Gets or sets the date for which only gists updated at or after this time are returned.
            </summary>
            <remarks>
            This is sent as a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ 
            </remarks>
            <value>
            The since.
            </value>
        </member>
        <member name="T:Octokit.GistUpdate">
            <summary>
            Used to update a gist and its contents.
            </summary>
            <remarks>
            Note: All files from the previous version of the gist are carried over by default if not included in the
             object. Deletes can be performed by including the filename with a null object.
            API docs: https://developer.github.com/v3/gists/
            </remarks>
        </member>
        <member name="P:Octokit.GistUpdate.Files">
            <summary>
            Gets a dictionary of gist files to update.
            </summary>
            <remarks>
            Note: All files from the previous version of the gist are carried over by default if not included in the
            hash. Deletes can be performed by including the filename with a `null` hash.
            </remarks>
        </member>
        <member name="T:Octokit.InvitationUpdate">
            <summary>
            Used to update a invitation.
            </summary>
            <remarks>    
            </remarks>
        </member>
        <member name="T:Octokit.IssueCommentRequest">
            <summary>
            Used to filter issue comments.
            </summary>
        </member>
        <member name="M:Octokit.IssueCommentRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.IssueCommentRequest"/> class.
            </summary>
        </member>
        <member name="P:Octokit.IssueCommentRequest.Sort">
            <summary>
            Can be either created or updated. Default: created.
            </summary>
        </member>
        <member name="P:Octokit.IssueCommentRequest.Direction">
            <summary>
            Can be either asc or desc. Default: asc.
            </summary>
        </member>
        <member name="P:Octokit.IssueCommentRequest.Since">
            <summary>
            Only comments updated at or after this time are returned. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
            </summary>
        </member>
        <member name="T:Octokit.IssueRequest">
            <summary>
            Used to filter a request to list issues.
            </summary>
        </member>
        <member name="M:Octokit.IssueRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.IssueRequest"/> class.
            </summary>
        </member>
        <member name="P:Octokit.IssueRequest.Filter">
            <summary>
            Gets or sets the <see cref="T:Octokit.IssueFilter" /> which indicates which sorts of issues to return.
            </summary>
            <value>
            The filter.
            </value>
        </member>
        <member name="P:Octokit.IssueRequest.State">
            <summary>
            Gets or sets the <see cref="T:Octokit.ItemStateFilter"/> for the issues to return.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:Octokit.IssueRequest.Labels">
            <summary>
            Gets the labels to filter by. Add labels to the collection to only request issues with those labels.
            </summary>
            <remarks>Sent as a comma separated list</remarks>
            <value>
            The labels.
            </value>
        </member>
        <member name="P:Octokit.IssueRequest.SortProperty">
            <summary>
            Gets or sets the <see cref="T:Octokit.IssueSort"/> property to sort the returned issues by.
            Combine this with <see cref="P:Octokit.IssueRequest.SortDirection"/> to specify sort direction.
            </summary>
            <value>
            The sort property.
            </value>
        </member>
        <member name="P:Octokit.IssueRequest.SortDirection">
            <summary>
            Gets or sets the sort direction.
            </summary>
            <value>
            The sort direction.
            </value>
        </member>
        <member name="P:Octokit.IssueRequest.Since">
            <summary>
            Gets or sets the date for which only issues updated at or after this time are returned.
            </summary>
            <remarks>
            This is sent as a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
            </remarks>
            <value>
            The since.
            </value>
        </member>
        <member name="T:Octokit.IssueFilter">
            <summary>
            The range of filters available for issues.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#list-issues</remarks>
        </member>
        <member name="F:Octokit.IssueFilter.Assigned">
            <summary>
            Issues assigned to the authenticated user. (Default)
            </summary>
        </member>
        <member name="F:Octokit.IssueFilter.Created">
            <summary>
            Issues created by the authenticated user.
            </summary>
        </member>
        <member name="F:Octokit.IssueFilter.Mentioned">
            <summary>
            Issues mentioning the authenticated user.
            </summary>
        </member>
        <member name="F:Octokit.IssueFilter.Subscribed">
            <summary>
            Issues the authenticated user is subscribed to for updates.
            </summary>
        </member>
        <member name="F:Octokit.IssueFilter.All">
            <summary>
            All issues the authenticated user can see, regardless of participation or creation.
            </summary>
        </member>
        <member name="T:Octokit.ItemStateFilter">
            <summary>
            Range of states for Issues, Milestones and PullRequest API.
            </summary>
        </member>
        <member name="F:Octokit.ItemStateFilter.Open">
            <summary>
            Items that are open.
            </summary>
        </member>
        <member name="F:Octokit.ItemStateFilter.Closed">
            <summary>
            Items that are closed.
            </summary>
        </member>
        <member name="F:Octokit.ItemStateFilter.All">
            <summary>
            All the items.
            </summary>
        </member>
        <member name="T:Octokit.ItemState">
            <summary>
            Items that are open OR closed
            </summary>
        </member>
        <member name="F:Octokit.ItemState.Open">
            <summary>
            Items that are open
            </summary>
        </member>
        <member name="F:Octokit.ItemState.Closed">
            <summary>
            Items that are closed
            </summary>
        </member>
        <member name="T:Octokit.ItemStateReason">
            <summary>
            The reason for the state change.
            </summary>
        </member>
        <member name="F:Octokit.ItemStateReason.Completed">
            <summary>
            Item closed as completed.
            </summary>
        </member>
        <member name="F:Octokit.ItemStateReason.NotPlanned">
            <summary>
            Item closed as unplanned.
            </summary>
        </member>
        <member name="F:Octokit.ItemStateReason.Reopened">
            <summary>
            Item reopened.
            </summary>
        </member>
        <member name="T:Octokit.IssueSort">
            <summary>
            The available properties to sort issues by.
            </summary>
        </member>
        <member name="F:Octokit.IssueSort.Created">
            <summary>
            Sort by create date (default)
            </summary>
        </member>
        <member name="F:Octokit.IssueSort.Updated">
            <summary>
            Sort by the date of the last update
            </summary>
        </member>
        <member name="F:Octokit.IssueSort.Comments">
            <summary>
            Sort by the number of comments
            </summary>
        </member>
        <member name="T:Octokit.SortDirection">
            <summary>
            The two possible sort directions.
            </summary>
        </member>
        <member name="F:Octokit.SortDirection.Ascending">
            <summary>
            Sort ascending
            </summary>
        </member>
        <member name="F:Octokit.SortDirection.Descending">
            <summary>
            Sort descending
            </summary>
        </member>
        <member name="T:Octokit.IssueUpdate">
            <summary>
            Specifies the values used to update an issue.
            </summary>
        </member>
        <member name="P:Octokit.IssueUpdate.Title">
            <summary>
            Title of the issue (required)
            </summary>
        </member>
        <member name="P:Octokit.IssueUpdate.Body">
            <summary>
            Details about the issue.
            </summary>
        </member>
        <member name="P:Octokit.IssueUpdate.Assignees">
            <summary>
            List of logins for the multiple users that this issue should be assigned to
            </summary>
            <remarks>
            Only users with push access can set the multiple assignees for new issues.  The assignees are silently dropped otherwise.
            </remarks>
        </member>
        <member name="P:Octokit.IssueUpdate.Milestone">
            <summary>
            Milestone to associate this issue with.
            </summary>
            <remarks>
            Only users with push access can set the milestone for new issues. The milestone is silently dropped
            otherwise
            </remarks>
        </member>
        <member name="P:Octokit.IssueUpdate.Labels">
            <summary>
            Labels to associate with this issue.
            </summary>
            <remarks>
            Only users with push access can set labels for new issues. Labels are silently dropped otherwise.
            </remarks>
        </member>
        <member name="P:Octokit.IssueUpdate.State">
            <summary>
            Whether the issue is open or closed.
            </summary>
        </member>
        <member name="P:Octokit.IssueUpdate.StateReason">
            <summary>
            The reason for the state change. Ignored unless <see cref="P:Octokit.IssueUpdate.State"/> is changed.
            </summary>
        </member>
        <member name="M:Octokit.IssueUpdate.AddAssignee(System.String)">
            <summary>
            Adds the specified assignees to the issue.
            </summary>
            <param name="name">The login of the assignee.</param>
        </member>
        <member name="M:Octokit.IssueUpdate.ClearAssignees">
            <summary>
            Clears all the assignees.
            </summary>
        </member>
        <member name="M:Octokit.IssueUpdate.RemoveAssignee(System.String)">
            <summary>
            Removes the specified assignee from the issue
            </summary>
            <param name="name">The login of the assignee to remove</param>
        </member>
        <member name="M:Octokit.IssueUpdate.AddLabel(System.String)">
            <summary>
            Adds the specified label to the issue.
            </summary>
            <param name="name">The name of the label.</param>
        </member>
        <member name="M:Octokit.IssueUpdate.ClearLabels">
            <summary>
            Clears all the labels.
            </summary>
        </member>
        <member name="M:Octokit.IssueUpdate.RemoveLabel(System.String)">
            <summary>
            Removes the specified label from the issue
            </summary>
            <param name="name">The name of the label to remove</param>
        </member>
        <member name="T:Octokit.LabelUpdate">
            <summary>
            Used to update an existing label.
            </summary>
        </member>
        <member name="M:Octokit.LabelUpdate.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.LabelUpdate"/> class.
            </summary>
            <param name="name">The name of the label.</param>
            <param name="color">The color of the label.</param>
        </member>
        <member name="P:Octokit.LabelUpdate.Name">
            <summary>
            Name of the label (required).
            </summary>
        </member>
        <member name="P:Octokit.LabelUpdate.Color">
            <summary>
            Color of the label (required).
            </summary>
        </member>
        <member name="P:Octokit.LabelUpdate.Description">
            <summary>
            A short description of the label (optional).
            </summary>
        </member>
        <member name="T:Octokit.ListArtifactsRequest">
            <summary>
            Used to filter requests for lists of artifacts.
            </summary>
        </member>
        <member name="P:Octokit.ListArtifactsRequest.Name">
            <summary>
            Filter artifacts by name.
            </summary>
        </member>
        <member name="P:Octokit.ListArtifactsRequest.PerPage">
            <summary>
            How many results to return per page (maximum 100).
            </summary>
        </member>
        <member name="P:Octokit.ListArtifactsRequest.Page">
            <summary>
            What page to retrieve.
            </summary>
        </member>
        <member name="T:Octokit.MarkAsReadRequest">
            <summary>
            Used to mark a notification as "read" which removes it from the default view on GitHub.com.
            </summary>
            <remarks>
            https://developer.github.com/v3/activity/notifications/#mark-as-read
            </remarks>
        </member>
        <member name="M:Octokit.MarkAsReadRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.MarkAsReadRequest"/> class.
            </summary>
        </member>
        <member name="P:Octokit.MarkAsReadRequest.LastReadAt">
            <summary>
            Describes the last point that notifications were checked. Anything updated since this time will not be
            updated.
            </summary>
            <remarks>
            This is sent as a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: the current time.
            </remarks>
        </member>
        <member name="T:Octokit.MergePullRequest">
            <summary>
            Used to merge a pull request (Merge Button).
            </summary>
            <remarks>
            https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button
            </remarks>
        </member>
        <member name="P:Octokit.MergePullRequest.CommitMessage">
            <summary>
            The message that will be used for the merge commit (optional)
            </summary>
        </member>
        <member name="P:Octokit.MergePullRequest.Sha">
            <summary>
            The SHA that pull request head must match to allow merge (optional)
            </summary>
        </member>
        <member name="P:Octokit.MergePullRequest.CommitTitle">
            <summary>
            The Title for the automatic commit message (optional)
            </summary>
        </member>
        <member name="P:Octokit.MergePullRequest.MergeMethod">
            <summary>
            Specify the Merge method to use (optional - default is Merge)
            </summary>
        </member>
        <member name="T:Octokit.PullRequestMergeMethod">
            <summary>
            Method to use when merging a PR
            </summary>
        </member>
        <member name="F:Octokit.PullRequestMergeMethod.Merge">
            <summary>
            Create a merge commit
            </summary>
        </member>
        <member name="F:Octokit.PullRequestMergeMethod.Squash">
            <summary>
            Squash and merge
            </summary>
        </member>
        <member name="F:Octokit.PullRequestMergeMethod.Rebase">
            <summary>
            Rebase and merge
            </summary>
        </member>
        <member name="T:Octokit.MilestoneRequest">
            <summary>
            Used to filter requests for lists of milestones 
            </summary>
        </member>
        <member name="P:Octokit.MilestoneRequest.State">
            <summary>
            Which Milestones to get. The default is <see cref="F:Octokit.ItemStateFilter.Open"/>.
            </summary>
        </member>
        <member name="T:Octokit.MilestoneUpdate">
            <summary>
            Used to update a milestone
            </summary>
        </member>
        <member name="P:Octokit.MilestoneUpdate.Title">
            <summary>
            Title of the milestone (required)
            </summary>
        </member>
        <member name="P:Octokit.MilestoneUpdate.State">
            <summary>
            Whether the milestone is open or closed. The default is <see cref="F:Octokit.ItemState.Open"/>.
            </summary>
        </member>
        <member name="P:Octokit.MilestoneUpdate.Description">
            <summary>
            Optional description for the milestone.
            </summary>
        </member>
        <member name="P:Octokit.MilestoneUpdate.DueOn">
            <summary>
            An optional date when the milestone is due.
            </summary>
        </member>
        <member name="T:Octokit.NewArbitraryMarkdown">
            <summary>
            Used to create an arbitrary markdown
            </summary>
            <remarks>
            API: https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document
            </remarks>
        </member>
        <member name="M:Octokit.NewArbitraryMarkdown.#ctor(System.String,System.String,System.String)">
            <summary>
            Create an arbitrary markdown
            </summary>
            <param name="text">The Markdown text to render</param>
            <param name="mode">The rendering mode. Can be either markdown by default or gfm</param>
            <param name="context">
            The repository context. Only taken into account when rendering as gfm
            </param>
        </member>
        <member name="M:Octokit.NewArbitraryMarkdown.#ctor(System.String)">
            <summary>
            Create an arbitrary markdown
            </summary>
            <param name="text">The Markdown text to render
            </param>
        </member>
        <member name="M:Octokit.NewArbitraryMarkdown.#ctor(System.String,System.String)">
            <summary>
            Create an arbitrary markdown
            </summary>
            <param name="text">The Markdown text to render</param>
            <param name="mode">The rendering mode. Can be either markdown by default or gfm</param>
        </member>
        <member name="P:Octokit.NewArbitraryMarkdown.Text">
            <summary>
            Gets the markdown text
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Octokit.NewArbitraryMarkdown.Mode">
            <summary>
            Gets the mode of the text
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:Octokit.NewArbitraryMarkdown.Context">
            <summary>
            Gets the context of the markdown
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="T:Octokit.NewAuthorization">
            <summary>
            Used to create a new authorization.
            </summary>
        </member>
        <member name="M:Octokit.NewAuthorization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewAuthorization"/> class.
            </summary>
        </member>
        <member name="M:Octokit.NewAuthorization.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewAuthorization"/> class.
            </summary>
            <param name="note">The note.</param>
            <param name="scopes">The scopes.</param>
        </member>
        <member name="M:Octokit.NewAuthorization.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewAuthorization"/> class.
            </summary>
            <param name="note">The note.</param>
            <param name="scopes">The scopes.</param>
            <param name="fingerprint">The fingerprint.</param>
        </member>
        <member name="P:Octokit.NewAuthorization.Scopes">
            <summary>
            Replaces the authorization scopes with this list.
            </summary>
        </member>
        <member name="P:Octokit.NewAuthorization.Fingerprint">
            <summary>
            Optional parameter that allows an OAuth application to create multiple authorizations for a single user
            </summary>
        </member>
        <member name="P:Octokit.NewAuthorization.Note">
            <summary>
            An optional note to remind you what the OAuth token is for.
            </summary>
        </member>
        <member name="P:Octokit.NewAuthorization.NoteUrl">
            <summary>
            An optional URL to remind you what app the OAuth token is for.
            </summary>
        </member>
        <member name="T:Octokit.NewBlob">
            <summary>
            Used to create a Blob.
            </summary>
        </member>
        <member name="P:Octokit.NewBlob.Content">
            <summary>
            The content of the blob.
            </summary>
        </member>
        <member name="P:Octokit.NewBlob.Encoding">
            <summary>
            The encoding of the blob.
            </summary>
        </member>
        <member name="M:Octokit.NewCheckRun.#ctor(System.String,System.String)">
            <summary>
            Creates a new Check Run
            </summary>
            <param name="name">Required. The name of the check. For example, "code-coverage"</param>
            <param name="headSha">Required. The SHA of the commit</param>
        </member>
        <member name="P:Octokit.NewCheckRun.Name">
            <summary>
            Required. The name of the check. For example, "code-coverage"
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRun.HeadSha">
            <summary>
            Required. The SHA of the commit
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRun.DetailsUrl">
            <summary>
            The URL of the integrator's site that has the full details of the check
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRun.ExternalId">
            <summary>
            A reference for the run on the integrator's system
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRun.Status">
            <summary>
            The current status. Can be one of queued, in_progress, or completed. Default: queued
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRun.StartedAt">
            <summary>
            The time that the check run began
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRun.Conclusion">
            <summary>
            Required if you provide completed_at or a status of completed. The final conclusion of the check. Can be one of success, failure, neutral, cancelled, timed_out, or action_required. When the conclusion is action_required, additional details should be provided on the site specified by details_url.
            Note: Providing conclusion will automatically set the status parameter to completed
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRun.CompletedAt">
            <summary>
            Required if you provide conclusion. The time the check completed
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRun.Output">
            <summary>
            Check runs can accept a variety of data in the output object, including a title and summary and can optionally provide descriptive details about the run
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRun.Actions">
            <summary>
            Possible further actions the integrator can perform, which a user may trigger. Each action includes a label, identifier and description. A maximum of three actions are accepted
            </summary>
        </member>
        <member name="M:Octokit.NewCheckRunAction.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a CheckRunAction request object
            </summary>
            <param name="label">Required. The text to be displayed on a button in the web UI. The maximum size is 20 characters</param>
            <param name="description">Required. A short explanation of what this action would do. The maximum size is 40 characters</param>
            <param name="identifier">Required. A reference for the action on the integrator's system. The maximum size is 20 characters</param>
        </member>
        <member name="P:Octokit.NewCheckRunAction.Label">
            <summary>
            Required. The text to be displayed on a button in the web UI. The maximum size is 20 characters
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAction.Description">
            <summary>
            Required. A short explanation of what this action would do. The maximum size is 40 characters
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAction.Identifier">
            <summary>
            Required. A reference for the action on the integrator's system. The maximum size is 20 characters
            </summary>
        </member>
        <member name="M:Octokit.NewCheckRunAnnotation.#ctor(System.String,System.Int32,System.Int32,Octokit.CheckAnnotationLevel,System.String)">
            <summary>
            Constructs a CheckRunCreateAnnotation request object
            </summary>
            <param name="path">Required. The path of the file to add an annotation to. For example, assets/css/main.css</param>
            <param name="startLine">Required. The start line of the annotation</param>
            <param name="endLine">Required. The end line of the annotation</param>
            <param name="annotationLevel">Required. The level of the annotation. Can be one of notice, warning, or failure</param>
            <param name="message">Required. A short description of the feedback for these lines of code. The maximum size is 64 KB</param>
        </member>
        <member name="M:Octokit.NewCheckRunAnnotation.#ctor(System.String,System.String,System.Int32,System.Int32,Octokit.CheckWarningLevel,System.String)">
            <summary>
            Constructs a CheckRunCreateAnnotation request object (using Filename, BlobHref and WarningLevel)
            </summary>
            <param name="filename">Required. The path of the file to add an annotation to. For example, assets/css/main.css</param>
            <param name="blobHref">Required. The file's full blob URL. You can find the blob_href in the response of the Get a single commit endpoint, by reading the blob_url from an element of the files array. You can also construct the blob URL from the head_sha, the repository, and the filename: https://github.com/:owner/:repo/blob/:head_sha/:filename </param>
            <param name="startLine">Required. The start line of the annotation</param>
            <param name="endLine">Required. The end line of the annotation</param>
            <param name="warningLevel">Required. The warning level of the annotation. Can be one of notice, warning, or failure</param>
            <param name="message">Required. A short description of the feedback for these lines of code. The maximum size is 64 KB</param>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.Filename">
            <summary>
            Required. The path of the file to add an annotation to. For example, assets/css/main.css
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.Path">
            <summary>
            Required. The path of the file to add an annotation to. For example, assets/css/main.css
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.BlobHref">
            <summary>
            Required. The file's full blob URL. You can find the blob_href in the response of the Get a single commit endpoint, by reading the blob_url from an element of the files array. You can also construct the blob URL from the head_sha, the repository, and the filename: https://github.com/:owner/:repo/blob/:head_sha/:filename
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.StartLine">
            <summary>
            Required. The start line of the annotation
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.EndLine">
            <summary>
            Required. The end line of the annotation
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.StartColumn">
            <summary>
            Required. The start line of the annotation
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.EndColumn">
            <summary>
            Required. The end line of the annotation
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.WarningLevel">
            <summary>
            Required. The warning level of the annotation. Can be one of notice, warning, or failure
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.AnnotationLevel">
            <summary>
            Required. The level of the annotation. Can be one of notice, warning, or failure
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.Message">
            <summary>
            Required. A short description of the feedback for these lines of code. The maximum size is 64 KB
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.Title">
            <summary>
            The title that represents the annotation. The maximum size is 255 characters
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunAnnotation.RawDetails">
            <summary>
            Details about this annotation. The maximum size is 64 KB
            </summary>
        </member>
        <member name="M:Octokit.NewCheckRunImage.#ctor(System.String,System.String)">
            <summary>
            Constructs a CheckRunImage request object
            </summary>
            <param name="alt">Required. The alternative text for the image</param>
            <param name="imageUrl">Required. The full URL of the image</param>
        </member>
        <member name="P:Octokit.NewCheckRunImage.Alt">
            <summary>
            Required. The alternative text for the image
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunImage.ImageUrl">
            <summary>
            Required. The full URL of the image
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunImage.Caption">
            <summary>
            A short image description
            </summary>
        </member>
        <member name="M:Octokit.NewCheckRunOutput.#ctor(System.String,System.String)">
            <summary>
            Constructs a CheckRunOutput request object
            </summary>
            <param name="title">Required. The title of the check run</param>
            <param name="summary">Required. The summary of the check run. This parameter supports Markdown</param>
        </member>
        <member name="P:Octokit.NewCheckRunOutput.Title">
            <summary>
            Required. The title of the check run
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunOutput.Summary">
            <summary>
            Required. The summary of the check run. This parameter supports Markdown
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunOutput.Text">
            <summary>
            The details of the check run. This parameter supports Markdown
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunOutput.Annotations">
            <summary>
            Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. For details about annotations in the UI, see "About status checks"
            </summary>
        </member>
        <member name="P:Octokit.NewCheckRunOutput.Images">
            <summary>
            Adds images to the output displayed in the GitHub pull request UI
            </summary>
        </member>
        <member name="M:Octokit.NewCheckSuite.#ctor(System.String)">
            <summary>
            Creates a new Check Suite
            </summary>
            <param name="headSha">Required. The sha of the head commit</param>
        </member>
        <member name="P:Octokit.NewCheckSuite.HeadSha">
            <summary>
            Required. The sha of the head commit
            </summary>
        </member>
        <member name="T:Octokit.NewCommit">
            <summary>
            Used to create a commit.
            </summary>
            <remarks>
            API: https://developer.github.com/v3/git/commits/#create-a-commit
            </remarks>
        </member>
        <member name="M:Octokit.NewCommit.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Create a new commit which has multiple parents (i.e. a merge commit)
            </summary>
            <param name="message">The message to associate with the commit</param>
            <param name="tree">The tree associated with the commit</param>
            <param name="parents">
            The SHAs of the commits that were the parents of this commit. If empty, the commit will be written as a
            root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of
            more than one should be provided.
            </param>
        </member>
        <member name="M:Octokit.NewCommit.#ctor(System.String,System.String)">
            <summary>
            Create a new commit which does not have any parents
            </summary>
            <param name="message">The message to associate with the commit</param>
            <param name="tree">The tree associated with the commit</param>
        </member>
        <member name="M:Octokit.NewCommit.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new commit which has one parent
            </summary>
            <param name="message">The message to associate with the commit</param>
            <param name="tree">The tree associated with the commit</param>
            <param name="parent">The commit to use as a parent</param>
        </member>
        <member name="P:Octokit.NewCommit.Message">
            <summary>
            Gets the commit message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Octokit.NewCommit.Tree">
            <summary>
            Gets the tree associated with the commit.
            </summary>
            <value>
            The tree.
            </value>
        </member>
        <member name="P:Octokit.NewCommit.Parents">
            <summary>
            Gets the SHAs of the commits that were the parents of this commit. If empty, the commit will be written as
            a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of
            more than one should be provided.
            </summary>
            <value>
            The parents.
            </value>
        </member>
        <member name="P:Octokit.NewCommit.Author">
            <summary>
            Gets or sets the author of the commit. If omitted, it will be filled in with the authenticated user’s
            information and the current date.
            </summary>
            <value>
            The author.
            </value>
        </member>
        <member name="P:Octokit.NewCommit.Committer">
            <summary>
            Gets or sets the person who applied the commit. If omitted, this will be filled in with the
            <see cref="P:Octokit.NewCommit.Author"/>.
            </summary>
            <value>
            The committer.
            </value>
        </member>
        <member name="T:Octokit.NewCommitComment">
            <summary>
            Describes a new commit comment to create via the <see cref="M:Octokit.IRepositoryCommentsClient.Create(System.String,System.String,System.String,Octokit.NewCommitComment)"/> method.
            </summary>
        </member>
        <member name="M:Octokit.NewCommitComment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewCommitComment"/> class.
            </summary>
            <param name="body">The body of the comment.</param>
        </member>
        <member name="P:Octokit.NewCommitComment.Body">
            <summary>
            The contents of the comment (required)
            </summary>
        </member>
        <member name="P:Octokit.NewCommitComment.Path">
            <summary>
            Relative path of the file to comment on
            </summary>
        </member>
        <member name="P:Octokit.NewCommitComment.Position">
            <summary>
            Line index in the diff to comment on
            </summary>
        </member>
        <member name="T:Octokit.NewCommitStatus">
            <summary>
            Used to create a new commit status.
            </summary>
        </member>
        <member name="P:Octokit.NewCommitStatus.State">
            <summary>
            The state of the commit.
            </summary>
        </member>
        <member name="P:Octokit.NewCommitStatus.TargetUrl">
            <summary>
            URL associated with this status. GitHub.com displays this URL as a link to allow users to easily see the
            ‘source’ of the Status. For example, if your Continuous Integration system is posting build status, 
            you would want to provide the deep link for the build output for this specific sha.
            </summary>
        </member>
        <member name="P:Octokit.NewCommitStatus.Description">
            <summary>
            Short description of the status.
            </summary>
        </member>
        <member name="P:Octokit.NewCommitStatus.Context">
            <summary>
            A string label to differentiate this status from the status of other systems.
            </summary>
        </member>
        <member name="T:Octokit.NewDeployKey">
            <summary>
            Describes a new deployment key to create.
            </summary>
            <remarks>
            API: https://developer.github.com/v3/repos/keys/
            </remarks>
        </member>
        <member name="P:Octokit.NewDeployKey.Title">
            <summary>
            Gets or sets a name for the deployment key.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Octokit.NewDeployKey.Key">
            <summary>
            Gets or sets the contents of the deployment key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Octokit.NewDeployKey.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the key will only be able to read repository contents. Otherwise, 
            the key will be able to read and write.
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Octokit.NewDeployment">
            <summary>
            Describes a new deployment status to create. Deployments are a request for a specific ref(branch,sha,tag) to
            be deployed.
            </summary>
            <remarks>
            API: https://developer.github.com/v3/repos/deployments/
            </remarks>
        </member>
        <member name="M:Octokit.NewDeployment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewDeployment"/> class.
            </summary>
            <param name="ref">The ref to deploy.</param>
        </member>
        <member name="P:Octokit.NewDeployment.Ref">
            <summary>
            The ref to deploy. This can be a branch, tag, or sha. (REQUIRED)
            </summary>
        </member>
        <member name="P:Octokit.NewDeployment.Task">
            <summary>
            Gets or sets the optional task used to specify a task to execute, e.g. deploy or deploy:migrations. 
            Default if not specified: deploy
            </summary>
        </member>
        <member name="P:Octokit.NewDeployment.AutoMerge">
            <summary>
            Merges the default branch into the requested deployment branch if true;
            Does nothing if false. (DEFAULT if not specified: True)
            </summary>
        </member>
        <member name="P:Octokit.NewDeployment.RequiredContexts">
            <summary>
            Optional array of status contexts verified against commit status checks. If this property is null then 
            all unique contexts will be verified before a deployment is created. To bypass checking entirely, set this
            to an empty collection. Defaults to all unique contexts (aka null).
            </summary>
            <value>
            The required contexts.
            </value>
        </member>
        <member name="P:Octokit.NewDeployment.Payload">
            <summary>
            JSON payload with extra information about the deployment.
            </summary>
        </member>
        <member name="P:Octokit.NewDeployment.Environment">
            <summary>
            Optional name for the target deployment environment (e.g., production, staging, qa). Default: "production"
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Octokit.NewDeployment.Description">
            <summary>
            A short description of the deployment.
            </summary>
        </member>
        <member name="P:Octokit.NewDeployment.TransientEnvironment">
            <summary>
            Indicates if the environment is specific to a deployment and will no longer exist at some point in the future.
            (DEFAULT if not specified: False)
            </summary>
        </member>
        <member name="P:Octokit.NewDeployment.ProductionEnvironment">
            <summary>
            Indicates if the environment is one with which end users directly interact.
            (DEFAULT if not specified: True when environment is "production" and False otherwise)
            </summary>
        </member>
        <member name="T:Octokit.NewDeploymentStatus">
            <summary>
            Describes a new deployment status to create.
            </summary>
        </member>
        <member name="M:Octokit.NewDeploymentStatus.#ctor(Octokit.DeploymentState)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewDeploymentStatus"/> class.
            </summary>
            <param name="deploymentState">State of the deployment (Required).</param>
        </member>
        <member name="P:Octokit.NewDeploymentStatus.State">
            <summary>
            The state of the status.
            </summary>
        </member>
        <member name="P:Octokit.NewDeploymentStatus.LogUrl">
            <summary>
            The target URL to associate with this status. This URL should contain
            output to keep the user updated while the task is running or serve as
            historical information for what happened in the deployment
            </summary>
        </member>
        <member name="P:Octokit.NewDeploymentStatus.Description">
            <summary>
            A short description of the status.
            </summary>
        </member>
        <member name="P:Octokit.NewDeploymentStatus.EnvironmentUrl">
            <summary>
            The URL for accessing your environment.
            </summary>
        </member>
        <member name="P:Octokit.NewDeploymentStatus.Environment">
            <summary>
            Name for the target deployment environment.
            </summary>
        </member>
        <member name="P:Octokit.NewDeploymentStatus.AutoInactive">
            <summary>
            Indicates if a new inactive status should be added to all non-transient, 
            non-production environment deployments with the same repository and environment 
            name as the created status's deployment. 
            (DEFAULT if not specified: True)
            </summary>
        </member>
        <member name="T:Octokit.NewGist">
            <summary>
            Used to create a new Gist.
            </summary>
        </member>
        <member name="P:Octokit.NewGist.Description">
            <summary>
            The description of the gist.
            </summary>
        </member>
        <member name="P:Octokit.NewGist.Public">
            <summary>
            Indicates whether the gist is public
            </summary>
        </member>
        <member name="P:Octokit.NewGist.Files">
            <summary>
            Files that make up this gist using the key as Filename
            and value as Content
            </summary>
        </member>
        <member name="T:Octokit.NewImpersonationToken">
            <summary>
            Describes a new Impersonation Token to create via the <see cref="M:Octokit.IUserAdministrationClient.CreateImpersonationToken(System.String,Octokit.NewImpersonationToken)"/> method.
            </summary>
        </member>
        <member name="M:Octokit.NewImpersonationToken.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewImpersonationToken"/> class.
            </summary>
            <param name="scopes">The scopes for the token.</param>
        </member>
        <member name="P:Octokit.NewImpersonationToken.Scopes">
            <summary>
            The scopes for the token
            </summary>
        </member>
        <member name="T:Octokit.NewIssue">
            <summary>
            Describes a new issue to create via the <see cref="M:Octokit.IIssuesClient.Create(System.String,System.String,Octokit.NewIssue)" /> method.
            </summary>
        </member>
        <member name="M:Octokit.NewIssue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewIssue"/> class.
            </summary>
            <param name="title">The title of the issue.</param>
        </member>
        <member name="P:Octokit.NewIssue.Title">
            <summary>
            Title of the milestone (required)
            </summary>
        </member>
        <member name="P:Octokit.NewIssue.Body">
            <summary>
            Details about the issue.
            </summary>
        </member>
        <member name="P:Octokit.NewIssue.Assignees">
            <summary>
            List of logins for the multiple users that this issue should be assigned to
            </summary>
            <remarks>
            Only users with push access can set the multiple assignees for new issues.  The assignees are silently dropped otherwise.
            </remarks>
        </member>
        <member name="P:Octokit.NewIssue.Milestone">
            <summary>
            Milestone to associate this issue with.
            </summary>
            <remarks>
            Only users with push access can set the milestone for new issues. The milestone is silently dropped
            otherwise
            </remarks>
        </member>
        <member name="P:Octokit.NewIssue.Labels">
            <summary>
            Labels to associate with this issue.
            </summary>
            <remarks>
            Only users with push access can set labels for new issues. Labels are silently dropped otherwise.
            </remarks>
        </member>
        <member name="T:Octokit.NewLabel">
            <summary>
            Describes a new label to create via the <see cref="M:Octokit.IIssuesLabelsClient.Create(System.String,System.String,Octokit.NewLabel)"/> method.
            </summary>
        </member>
        <member name="M:Octokit.NewLabel.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewLabel"/> class.
            </summary>
            <param name="name">The name of the label.</param>
            <param name="color">The color of the label.</param>
        </member>
        <member name="P:Octokit.NewLabel.Name">
            <summary>
            Name of the label (required).
            </summary>
            <remarks>
            Emoji can be added to label names, using either native emoji or colon-style markup. For example,
            typing :strawberry: will render the emoji for strawberry. For a full list of available emoji and codes, see http://emoji-cheat-sheet.com/.
            </remarks>
        </member>
        <member name="P:Octokit.NewLabel.Color">
            <summary>
            Color of the label (required).
            </summary>
            <remarks>
            The hexadecimal color code for the label, without the leading #.
            </remarks>
        </member>
        <member name="P:Octokit.NewLabel.Description">
            <summary>
            A short description of the label (optional).
            </summary>
        </member>
        <member name="T:Octokit.NewMerge">
            <summary>
            Used to merge branches in a repository.
            </summary>
            <remarks>
            <para>
            The Repo Merging API supports merging branches in a repository. This accomplishes essentially the same thing
             as merging one branch into another in a local repository and then pushing to GitHub. The benefit is that the
             merge is done on the server side and a local repository is not needed. This makes it more appropriate for
             automation and other tools where maintaining local repositories would be cumbersome and inefficient.
            </para>
            <para>API: https://developer.github.com/v3/repos/merging/</para>
            </remarks>
        </member>
        <member name="M:Octokit.NewMerge.#ctor(System.String,System.String)">
            <summary>
            Create a new commit which has multiple parents (i.e. a merge commit)
            </summary>
            <param name="base">The name of the base branch that the head will be merged into</param>
            <param name="head">The head to merge. This can be a branch name or a commit SHA1.</param>
        </member>
        <member name="P:Octokit.NewMerge.CommitMessage">
            <summary>
            Gets or sets the commit message.
            </summary>
            <value>
            The commit message.
            </value>
        </member>
        <member name="P:Octokit.NewMerge.Base">
            <summary>
            The name of the base branch that the head will be merged into (REQUIRED).
            </summary>
            <value>
            The base.
            </value>
        </member>
        <member name="P:Octokit.NewMerge.Head">
            <summary>
            The head to merge. This can be a branch name or a commit SHA1 (REQUIRED).
            </summary>
            <value>
            The head.
            </value>
        </member>
        <member name="T:Octokit.NewMilestone">
            <summary>
            Describes a new milestone to create via the <see cref="M:Octokit.IMilestonesClient.Create(System.String,System.String,Octokit.NewMilestone)"/> method.
            </summary>
        </member>
        <member name="M:Octokit.NewMilestone.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewMilestone"/> class.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="P:Octokit.NewMilestone.Title">
            <summary>
            Title of the milestone (required)
            </summary>
        </member>
        <member name="P:Octokit.NewMilestone.State">
            <summary>
            Whether the milestone is open or closed. The default is <see cref="F:Octokit.ItemState.Open"/>.
            </summary>
        </member>
        <member name="P:Octokit.NewMilestone.Description">
            <summary>
            Optional description for the milestone.
            </summary>
        </member>
        <member name="P:Octokit.NewMilestone.DueOn">
            <summary>
            An optional date when the milestone is due.
            </summary>
        </member>
        <member name="T:Octokit.NewOrganizationHook">
            <summary>
            Creates a Webhook for the organization.
            </summary>
            <remarks>
            To create a webhook, the following fields are required by the config:
            <list type="bullet">
            <item>
              <term>url</term>
              <description>A required string defining the URL to which the payloads will be delivered.</description>
            </item>
            <item>
              <term>content_type</term>
              <description>
                An optional string defining the media type used to serialize the payloads. Supported values include json and
                form. The default is form.
              </description>
            </item>
            <item>
              <term>secret</term>
              <description>
                An optional string that’s passed with the HTTP requests as an X-Hub-Signature header. The value of this
                header is computed as the HMAC hex digest of the body, using the secret as the key.
              </description>
            </item>
            <item>
              <term>insecure_ssl:</term>
              <description>
                An optional string that determines whether the SSL certificate of the host for url will be verified when 
                delivering payloads. Supported values include "0" (verification is performed) and "1" (verification is not 
                performed). The default is "0".
              </description>
            </item>
            </list>
            <para>
            API: https://developer.github.com/v3/repos/hooks/#create-a-hook
            </para>
            </remarks>
        </member>
        <member name="M:Octokit.NewOrganizationHook.#ctor(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewOrganizationHook"/> class.
            </summary>
            <param name="name">
            Use "web" for a webhook or use the name of a valid service. (See 
            <see href="https://api.github.com/hooks">https://api.github.com/hooks</see> for the list of valid service
            names.)
            </param>
            <param name="config">
            Key/value pairs to provide settings for this hook. These settings vary between the services and are
            defined in the github-services repository. Booleans are stored internally as “1” for true, and “0” for
            false. Any JSON true/false values will be converted automatically.
            </param>
        </member>
        <member name="P:Octokit.NewOrganizationHook.Name">
            <summary>
            Gets the name of the hook to create. Use "web" for a webhook or use the name of a valid service. (See 
            <see href="https://api.github.com/hooks">https://api.github.com/hooks</see> for the list of valid service
            names.)
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Octokit.NewOrganizationHook.Config">
            <summary>
            Key/value pairs to provide settings for this hook. These settings vary between the services and are
            defined in the github-services repository. Booleans are stored internally as “1” for true, and “0” for
            false. Any JSON true/false values will be converted automatically.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="P:Octokit.NewOrganizationHook.Events">
            <summary>
            Determines what events the hook is triggered for. Default: ["push"]
            </summary>
            <value>
            The events.
            </value>
        </member>
        <member name="P:Octokit.NewOrganizationHook.Active">
            <summary>
            Determines whether the hook is actually triggered on pushes.
            </summary>
            <value>
              <c>true</c> if active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Octokit.NewOrganizationWebHook">
            <summary>
            Creates a Webhook for the repository.
            </summary>
            <remarks>
            To create a webhook, the following fields are required by the config:
            <list type="bullet">
            <item>
              <term>url</term>
              <description>A required string defining the URL to which the payloads will be delivered.</description>
            </item>
            <item>
              <term>content_type</term>
              <description>
                An optional string defining the media type used to serialize the payloads. Supported values include json and
                form. The default is form.
              </description>
            </item>
            <item>
              <term>secret</term>
              <description>
                An optional string that’s passed with the HTTP requests as an X-Hub-Signature header. The value of this
                header is computed as the HMAC hex digest of the body, using the secret as the key.
              </description>
            </item>
            <item>
              <term>insecure_ssl:</term>
              <description>
                An optional string that determines whether the SSL certificate of the host for url will be verified when 
                delivering payloads. Supported values include "0" (verification is performed) and "1" (verification is not 
                performed). The default is "0".
              </description>
            </item>
            </list>
            <para>
            API: https://developer.github.com/v3/repos/hooks/#create-a-hook
            </para>
            </remarks>   
        </member>
        <member name="M:Octokit.NewOrganizationWebHook.#ctor(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewOrganizationWebHook"/> class.   
            Using default values for ContentType, Secret and InsecureSsl.     
            </summary>
            <param name="name">
            Use "web" for a webhook or use the name of a valid service. (See 
            <see href="https://api.github.com/hooks">https://api.github.com/hooks</see> for the list of valid service
            names.)
            </param>
            <param name="config">
            Key/value pairs to provide settings for this hook. These settings vary between the services and are
            defined in the github-services repository. Booleans are stored internally as “1” for true, and “0” for
            false. Any true/false values will be converted automatically.
            </param>
            <param name="url">
            A required string defining the URL to which the payloads will be delivered.
            </param>
        </member>
        <member name="P:Octokit.NewOrganizationWebHook.Url">
            <summary>
            Gets the URL of the hook to create.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:Octokit.NewOrganizationWebHook.ContentType">
            <summary>
            Gets the content type used to serialize the payload. The default is `form`.
            </summary>
            <value>
            The content type.
            </value>
        </member>
        <member name="P:Octokit.NewOrganizationWebHook.Secret">
            <summary>
            Gets the secret used as the key for the HMAC hex digest
            of the body passed with the HTTP requests as an X-Hub-Signature header.
            </summary>
            <value>
            The secret.
            </value>
        </member>
        <member name="P:Octokit.NewOrganizationWebHook.InsecureSsl">
            <summary>
            Gets whether the SSL certificate of the host will be verified when 
            delivering payloads. The default is `false`.
            </summary>
            <value>
             <c>true</c> if SSL certificate verification is not performed; 
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Octokit.OrgWebHookContentType">
            <summary>
            The supported content types for payload serialization.
            </summary>
        </member>
        <member name="M:Octokit.NewProject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewProject"/> class.
            </summary>
            <param name="name">The name of the project.</param>
        </member>
        <member name="P:Octokit.NewProject.Name">
            <summary>
            Required. Gets or sets the name of the project.
            </summary>
        </member>
        <member name="P:Octokit.NewProject.Body">
            <summary>
            Optional. Gets or sets the body of the project.
            </summary>
        </member>
        <member name="P:Octokit.NewProjectCard.Note">
            <summary>
            The note of the card.
            </summary>
        </member>
        <member name="P:Octokit.NewProjectCard.ContentId">
            <summary>
            The id of the Issue or Pull Request to associate with this card.
            </summary>
        </member>
        <member name="P:Octokit.NewProjectCard.ContentType">
            <summary>
            The type of content to associate with this card.
            </summary>
        </member>
        <member name="P:Octokit.NewProjectColumn.Name">
            <summary>
            Required. Gets or sets the name of the column.
            </summary>
        </member>
        <member name="T:Octokit.NewPublicKey">
            <summary>
            Used to create a public SSH key
            </summary>
        </member>
        <member name="P:Octokit.NewPublicKey.Title">
            <summary>
            The title of the key
            </summary>
        </member>
        <member name="P:Octokit.NewPublicKey.Key">
            <summary>
            The Key data
            </summary>
        </member>
        <member name="T:Octokit.NewPullRequest">
            <summary>
            Describes a new pull request to create via the <see cref="M:Octokit.IPullRequestsClient.Create(System.String,System.String,Octokit.NewPullRequest)"/> method.
            </summary>
        </member>
        <member name="M:Octokit.NewPullRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewPullRequest"/> class.
            </summary>
            <param name="title">The title of the pull request.</param>
            <param name="head">The branch (or git ref where your changes are implemented. In other words, the source branch/ref</param>
            <param name="baseRef">The base (or git ref) reference you want your changes pulled into. In other words, the target branch/ref</param>
        </member>
        <member name="M:Octokit.NewPullRequest.#ctor(System.Int64,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewPullRequest"/> class.
            </summary>
            <param name="issueId">The number of an existing issue to convert into a pull request.</param>
            <param name="head">The branch (or git ref where your changes are implemented. In other words, the source branch/ref</param>
            <param name="baseRef">The base (or git ref) reference you want your changes pulled into. In other words, the target branch/ref</param>
        </member>
        <member name="P:Octokit.NewPullRequest.Title">
            <summary>
            Title of the pull request (required if <see cref="T:Octokit.Issue"/> not provided).
            </summary>
        </member>
        <member name="P:Octokit.NewPullRequest.IssueId">
            <summary>
            The number of an existing issue to convert into a pull request (required if <see cref="P:Octokit.NewPullRequest.Title"/> not provided).
            </summary>
        </member>
        <member name="P:Octokit.NewPullRequest.Base">
            <summary>
            The branch (or git ref) you want your changes pulled into (required).
            </summary>
        </member>
        <member name="P:Octokit.NewPullRequest.Head">
            <summary>
            The branch (or git ref) where your changes are implemented (required).
            </summary>
        </member>
        <member name="P:Octokit.NewPullRequest.MaintainerCanModify">
            <summary>
            Whether maintainers of the base repository can push to the HEAD branch (optional).
            </summary>
        </member>
        <member name="P:Octokit.NewPullRequest.Body">
            <summary>
            Body of the pull request (optional)
            </summary>
        </member>
        <member name="P:Octokit.NewPullRequest.Draft">
            <summary>
            Whether the pull request is in a draft state or not (optional)
            </summary>
        </member>
        <member name="M:Octokit.NewReaction.#ctor(Octokit.ReactionType)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewReaction"/> class.
            </summary>
            <param name="content">The reaction type.</param>
        </member>
        <member name="P:Octokit.NewReaction.Content">
            <summary>
            The reaction type (required)
            </summary>
        </member>
        <member name="T:Octokit.NewReference">
            <summary>
            Used to create a new Git reference.
            </summary>
            <remarks>API: https://developer.github.com/v3/git/refs/#create-a-reference</remarks>
        </member>
        <member name="M:Octokit.NewReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewReference"/> class.
            </summary>
            <param name="reference">
            The name of the fully qualified reference (ie: refs/heads/main). If it doesn’t start with ‘refs’ and
             have at least two slashes, it will be rejected.
            </param>
            <param name="sha">The SHA1 value to set this reference to</param>
        </member>
        <member name="P:Octokit.NewReference.Ref">
            <summary>
            The name of the fully qualified reference (ie: refs/heads/main). If it doesn’t start with ‘refs’ and
            have at least two slashes, it will be rejected.
            </summary>
            <value>
            The reference.
            </value>
        </member>
        <member name="P:Octokit.NewReference.Sha">
            <summary>
            The SHA1 value to set this reference to
            </summary>
            <value>
            The sha.
            </value>
        </member>
        <member name="T:Octokit.NewRelease">
            <summary>
            Used to create a new release.
            </summary>
            <remarks>
            API: https://docs.github.com/rest/releases/releases#create-a-release
            </remarks>
        </member>
        <member name="M:Octokit.NewRelease.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewRelease"/> class.
            </summary>
            <param name="tagName">Name of the tag to create in the repository for this release.</param>
        </member>
        <member name="P:Octokit.NewRelease.TagName">
            <summary>
            Gets the name of the tag.
            </summary>
            <value>
            The name of the tag.
            </value>
        </member>
        <member name="P:Octokit.NewRelease.TargetCommitish">
            <summary>
            Specifies the commitish value that determines where the Git tag is created from. Can be any branch or
            commit SHA. Unused if the Git tag already exists. Default: the repository�s default branch
            (usually main).
            </summary>
            <value>
            The target commitish.
            </value>
        </member>
        <member name="P:Octokit.NewRelease.Name">
            <summary>
            Gets or sets the name of the release.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Octokit.NewRelease.Body">
            <summary>
            Gets or sets the text describing the contents of the tag.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="P:Octokit.NewRelease.Draft">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Octokit.NewRelease"/> is a draft (unpublished).
            Default: false
            </summary>
            <value>
              <c>true</c> if draft; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Octokit.NewRelease.Prerelease">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Octokit.NewRelease"/> is prerelease.
            </summary>
            <value>
              <c>true</c> if prerelease; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Octokit.NewRelease.DiscussionCategoryName">
            <summary>
            If specified, a discussion of the specified category is created and linked to the release.
            The value must be a category that already exists in the repository.
            <value>
            The discussion category name.
            </value>
            </summary>
        </member>
        <member name="P:Octokit.NewRelease.GenerateReleaseNotes">
            <summary>
            Gets or sets a value indicating whether to automatically generate the name and body for this release.
            If <see cref="P:Octokit.NewRelease.Name">name</see> is specified, the specified name will be used; otherwise, a name will
            be automatically generated. If <see cref="P:Octokit.NewRelease.Body">body</see> is specified, the body will be pre-pended to the
            automatically generated notes.
            </summary>
            <value>
              <c>true</c> to generate release notes; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Octokit.NewRelease.MakeLatest">
            <summary>
            Specifies whether this release should be set as the latest release for the repository.
            Drafts and prereleases cannot be set as latest. Defaults to true for newly published releases.
            </summary>
            <value>
              <c>True</c> set release as latest;
              <c>Legacy</c> specifies that the latest release should be determined based on the release creation date and higher semantic version.
            </value>
        </member>
        <member name="T:Octokit.NewRepository">
            <summary>
            Describes a new repository to create via the <see cref="M:Octokit.IRepositoriesClient.Create(Octokit.NewRepository)"/> method.
            </summary>
        </member>
        <member name="M:Octokit.NewRepository.#ctor(System.String)">
            <summary>
            Creates an object that describes the repository to create on GitHub.
            </summary>
            <param name="name">The name of the repository. This is the only required parameter.</param>
        </member>
        <member name="P:Octokit.NewRepository.AutoInit">
            <summary>
            Optional. Gets or sets whether to create an initial commit with empty README. The default is false.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.Description">
            <summary>
            Required. Gets or sets the new repository's description
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.HasDownloads">
            <summary>
            Optional. Gets or sets whether to enable downloads for the new repository. The default is true.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.HasIssues">
            <summary>
            Optional. Gets or sets whether to enable issues for the new repository. The default is true.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.HasProjects">
            <summary>
            Optional. Gets or sets whether to enable projects for the new repository. The default is true.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.HasWiki">
            <summary>
            Optional. Gets or sets whether to enable the wiki for the new repository. The default is true.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.IsTemplate">
            <summary>
            Either true to make this repo available as a template repository or false to prevent it. Default: false.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.Homepage">
            <summary>
            Optional. Gets or sets the new repository's optional website.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.GitignoreTemplate">
            <summary>
            Optional. Gets or sets the desired language's or platform's .gitignore template to apply. Use the name of the template without the extension; "Haskell", for example. Ignored if <see cref="P:Octokit.NewRepository.AutoInit"/> is null or false.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.LicenseTemplate">
            <summary>
            Optional. Gets or sets the desired LICENSE template to apply. Use the name of the template without
            the extension. For example, “mit” or “mozilla”.
            </summary>
            <remarks>
            The list of license templates are here: https://github.com/github/choosealicense.com/tree/gh-pages/_licenses
            Just omit the ".txt" file extension for the template name.
            </remarks>
        </member>
        <member name="P:Octokit.NewRepository.Name">
            <summary>
            Required. Gets or sets the new repository's name.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.Private">
            <summary>
            Optional. Gets or sets whether the new repository is private; the default is false.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.TeamId">
            <summary>
            Optional. Gets or sets the Id of the team to grant access to this repository. This is only valid when creating a repository for an organization.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.Visibility">
            <summary>
            Optional. Gets or sets whether the new repository is public, private, or internal. A value provided here overrides any value set in the existing private field.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.AllowRebaseMerge">
            <summary>
            Optional. Gets or sets whether the new repository allows rebase merges.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.AllowSquashMerge">
            <summary>
            Optional. Gets or sets whether the new repository allows squash merges.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.AllowMergeCommit">
            <summary>
            Optional. Gets or sets whether the new repository allows merge commits.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.AllowAutoMerge">
            <summary>
            Optional. Gets or sets whether the new repository allows auto merge.
            </summary>
        </member>
        <member name="P:Octokit.NewRepository.UseSquashPrTitleAsDefault">
            <summary>
            Optional. Gets or sets whether the squash pr title is used as default when using Squash Merge. Default is false. Cannot currently be tested as it isn't returned in the GET method.
            </summary>
        </member>
        <member name="T:Octokit.RepositoryVisibility">
            <summary>
            The properties that repositories can be visible by.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryVisibility.Public">
            <summary>
            Sets repository visibility to public
            </summary>
        </member>
        <member name="F:Octokit.RepositoryVisibility.Private">
            <summary>
            Sets repository visibility to private
            </summary>
        </member>
        <member name="F:Octokit.RepositoryVisibility.Internal">
            <summary>
            Sets repository visibility to internal
            </summary>
        </member>
        <member name="T:Octokit.NewRepositoryFork">
            <summary>
            Used to fork a repository.
            </summary>
            <remarks>
            API: https://developer.github.com/v3/repos/forks/#create-a-fork
            </remarks>
        </member>
        <member name="P:Octokit.NewRepositoryFork.Organization">
            <summary>
            Gets or sets the organization name to fork into (Optional). If not specified, creates a fork for the
            authenticated user.
            </summary>
            <value>
            The organization.
            </value>
        </member>
        <member name="T:Octokit.NewRepositoryFromTemplate">
            <summary>
            Describes a new repository to create via the <see cref="M:Octokit.IRepositoriesClient.Generate(System.String,System.String,Octokit.NewRepositoryFromTemplate)"/> method.
            </summary>
        </member>
        <member name="M:Octokit.NewRepositoryFromTemplate.#ctor(System.String)">
            <summary>
            Creates an object that describes the repository to create on GitHub.
            </summary>
            <param name="name">The name of the repository. This is the only required parameter.</param>
        </member>
        <member name="P:Octokit.NewRepositoryFromTemplate.Owner">
            <summary>
            Optional. The organization or person who will own the new repository.
            To create a new repository in an organization, the authenticated user must be a member of the specified organization.
            </summary>
        </member>
        <member name="P:Octokit.NewRepositoryFromTemplate.Name">
            <summary>
            Required. The name of the new repository.
            </summary>
        </member>
        <member name="P:Octokit.NewRepositoryFromTemplate.Description">
            <summary>
            Optional. A short description of the new repository.
            </summary>
        </member>
        <member name="P:Octokit.NewRepositoryFromTemplate.Private">
            <summary>
            Optional. Either true to create a new private repository or false to create a new public one. Default: false
            </summary>
        </member>
        <member name="T:Octokit.NewRepositoryHook">
            <summary>
            Creates a Webhook for the repository.
            </summary>
            <remarks>
            To create a webhook, the following fields are required by the config:
            <list type="bullet">
            <item>
              <term>url</term>
              <description>A required string defining the URL to which the payloads will be delivered.</description>
            </item>
            <item>
              <term>content_type</term>
              <description>
                An optional string defining the media type used to serialize the payloads. Supported values include json and
                form. The default is form.
              </description>
            </item>
            <item>
              <term>secret</term>
              <description>
                An optional string that’s passed with the HTTP requests as an X-Hub-Signature header. The value of this
                header is computed as the HMAC hex digest of the body, using the secret as the key.
              </description>
            </item>
            <item>
              <term>insecure_ssl:</term>
              <description>
                An optional string that determines whether the SSL certificate of the host for url will be verified when 
                delivering payloads. Supported values include "0" (verification is performed) and "1" (verification is not 
                performed). The default is "0".
              </description>
            </item>
            </list>
            <para>
            API: https://developer.github.com/v3/repos/hooks/#create-a-hook
            </para>
            </remarks>
        </member>
        <member name="M:Octokit.NewRepositoryHook.#ctor(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewRepositoryHook"/> class.
            </summary>
            <param name="name">
            Use "web" for a webhook or use the name of a valid service. (See 
            <see href="https://api.github.com/hooks">https://api.github.com/hooks</see> for the list of valid service
            names.)
            </param>
            <param name="config">
            Key/value pairs to provide settings for this hook. These settings vary between the services and are
            defined in the github-services repository. Booleans are stored internally as “1” for true, and “0” for
            false. Any JSON true/false values will be converted automatically.
            </param>
        </member>
        <member name="P:Octokit.NewRepositoryHook.Name">
            <summary>
            Gets the name of the hook to create. Use "web" for a webhook or use the name of a valid service. (See 
            <see href="https://api.github.com/hooks">https://api.github.com/hooks</see> for the list of valid service
            names.)
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Octokit.NewRepositoryHook.Config">
            <summary>
            Key/value pairs to provide settings for this hook. These settings vary between the services and are
            defined in the github-services repository. Booleans are stored internally as “1” for true, and “0” for
            false. Any JSON true/false values will be converted automatically.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="P:Octokit.NewRepositoryHook.Events">
            <summary>
            Determines what events the hook is triggered for. Default: ["push"]
            </summary>
            <value>
            The events.
            </value>
        </member>
        <member name="P:Octokit.NewRepositoryHook.Active">
            <summary>
            Determines whether the hook is actually triggered on pushes.
            </summary>
            <value>
              <c>true</c> if active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Octokit.NewRepositoryWebHook">
            <summary>
            Creates a Webhook for the repository.
            </summary>
            <remarks>
            To create a webhook, the following fields are required by the config:
            <list type="bullet">
            <item>
              <term>url</term>
              <description>A required string defining the URL to which the payloads will be delivered.</description>
            </item>
            <item>
              <term>content_type</term>
              <description>
                An optional string defining the media type used to serialize the payloads. Supported values include json and
                form. The default is form.
              </description>
            </item>
            <item>
              <term>secret</term>
              <description>
                An optional string that’s passed with the HTTP requests as an X-Hub-Signature header. The value of this
                header is computed as the HMAC hex digest of the body, using the secret as the key.
              </description>
            </item>
            <item>
              <term>insecure_ssl:</term>
              <description>
                An optional string that determines whether the SSL certificate of the host for url will be verified when
                delivering payloads. Supported values include "0" (verification is performed) and "1" (verification is not
                performed). The default is "0".
              </description>
            </item>
            </list>
            <para>
            API: https://developer.github.com/v3/repos/hooks/#create-a-hook
            </para>
            </remarks>
        </member>
        <member name="M:Octokit.NewRepositoryWebHook.#ctor(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewRepositoryWebHook"/> class.
            Using default values for ContentType, Secret and InsecureSsl.
            </summary>
            <param name="name">
            Use "web" for a webhook or use the name of a valid service. (See
            <see href="https://api.github.com/hooks">https://api.github.com/hooks</see> for the list of valid service
            names.)
            </param>
            <param name="config">
            Key/value pairs to provide settings for this hook. These settings vary between the services and are
            defined in the github-services repository. Booleans are stored internally as “1” for true, and “0” for
            false. Any true/false values will be converted automatically.
            </param>
            <param name="url">
            A required string defining the URL to which the payloads will be delivered.
            </param>
        </member>
        <member name="P:Octokit.NewRepositoryWebHook.Url">
            <summary>
            Gets the URL of the hook to create.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:Octokit.NewRepositoryWebHook.ContentType">
            <summary>
            Gets the content type used to serialize the payload. The default is `form`.
            </summary>
            <value>
            The content type.
            </value>
        </member>
        <member name="P:Octokit.NewRepositoryWebHook.Secret">
            <summary>
            Gets the secret used as the key for the HMAC hex digest
            of the body passed with the HTTP requests as an X-Hub-Signature header.
            </summary>
            <value>
            The secret.
            </value>
        </member>
        <member name="P:Octokit.NewRepositoryWebHook.InsecureSsl">
            <summary>
            Gets whether the SSL certificate of the host will be verified when
            delivering payloads. The default is `false`.
            </summary>
            <value>
             <c>true</c> if SSL certificate verification is not performed;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Octokit.WebHookContentType">
            <summary>
            The supported content types for payload serialization.
            </summary>
        </member>
        <member name="T:Octokit.NewSubscription">
            <summary>
            Used to watch a repository (subscribe to repository's notifications). Called by the 
            <see cref="M:Octokit.IWatchedClient.WatchRepo(System.String,System.String,Octokit.NewSubscription)"/> method.
            </summary>
            <remarks>
            API: https://developer.github.com/v3/activity/watching/#set-a-repository-subscription
            </remarks>
        </member>
        <member name="P:Octokit.NewSubscription.Subscribed">
            <summary>
            Determines if notifications should be received from this repository.
            </summary>
            <remarks>
            If you would like to watch a repository, set subscribed to true. If you would like to ignore notifications
            made within a repository, set ignored to true. If you would like to stop watching a repository, delete the 
            repository’s subscription completely using the <see cref="M:Octokit.IWatchedClient.UnwatchRepo(System.String,System.String)"/> method.
            </remarks>
        </member>
        <member name="P:Octokit.NewSubscription.Ignored">
            <summary>
            Determines if all notifications should be blocked from this repository.
            </summary>
        </member>
        <member name="T:Octokit.NewTag">
            <summary>
            Used to create a new tag
            </summary>
            <remarks>
            Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create
             an annotated tag in Git, you have to do this call to create the tag object, and then create the
             refs/tags/[tag] reference. If you want to create a lightweight tag, you only have to create the tag reference
             - this call would be unnecessary.
            </remarks>
        </member>
        <member name="P:Octokit.NewTag.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="P:Octokit.NewTag.Message">
            <summary>
            Gets or sets the tag message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Octokit.NewTag.Object">
            <summary>
            The SHA of the git object this is tagging
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Octokit.NewTag.Type">
            <summary>
            The type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Octokit.NewTag.Tagger">
            <summary>
            An object with information about the individual creating the tag.
            </summary>
            <value>
            The tagger.
            </value>
        </member>
        <member name="T:Octokit.NewTeam">
            <summary>
            Used to create a team.
            </summary>
            <remarks>
            <para>
            In order to create a team, the authenticated user must be a member of :org.
            </para>
            <para>API: https://developer.github.com/v3/orgs/teams/#create-team</para>
            </remarks>
        </member>
        <member name="M:Octokit.NewTeam.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewTeam"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Octokit.NewTeam.Name">
            <summary>
            The name of the team (required).
            </summary>
        </member>
        <member name="P:Octokit.NewTeam.Description">
            <summary>
            The description of the team.
            </summary>
        </member>
        <member name="P:Octokit.NewTeam.Maintainers">
            <summary>
            The logins of organization members to add as maintainers of the team
            </summary>
        </member>
        <member name="P:Octokit.NewTeam.RepoNames">
            <summary>
            The full name (e.g., "organization-name/repository-name") of repositories to add the team to
            </summary>
        </member>
        <member name="P:Octokit.NewTeam.Privacy">
            <summary>
            The level of privacy this team should have (default: Secret)
            </summary>
        </member>
        <member name="P:Octokit.NewTeam.Permission">
            <summary>
            The permission that new repositories will be added to the team with when none is specified (default: Pull)
            </summary>
        </member>
        <member name="P:Octokit.NewTeam.ParentTeamId">
            <summary>
            Id of a team to set as the parent team
            </summary>
        </member>
        <member name="T:Octokit.NewThreadSubscription">
            <summary>
            Represents updatable fields for a users subscription to a given thread
            </summary>
        </member>
        <member name="P:Octokit.NewThreadSubscription.Subscribed">
            <summary>
            Determines if notifications should be received from this thread
            </summary>
        </member>
        <member name="P:Octokit.NewThreadSubscription.Ignored">
            <summary>
            Determines if all notifications should be blocked from this thread
            </summary>
        </member>
        <member name="T:Octokit.NewTree">
            <summary>
            Used to create a new Tree.
            </summary>
            <remarks>
            The tree creation API will take nested entries as well. If both a tree and a nested path modifying that tree 
            are specified, it will overwrite the contents of that tree with the new path contents and write a new tree out.
            </remarks>
        </member>
        <member name="P:Octokit.NewTree.BaseTree">
            <summary>
            The SHA1 of the tree you want to update with new data.
            </summary>
        </member>
        <member name="P:Octokit.NewTree.Tree">
            <summary>
            The list of Tree Items for this new Tree item.
            </summary>
        </member>
        <member name="T:Octokit.NewTreeItem">
            <summary>
            A tree item that would be included as part of a <see cref="T:Octokit.NewTree"/> when creating a tree.
            </summary>
        </member>
        <member name="P:Octokit.NewTreeItem.Path">
            <summary>
            The file referenced in the tree.
            </summary>
        </member>
        <member name="P:Octokit.NewTreeItem.Mode">
            <summary>
            String of the file mode - one of 100644 for file (blob), 
            100755 for executable (blob), 040000 for subdirectory (tree), 
            160000 for submodule (commit) or 
            120000 for a blob that specifies the path of a symlink
            </summary>
        </member>
        <member name="P:Octokit.NewTreeItem.Type">
            <summary>
            The type of tree item this is.
            </summary>
        </member>
        <member name="P:Octokit.NewTreeItem.Sha">
            <summary>
            The SHA for this Tree item.
            </summary>
        </member>
        <member name="P:Octokit.NewTreeItem.Content">
            <summary>
            Gets or sets the content you want this file to have. GitHub will write this blob out and use that SHA 
            for this entry. Use either this, or tree.sha.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="T:Octokit.NewUser">
            <summary>
            Describes a new user to create via the <see cref="M:Octokit.IUserAdministrationClient.Create(Octokit.NewUser)"/> method.
            </summary>
        </member>
        <member name="M:Octokit.NewUser.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.NewUser"/> class.
            </summary>
            <param name="login">The login for the user.</param>
            <param name="email">The email address of the user</param>
        </member>
        <member name="P:Octokit.NewUser.Login">
            <summary>
            Login of the user
            </summary>
        </member>
        <member name="P:Octokit.NewUser.Email">
            <summary>
            Email address of the user
            </summary>
        </member>
        <member name="T:Octokit.NotificationsRequest">
            <summary>
            Specifies the parameters to filter notifications by
            </summary>
        </member>
        <member name="P:Octokit.NotificationsRequest.All">
            <summary>
            If true, show notifications marked as read. Default: false
            </summary>
        </member>
        <member name="P:Octokit.NotificationsRequest.Participating">
            <summary>
            If true, only shows notifications in which the user is directly participating or mentioned. Default: false
            </summary>
        </member>
        <member name="P:Octokit.NotificationsRequest.Since">
            <summary>
            Only show notifications updated after the given time. Defaults to the everything if unspecified.
            </summary>
        </member>
        <member name="P:Octokit.NotificationsRequest.Before">
            <summary>
            Only show notifications updated before the given time.
            </summary>
            <remarks>
            This is sent as a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
            </remarks>
            <value>
            The before.
            </value>
        </member>
        <member name="T:Octokit.OauthDeviceFlowRequest">
            <summary>
            Used to create an Oauth device flow initiation request.
            </summary>
        </member>
        <member name="M:Octokit.OauthDeviceFlowRequest.#ctor(System.String)">
            <summary>
            Creates an instance of the OAuth login request with the required parameter.
            </summary>
            <param name="clientId">The client Id you received from GitHub when you registered the application.</param>
        </member>
        <member name="P:Octokit.OauthDeviceFlowRequest.ClientId">
            <summary>
            The client Id you received from GitHub when you registered the application.
            </summary>
        </member>
        <member name="P:Octokit.OauthDeviceFlowRequest.Scopes">
            <summary>
            A set of scopes to request. If not provided, scope defaults to an empty list of scopes for users that don’t
            have a valid token for the app. For users who do already have a valid token for the app, the user won't be
            shown the OAuth authorization page with the list of scopes. Instead, this step of the flow will
            automatically complete with the same scopes that were used last time the user completed the flow.
            </summary>
            <remarks>
            See the <see href="https://developer.github.com/v3/oauth/#scopes">scopes documentation</see> for more
            information about scopes.
            </remarks>
        </member>
        <member name="T:Octokit.OauthLoginRequest">
            <summary>
            Used to initiate an OAuth2 authentication flow from 3rd party web sites.
            </summary>
        </member>
        <member name="M:Octokit.OauthLoginRequest.#ctor(System.String)">
            <summary>
            Creates an instance of the OAuth login request with the required parameter.
            </summary>
            <param name="clientId">The client Id you received from GitHub when you registered the application.</param>
        </member>
        <member name="P:Octokit.OauthLoginRequest.ClientId">
            <summary>
            The client Id you received from GitHub when you registered the application.
            </summary>
        </member>
        <member name="P:Octokit.OauthLoginRequest.RedirectUri">
            <summary>
            The URL in your app where users will be sent after authorization.
            </summary>
            <remarks>
            See the documentation about <see href="https://developer.github.com/v3/oauth/#redirect-urls">redirect urls
            </see> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.OauthLoginRequest.Login">
            <summary>
            Suggests a specific account to use for signing in and authorizing the app.
            </summary>
        </member>
        <member name="P:Octokit.OauthLoginRequest.Scopes">
            <summary>
            A set of scopes to request. If not provided, scope defaults to an empty list of scopes for users that don’t
            have a valid token for the app. For users who do already have a valid token for the app, the user won’t be
            shown the OAuth authorization page with the list of scopes. Instead, this step of the flow will
            automatically complete with the same scopes that were used last time the user completed the flow.
            </summary>
            <remarks>
            See the <see href="https://developer.github.com/v3/oauth/#scopes">scopes documentation</see> for more
            information about scopes.
            </remarks>
        </member>
        <member name="P:Octokit.OauthLoginRequest.State">
            <summary>
            An unguessable random string. It is used to protect against cross-site request forgery attacks. In ASP.NET
            MVC this would correspond to an anti-forgery token.
            </summary>
        </member>
        <member name="P:Octokit.OauthLoginRequest.AllowSignup">
            <summary>
            Whether or not unauthenticated users will be offered an option to sign up for GitHub during the OAuth flow.
            The default is <c>true</c>. Use <c>false</c> in the case that a policy prohibits signups.
            </summary>
        </member>
        <member name="T:Octokit.OauthTokenRenewalRequest">
            <summary>
            Used to create an Oauth login request.
            </summary>
        </member>
        <member name="M:Octokit.OauthTokenRenewalRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates an instance of the OAuth token refresh request.
            </summary>
            <param name="clientId">The client Id you received from GitHub when you registered the application.</param>
            <param name="clientSecret">The client secret you received from GitHub when you registered.</param>
            <param name="refreshToken">The refresh token you received when making the original oauth token request.</param>
        </member>
        <member name="P:Octokit.OauthTokenRenewalRequest.ClientId">
            <summary>
            The client Id you received from GitHub when you registered the application.
            </summary>
        </member>
        <member name="P:Octokit.OauthTokenRenewalRequest.ClientSecret">
            <summary>
            The client secret you received from GitHub when you registered.
            </summary>
        </member>
        <member name="P:Octokit.OauthTokenRenewalRequest.GrantType">
            <summary>
            The type of grant. Should be ommited, unless renewing an access token.
            </summary>
        </member>
        <member name="P:Octokit.OauthTokenRenewalRequest.RefreshToken">
            <summary>
            The refresh token you received as a response to making the <see cref="M:Octokit.IOauthClient.CreateAccessToken(Octokit.OauthTokenRequest)">OAuth login
            request</see>.
            </summary>
        </member>
        <member name="T:Octokit.OauthTokenRequest">
            <summary>
            Used to create an Oauth login request.
            </summary>
        </member>
        <member name="M:Octokit.OauthTokenRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates an instance of the OAuth login request with the required parameter.
            </summary>
            <param name="clientId">The client Id you received from GitHub when you registered the application.</param>
            <param name="clientSecret">The client secret you received from GitHub when you registered.</param>
            <param name="code">The code you received as a response to making the OAuth login request</param>
        </member>
        <member name="P:Octokit.OauthTokenRequest.ClientId">
            <summary>
            The client Id you received from GitHub when you registered the application.
            </summary>
        </member>
        <member name="P:Octokit.OauthTokenRequest.ClientSecret">
            <summary>
            The client secret you received from GitHub when you registered.
            </summary>
        </member>
        <member name="P:Octokit.OauthTokenRequest.Code">
            <summary>
            The code you received as a response to making the <see cref="M:Octokit.IOauthClient.CreateAccessToken(Octokit.OauthTokenRequest)">OAuth login
            request</see>.
            </summary>
        </member>
        <member name="P:Octokit.OauthTokenRequest.RedirectUri">
            <summary>
            The URL in your app where users will be sent after authorization.
            </summary>
            <remarks>
            See the documentation about <see href="https://developer.github.com/v3/oauth/#redirect-urls">redirect urls
            </see> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.OauthTokenRequestForDeviceFlow">
            <summary>
            Used to create an Oauth login request for the device flow.
            </summary>
        </member>
        <member name="M:Octokit.OauthTokenRequestForDeviceFlow.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the OAuth login request with the required parameter.
            </summary>
            <param name="clientId">The client Id you received from GitHub when you registered the application.</param>
            <param name="deviceCode">The device code you received from the device flow initiation call.</param>
        </member>
        <member name="P:Octokit.OauthTokenRequestForDeviceFlow.ClientId">
            <summary>
            The client Id you received from GitHub when you registered the application.
            </summary>
        </member>
        <member name="P:Octokit.OauthTokenRequestForDeviceFlow.DeviceCode">
            <summary>
            The device code you received from the device flow initiation call.
            </summary>
        </member>
        <member name="P:Octokit.OauthTokenRequestForDeviceFlow.GrantType">
            <summary>
            The authorization grant type.
            </summary>
        </member>
        <member name="T:Octokit.OrganizationInvitationRequest">
            <summary>
            Used as part of the request to invite a user to an organization.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationInvitationRequest.InviteeId">
            <summary>
            The user ID of the person being invited. Required if Email is not specified.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationInvitationRequest.Email">
            <summary>
            The email address of the person being invited. Required if InviteeId is not specified.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationInvitationRequest.Role">
            <summary>
            The role to give the user in the organization. The default is <see cref="F:Octokit.OrganizationMembershipRole.DirectMember"/>.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationInvitationRequest.TeamIds">
            <summary>
            The IDs for the team(s) to invite new members to
            </summary>
        </member>
        <member name="P:Octokit.OrganizationMembershipUpdate.Role">
            <summary>
            The role to give the user in the organization. The default is <see cref="F:Octokit.MembershipRole.Member"/>.
            </summary>
        </member>
        <member name="M:Octokit.OrganizationOidcSubjectClaimRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.OrganizationOidcSubjectClaimRequest"/> class
            </summary>
            <param name="includeClaimKeys">Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.</param>
        </member>
        <member name="P:Octokit.OrganizationOidcSubjectClaimRequest.IncludeClaimKeys">
            <summary>
            Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.
            </summary>
        </member>
        <member name="T:Octokit.OrganizationRequest">
            <summary>
            Used as part of the request to retrieve all organizations.
            </summary>
        </member>
        <member name="M:Octokit.OrganizationRequest.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.OrganizationRequest"/> class.
            </summary>
            <param name="since">The integer Id of the last Organization that you've seen.</param>
        </member>
        <member name="P:Octokit.OrganizationRequest.Since">
            <summary>
            Gets or sets the integer Id of the last Organization that you've seen.
            </summary>
        </member>
        <member name="T:Octokit.OrganizationUpdate">
            <summary>
            Represents updateable fields on an organization. Values that are null will not be sent in the request.
            Use string.empty to clear a value.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationUpdate.BillingEmail">
            <summary>
            Billing email address. This address is not publicized.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationUpdate.Company">
            <summary>
            The company name.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationUpdate.Email">
            <summary>
            The publicly visible email address.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationUpdate.Location">
            <summary>
            The location.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationUpdate.Name">
            <summary>
            The shorthand name of the company.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationUpdate.Description">
            <summary>
            Gets or sets the description of the organization.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Octokit.PendingDeploymentReview.EnvironmentIds">
            <summary>
            The list of environment Ids to approve or reject.
            </summary>
        </member>
        <member name="P:Octokit.PendingDeploymentReview.State">
            <summary>
            Whether to approve or reject deployment to the specified environments.
            </summary>
        </member>
        <member name="P:Octokit.PendingDeploymentReview.Comment">
            <summary>
            A comment to accompany the deployment review.
            </summary>
        </member>
        <member name="T:Octokit.ProjectCardRequest">
            <summary>
            Used to filter requests for lists of projects 
            </summary>
        </member>
        <member name="M:Octokit.ProjectCardRequest.#ctor">
            <summary>
            Used to filter requests for lists of projects
            </summary>
        </member>
        <member name="M:Octokit.ProjectCardRequest.#ctor(Octokit.ProjectCardArchivedStateFilter)">
            <summary>
            Used to filter requests for lists of projects
            </summary>
            <param name="archived">Which project cards to include.</param>
        </member>
        <member name="P:Octokit.ProjectCardRequest.ArchivedState">
            <summary>
            Which project cards to include./>.
            </summary>
        </member>
        <member name="F:Octokit.ProjectCardArchivedStateFilter.NotArchived">
            <summary>
            Items that are open.
            </summary>
        </member>
        <member name="F:Octokit.ProjectCardArchivedStateFilter.Archived">
            <summary>
            Items that are closed.
            </summary>
        </member>
        <member name="F:Octokit.ProjectCardArchivedStateFilter.All">
            <summary>
            All the items.
            </summary>
        </member>
        <member name="P:Octokit.ProjectCardUpdate.Note">
            <summary>
            The new note of the card.
            </summary>
        </member>
        <member name="P:Octokit.ProjectCardUpdate.Archived">
            <summary>
            Archive/Unarchive the card.
            </summary>
        </member>
        <member name="P:Octokit.ProjectColumnUpdate.Name">
            <summary>
            Required. Gets or sets the name of the column.
            </summary>
        </member>
        <member name="T:Octokit.ProjectRequest">
            <summary>
            Used to filter requests for lists of projects 
            </summary>
        </member>
        <member name="P:Octokit.ProjectRequest.State">
            <summary>
            Which projects to get. The default is <see cref="F:Octokit.ItemStateFilter.Open"/>.
            </summary>
        </member>
        <member name="P:Octokit.ProjectUpdate.Name">
            <summary>
            The new name of the project.
            </summary>
        </member>
        <member name="P:Octokit.ProjectUpdate.Body">
            <summary>
            The new body of the project.
            </summary>
        </member>
        <member name="P:Octokit.ProjectUpdate.State">
            <summary>
            The new state of the project.
            </summary>
        </member>
        <member name="T:Octokit.PublicRepositoryRequest">
            <summary>
            Used as part of the request to retrieve all public repositories.
            </summary>
        </member>
        <member name="M:Octokit.PublicRepositoryRequest.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.PublicRepositoryRequest"/> class.
            </summary>
            <param name="since">The Id of the last Repository that you’ve seen.</param>
        </member>
        <member name="P:Octokit.PublicRepositoryRequest.Since">
            <summary>
            Gets or sets the integer Id of the last Repository that you’ve seen.
            </summary>
            <value>
            The since.
            </value>
        </member>
        <member name="T:Octokit.PullRequestRequest">
            <summary>
            Used to filter requests for lists of pull requests.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestRequest.State">
            <summary>
            Which PullRequests to get. The default is <see cref="F:Octokit.ItemStateFilter.Open"/>
            </summary>
        </member>
        <member name="P:Octokit.PullRequestRequest.Head">
            <summary>
            Filter pulls by head user and branch name in the format of "user:ref-name".
            </summary>
        </member>
        <member name="P:Octokit.PullRequestRequest.Base">
            <summary>
            Filter pulls by base branch name.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestRequest.SortProperty">
            <summary>
            What property to sort pull requests by.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestRequest.SortDirection">
            <summary>
            What direction to sort the pull requests.
            </summary>
        </member>
        <member name="F:Octokit.PullRequestSort.Created">
            <summary>
            Sort by created date (default)
            </summary>
        </member>
        <member name="F:Octokit.PullRequestSort.Updated">
            <summary>
            Sort by last updated date
            </summary>
        </member>
        <member name="F:Octokit.PullRequestSort.Popularity">
            <summary>
            Sort by popularity (comment count)
            </summary>
        </member>
        <member name="F:Octokit.PullRequestSort.LongRunning">
            <summary>
            Sort by age (filtering by pulls updated in the last month)
            </summary>
        </member>
        <member name="T:Octokit.PullRequestReviewCommentCreate">
            <summary>
            Used to create a pull request review comment.
            </summary>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentCreate.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Creates a comment
            </summary>
            <param name="body">The text of the comment</param>
            <param name="commitId">The SHA of the commit to comment on</param>
            <param name="path">The relative path of the file to comment on</param>
            <param name="position">The line index in the diff to comment on</param>
        </member>
        <member name="P:Octokit.PullRequestReviewCommentCreate.Body">
            <summary>
            The text of the comment.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewCommentCreate.CommitId">
            <summary>
            The SHA of the commit to comment on.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewCommentCreate.Path">
            <summary>
            The relative path of the file to comment on.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewCommentCreate.Position">
            <summary>
            The line index in the diff to comment on.
            </summary>
        </member>
        <member name="T:Octokit.PullRequestReviewCommentEdit">
            <summary>
            Used to edit a pull request review comment
            </summary>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentEdit.#ctor(System.String)">
            <summary>
            Creates an edit to a comment
            </summary>
            <param name="body">The new text of the comment</param>
        </member>
        <member name="P:Octokit.PullRequestReviewCommentEdit.Body">
            <summary>
            The new text of the comment.
            </summary>
        </member>
        <member name="T:Octokit.PullRequestReviewCommentReplyCreate">
            <summary>
            Used to create a reply to a pull request review comment.
            </summary>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentReplyCreate.#ctor(System.String,System.Int32)">
            <summary>
            Creates a comment that is replying to another comment.
            </summary>
            <param name="body">The text of the comment</param>
            <param name="inReplyTo">The comment Id to reply to</param>
        </member>
        <member name="P:Octokit.PullRequestReviewCommentReplyCreate.Body">
            <summary>
            The text of the comment.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewCommentReplyCreate.InReplyTo">
            <summary>
            The comment Id to reply to.
            </summary>
        </member>
        <member name="T:Octokit.PullRequestReviewCommentRequest">
            <summary>
            Used to filter pull request review comments.
            </summary>
        </member>
        <member name="M:Octokit.PullRequestReviewCommentRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.PullRequestReviewCommentRequest"/> class.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewCommentRequest.Sort">
            <summary>
            Can be either created or updated. Default: created.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewCommentRequest.Direction">
            <summary>
            Can be either asc or desc. Default: asc.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewCommentRequest.Since">
            <summary>
            Only comments updated at or after this time are returned. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
            </summary>
        </member>
        <member name="T:Octokit.PullRequestReviewCreate">
            <summary>
            Used to create a pull request review
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewCreate.CommitId">
            <summary>
            The Commit ID which the review is being created for. Default is the latest.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewCreate.Body">
            <summary>
            The body of the review message
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewCreate.Event">
            <summary>
            The review event - Approve, Request Changes, Comment or leave blank (null) for Pending.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewCreate.Comments">
            <summary>
            List of comments to include with this review
            </summary>
        </member>
        <member name="T:Octokit.PullRequestReviewDismiss">
            <summary>
            Used to dismiss a pull request review
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewDismiss.Message">
            <summary>
            The message explaining why this review is being dismissed
            </summary>
        </member>
        <member name="T:Octokit.PullRequestReviewRequest">
            <summary>
            Used to add and delete pull request review requests.
            </summary>
            <remarks>
            API: https://developer.github.com/v3/pulls/review_requests/#create-a-review-request
            API: https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request
            </remarks>
        </member>
        <member name="T:Octokit.PullRequestReviewSubmit">
            <summary>
            Used to submit a pending pull request review
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewSubmit.Body">
            <summary>
            The body of the review message
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewSubmit.Event">
            <summary>
            The review event - Approve, Request Changes, Comment
            </summary>
        </member>
        <member name="F:Octokit.PullRequestReviewEvent.Approve">
            <summary>
            The review is approved
            </summary>
        </member>
        <member name="F:Octokit.PullRequestReviewEvent.RequestChanges">
            <summary>
            The review requests changes that must be addressed before merging
            </summary>
        </member>
        <member name="F:Octokit.PullRequestReviewEvent.Comment">
            <summary>
            The review provides comment without explicit approval
            </summary>
        </member>
        <member name="T:Octokit.PullRequestUpdate">
            <summary>
            Used to update an existing pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestUpdate.Title">
            <summary>
            Title of the pull request (required)
            </summary>
        </member>
        <member name="P:Octokit.PullRequestUpdate.State">
            <summary>
            Whether the pull request is open or closed. The default is <see cref="F:Octokit.ItemState.Open"/>.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestUpdate.Body">
            <summary>
            The body for the pull request. Supports GFM.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestUpdate.Base">
            <summary>
            The base branch of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestUpdate.MaintainerCanModify">
            <summary>
            Whether maintainers of the base repository can push to the HEAD branch.
            </summary>
        </member>
        <member name="T:Octokit.ReferenceUpdate">
            <summary>
            Upsed to update a Git reference.
            </summary>
        </member>
        <member name="M:Octokit.ReferenceUpdate.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ReferenceUpdate"/> class.
            </summary>
            <param name="sha">The sha.</param>
        </member>
        <member name="M:Octokit.ReferenceUpdate.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ReferenceUpdate"/> class.
            </summary>
            <param name="sha">The SHA1 value to set this reference to.</param>
            <param name="force">
            Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this
            out or setting it to false will make sure you’re not overwriting work.
            </param>
        </member>
        <member name="P:Octokit.ReferenceUpdate.Sha">
            <summary>
            The SHA1 value to set this reference to.
            </summary>
            <value>
            The sha.
            </value>
        </member>
        <member name="P:Octokit.ReferenceUpdate.Force">
            <summary>
            Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this
            out or setting it to false will make sure you’re not overwriting work.
            </summary>
            <value>
              <c>true</c> if force; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Octokit.ReleaseAssetUpdate">
            <summary>
            Used to update a release asset.
            </summary>
        </member>
        <member name="M:Octokit.ReleaseAssetUpdate.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ReleaseAssetUpdate"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Octokit.ReleaseAssetUpdate.Name">
            <summary>
            The file name of the asset.
            This field is required.
            </summary>
        </member>
        <member name="P:Octokit.ReleaseAssetUpdate.Label">
            <summary>
            An alternate description of the asset.
            Used in place of the filename.
            </summary>
        </member>
        <member name="T:Octokit.ReleaseAssetUpload">
            <summary>
            Used to upload a release asset.
            </summary>
            <remarks>
            This endpoint makes use of a Hypermedia relation to determine which URL to access. This endpoint is provided
            by a URI template in the release�s API response. You need to use an HTTP client which supports SNI to make
            calls to this endpoint. The asset data is expected in its raw binary form, rather than JSON. Everything else
             about the endpoint is the same as the rest of the API. For example, you�ll still need to pass your
             authentication to be able to upload an asset.
            </remarks>
        </member>
        <member name="M:Octokit.ReleaseAssetUpload.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ReleaseAssetUpload"/> class.
            </summary>
        </member>
        <member name="M:Octokit.ReleaseAssetUpload.#ctor(System.String,System.String,System.IO.Stream,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ReleaseAssetUpload"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="contentType">
            The content type of the asset. Example: "application/zip". For a list of acceptable types, refer this list 
            of <see href="https://en.wikipedia.org/wiki/Media_type#List_of_common_media_types">common media types</see>.
            </param>
            <param name="rawData">The raw data.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="P:Octokit.ReleaseAssetUpload.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Octokit.ReleaseAssetUpload.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="P:Octokit.ReleaseAssetUpload.RawData">
            <summary>
            Gets or sets the raw data.
            </summary>
            <value>
            The raw data.
            </value>
        </member>
        <member name="P:Octokit.ReleaseAssetUpload.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
            <value>
            The timeout.
            </value>
        </member>
        <member name="T:Octokit.ReleaseUpdate">
            <summary>
            Used to update a release.
            </summary>
            <remarks>
            API: https://docs.github.com/rest/releases/releases#update-a-release
            </remarks>
        </member>
        <member name="P:Octokit.ReleaseUpdate.TagName">
            <summary>
            Gets the name of the tag.
            </summary>
            <value>
            The name of the tag.
            </value>
        </member>
        <member name="P:Octokit.ReleaseUpdate.TargetCommitish">
            <summary>
            Specifies the commitish value that determines where the Git tag is created from. Can be any branch or
            commit SHA. Unused if the Git tag already exists. Default: the repository�s default branch
            (usually main).
            </summary>
            <value>
            The target commitish.
            </value>
        </member>
        <member name="P:Octokit.ReleaseUpdate.Name">
            <summary>
            Gets or sets the name of the release.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Octokit.ReleaseUpdate.Body">
            <summary>
            Gets or sets the text describing the contents of the tag.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="P:Octokit.ReleaseUpdate.Draft">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Octokit.ReleaseUpdate"/> is a draft (unpublished).
            Default: false
            </summary>
            <value>
              <c>true</c> if draft; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Octokit.ReleaseUpdate.Prerelease">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Octokit.ReleaseUpdate"/> is prerelease.
            </summary>
            <value>
              <c>true</c> if prerelease; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Octokit.ReleaseUpdate.MakeLatest">
            <summary>
            Specifies whether this release should be set as the latest release for the repository.
            Drafts and prereleases cannot be set as latest. Defaults to true for newly published releases.
            </summary>
            <value>
              <c>True</c> set release as latest;
              <c>Legacy</c> specifies that the latest release should be determined based on the release creation date and higher semantic version.
            </value>
        </member>
        <member name="T:Octokit.RepositoryCollaboratorListRequest">
            <summary>
            Used to request and filter a list of repository collaborators
            </summary>
        </member>
        <member name="M:Octokit.RepositoryCollaboratorListRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.RepositoryCollaboratorListRequest" /> class.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryCollaboratorListRequest.Affiliation">
            <summary>
            Gets or sets the collaborator affiliation property.
            </summary>
            <value>
            The collaborator affiliation
            </value>
        </member>
        <member name="P:Octokit.RepositoryCollaboratorListRequest.Permission">
            <summary>
            Filter collaborators by the permissions they have on the repository. If not specified, all collaborators will be returned.
            </summary>
        </member>
        <member name="T:Octokit.CollaboratorAffiliation">
            <summary>
            The collaborator affiliation
            </summary>
        </member>
        <member name="F:Octokit.CollaboratorAffiliation.All">
            <summary>
            All collaborators the authenticated user can see.
            </summary>
        </member>
        <member name="F:Octokit.CollaboratorAffiliation.Direct">
            <summary>
            All collaborators with permissions to an organization-owned repository,
            regardless of organization membership status.
            </summary>
        </member>
        <member name="F:Octokit.CollaboratorAffiliation.Outside">
            <summary>
            All outside collaborators of an organization-owned repository.
            </summary>
        </member>
        <member name="T:Octokit.RepositoryForksListRequest">
            <summary>
            Used to request and filter a list of repository forks.
            </summary>
        </member>
        <member name="M:Octokit.RepositoryForksListRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.RepositoryForksListRequest"/> class.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryForksListRequest.Sort">
            <summary>
            Gets or sets the sort property.
            </summary>
            <value>
            The sort.
            </value>
        </member>
        <member name="T:Octokit.Sort">
            <summary>
            The sort order.
            </summary>
        </member>
        <member name="F:Octokit.Sort.Newest">
            <summary>
            Sort by date and show the newest first.
            </summary>
        </member>
        <member name="F:Octokit.Sort.Oldest">
            <summary>
            Sort by date and show the oldest first.
            </summary>
        </member>
        <member name="F:Octokit.Sort.Stargazers">
            <summary>
            Sort by the number of stargazers.
            </summary>
        </member>
        <member name="T:Octokit.RepositoryIssueRequest">
            <summary>
            Used to request and filter a list of repository issues.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryIssueRequest.Milestone">
            <summary>
            Identifies a filter for the milestone. Use "*" for issues with any milestone.
            Use the milestone number for a specific milestone. Use the value "none" for issues with any milestones.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryIssueRequest.Assignee">
            <summary>
            Filter on the user assigned for the request
            </summary>
            <remarks>
            Specify "none" for issues with no assigned user
            </remarks>
        </member>
        <member name="P:Octokit.RepositoryIssueRequest.Creator">
            <summary>
            The user that created the issue
            </summary>
        </member>
        <member name="P:Octokit.RepositoryIssueRequest.Mentioned">
            <summary>
            A user that’s mentioned in the issue
            </summary>
        </member>
        <member name="M:Octokit.RepositoryOidcSubjectClaimRequest.#ctor(System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.RepositoryOidcSubjectClaimRequest"/> class
            </summary>
            <param name="useDefault">Whether to use the default template or not. If true, the IncludeClaimKeys field is ignored.</param>
            <param name="includeClaimKeys">Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.</param>
        </member>
        <member name="P:Octokit.RepositoryOidcSubjectClaimRequest.UseDefault">
            <summary>
            Whether to use the default template or not. If true, the IncludeClaimKeys field is ignored.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryOidcSubjectClaimRequest.IncludeClaimKeys">
            <summary>
            Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.
            </summary>
        </member>
        <member name="M:Octokit.RepositoryPermissionRequest.#ctor(Octokit.TeamPermissionLegacy)">
            <summary>
            Used to add or update a team repository.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryPermissionRequest.Permission">
            <summary>
            The permission to grant the team on this repository.
            </summary>        
        </member>
        <member name="T:Octokit.RepositoryRequest">
            <summary>
            Used to request and filter a list of repositories.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryRequest.Type">
            <summary>
            Gets or sets the repository type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Octokit.RepositoryRequest.Sort">
            <summary>
            Gets or sets the sort property.
            </summary>
            <value>
            The sort.
            </value>
        </member>
        <member name="P:Octokit.RepositoryRequest.Direction">
            <summary>
            Gets or sets the sort direction.
            </summary>
            <value>
            The direction.
            </value>
        </member>
        <member name="P:Octokit.RepositoryRequest.Visibility">
            <summary>
            Gets or sets the visibility property.
            </summary>
            <value>
             The visibility.
            </value>
        </member>
        <member name="P:Octokit.RepositoryRequest.Affiliation">
            <summary>
            Gets or sets the affiliation property.
            </summary>
            <value>
             The affiliation.
            </value>
        </member>
        <member name="T:Octokit.RepositoryType">
            <summary>
            The properties that repositories can be filtered by.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryType.All">
            <summary>
            Return all repositories.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryType.Owner">
            <summary>
            Return repositories that the current authenticated user owns.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryType.Public">
            <summary>
            Returns public repositories.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryType.Private">
            <summary>
            The privateReturn private repositories.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryType.Member">
            <summary>
            Return repositories for which the current authenticated user is a member of the org or team.
            </summary>
        </member>
        <member name="T:Octokit.RepositorySort">
            <summary>
            The properties that repositories can be sorted by.
            </summary>
        </member>
        <member name="F:Octokit.RepositorySort.Created">
            <summary>
            Sort by the date the repository was created.
            </summary>
        </member>
        <member name="F:Octokit.RepositorySort.Updated">
            <summary>
            Sort by the date the repository was last updated.
            </summary>
        </member>
        <member name="F:Octokit.RepositorySort.Pushed">
            <summary>
            Sort by the date the repository was last pushed.
            </summary>
        </member>
        <member name="F:Octokit.RepositorySort.FullName">
            <summary>
            Sort by the repository name.
            </summary>
        </member>
        <member name="T:Octokit.RepositoryRequestVisibility">
            <summary>
            The properties that repositories can be visible by.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryRequestVisibility.Public">
            <summary>
            Returns only public repositories
            </summary>
        </member>
        <member name="F:Octokit.RepositoryRequestVisibility.Private">
            <summary>
            Returns only private repositories
            </summary>
        </member>
        <member name="F:Octokit.RepositoryRequestVisibility.All">
            <summary>
            Return both public and private repositories
            </summary>
        </member>
        <member name="F:Octokit.RepositoryRequestVisibility.Internal">
            <summary>
            Returns only internal repositories
            </summary>
        </member>
        <member name="T:Octokit.RepositoryAffiliation">
            <summary>
            The properties that repositories can be affiliated by.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryAffiliation.Owner">
            <summary>
            Repositories that are owned by the authenticated user
            </summary>
        </member>
        <member name="F:Octokit.RepositoryAffiliation.Collaborator">
            <summary>
            Repositories that the user has been added to as a collaborator.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryAffiliation.OrganizationMember">
            <summary>
            Repositories that the user has access to through being a member of an organization.
            This includes every repository on every team that the user is on.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryAffiliation.OwnerAndCollaborator">
            <summary>
            Return repositories that are owned by authenticated user and added to as a collaborator.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryAffiliation.OwnerAndOrganizationMember">
            <summary>
            Return repositories that are owned by authenticated user or user is a organization member.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryAffiliation.CollaboratorAndOrganizationMember">
            <summary>
            Return repositories that user has been added as collaborator or user is a organization member.
            </summary>
        </member>
        <member name="F:Octokit.RepositoryAffiliation.All">
            <summary>
            Returns all repositories where user is owner,collaborator or organization member.
            </summary>
        </member>
        <member name="T:Octokit.RepositoryTransfer">
            <summary>
            Describes the transfer of a repository to a new owner.
            </summary>
        </member>
        <member name="M:Octokit.RepositoryTransfer.#ctor(System.String)">
            <summary>
            Creates a new repository transfer description with no team Ids.
            </summary>
            <param name="newOwner">The new owner of the repository after the transfer.</param>
        </member>
        <member name="M:Octokit.RepositoryTransfer.#ctor(System.String,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Creates a new repository transfer description.
            </summary>
            <param name="newOwner">The new owner of the repository after the transfer.</param>
            <param name="teamIds">A list of team Ids to add to the repository after the transfer (only applies to transferring to an Organization).</param>
        </member>
        <member name="P:Octokit.RepositoryTransfer.NewOwner">
            <summary>
            The new owner of the repository after the transfer.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryTransfer.TeamIds">
            <summary>
            A list of team Ids to add to the repository after the transfer (only applies to transferring to an Organization).
            </summary>
        </member>
        <member name="T:Octokit.RepositoryUpdate">
            <summary>
            Represents updatable fields on a repository. Values that are null will not be sent in the request.
            Use string.empty if you want to clear a value.
            </summary>
        </member>
        <member name="M:Octokit.RepositoryUpdate.#ctor">
            <summary>
            Creates an object that describes an update to a repository on GitHub.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.Name">
            <summary>
            Required. Gets or sets the repository name.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.Description">
            <summary>
            Optional. Gets or sets the repository description. The default is null (do not update)
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.Homepage">
            <summary>
            Optional. Gets or sets the repository homepage url. The default is null (do not update).
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.Private">
            <summary>
            Gets or sets whether to make the repository private. The default is null (do not update).
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.Visibility">
            <summary>
            Optional. Gets or sets whether the new repository is public, private, or internal. A value provided here overrides any value set in the existing private field.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.HasIssues">
            <summary>
            Gets or sets whether to enable issues for the repository. The default is null (do not update). The default when created is true.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.HasProjects">
            <summary>
            Gets or sets whether to enable projects for the repository. The default is null (do not update). The default when created is true.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.HasWiki">
            <summary>
            Optional. Gets or sets whether to enable the wiki for the repository. The default is null (do not update). The default when created is true.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.HasDownloads">
            <summary>
            Optional. Gets or sets whether to enable downloads for the repository. The default is null (do not update). No longer appears on the documentation but still works.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.IsTemplate">
            <summary>
            Optional. Gets or sets whether the repository is a template. The default is null (do not update). The default when created is false.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.DefaultBranch">
            <summary>
            Optional. Gets or sets the default branch. The default is null (do not update).
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.AllowSquashMerge">
            <summary>
            Optional. Allows the "Squash Merge" merge method to be used. The default is null (do not update). The default when created is true.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.AllowMergeCommit">
            <summary>
            Optional. Allows the "Create a merge commit" merge method to be used. The default is null (do not update). The default when created is true.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.AllowRebaseMerge">
            <summary>
            Optional. Allows the "Rebase and Merge" method to be used. The default is null (do not update). The default when created is true.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.AllowAutoMerge">
            <summary>
            Optional. Allows the auto merge feature to be used. The default is null (do not update). The default when created is false.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.DeleteBranchOnMerge">
            <summary>
            Optional. Automatically delete branches on PR merge. The default is null (do not update). The default when created is false.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.UseSquashPrTitleAsDefault">
            <summary>
            Optional. Automatically set the title of squashed commits to be the PR title. The default is null (do not update). The default when created is false.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.Archived">
            <summary>
            Optional. True to archive this repository.  Note: you cannot unarchive repositories through the API. The default is null (do not update). The default when created is false.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.AllowForking">
            <summary>
            Optional. Get or set whether to allow this repository to be forked or not. The default is null (do not update). The default when created is false.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.AllowUpdateBranch">
            <summary>
            Optional. Get or set whether to always allow a pull request head branch that is behind its base branch
            to be updated even if it is not required to be up to date before merging, or false otherwise.
            The default is null (do not update). The default when created is false.
            Available since GitHub Enterprise 3.1 (2021-05-06)
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.WebCommitSignoffRequired">
            <summary>
            Optional. Either true to require contributors to sign off on web-based commits, or false to not require contributors to sign off on web-based commits.
            The default when created is false.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryUpdate.HasDiscussions">
            <summary>
            Optional. Gets or sets whether to enable discussions for the repository. The default is null (do not update). The default when created is false.
            </summary>
        </member>
        <member name="T:Octokit.RequestParameters">
            <summary>
            Base class for classes which represent query string parameters to certain API endpoints.
            </summary>
        </member>
        <member name="M:Octokit.RequestParameters.ToParametersDictionary">
            <summary>
            Converts the derived object into a dictionary that can be used to supply query string parameters.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Octokit.SearchCodeRequest">
            <summary>
            Searching Code/Files
            http://developer.github.com/v3/search/#search-code
            </summary>
        </member>
        <member name="M:Octokit.SearchCodeRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.SearchCodeRequest"/> class.
            </summary>
        </member>
        <member name="M:Octokit.SearchCodeRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.SearchCodeRequest"/> class.
            </summary>
            <param name="term">The search term.</param>
        </member>
        <member name="M:Octokit.SearchCodeRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.SearchCodeRequest"/> class.
            </summary>
            <param name="term">The term.</param>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Octokit.SearchCodeRequest.SortField">
            <summary>
            Optional Sort field. Can only be indexed, which indicates how recently 
            a file has been indexed by the GitHub search infrastructure. 
            If not provided, results are sorted by best match.
            </summary>
            <remarks>
            http://developer.github.com/v3/search/#search-code
            </remarks>
        </member>
        <member name="F:Octokit.SearchCodeRequest._inQualifier">
            <summary>
            Qualifies which fields are searched. With this qualifier you can restrict 
            the search to just the file contents, the file path, or both.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-code#search-in
            </remarks>
        </member>
        <member name="P:Octokit.SearchCodeRequest.Language">
            <summary>
            Searches code based on the language it’s written in.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-code#language
            </remarks>
        </member>
        <member name="P:Octokit.SearchCodeRequest.Forks">
            <summary>
            Specifies that code from forked repositories should be searched. 
            Repository forks will not be searchable unless the fork has more 
            stars than the parent repository.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-code#forks
            </remarks>
        </member>
        <member name="P:Octokit.SearchCodeRequest.Size">
            <summary>
            Finds files that match a certain size (in bytes).
            </summary>
            <remarks>
            https://help.github.com/articles/searching-code#size
            </remarks>
        </member>
        <member name="P:Octokit.SearchCodeRequest.Path">
            <summary>
            Specifies the path that the resulting file must be at.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-code#path
            </remarks>
        </member>
        <member name="P:Octokit.SearchCodeRequest.Extensions">
            <summary>
            Matches files with certain extensions.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-code#extension
            </remarks>
        </member>
        <member name="P:Octokit.SearchCodeRequest.FileName">
            <summary>
            Matches specific file names
            </summary>
            <remarks>
            https://help.github.com/articles/searching-code/#search-by-filename
            </remarks>
        </member>
        <member name="P:Octokit.SearchCodeRequest.Users">
            <summary>
            Limits searches to specific users.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-code#users-organizations-and-repositories
            </remarks>
        </member>
        <member name="P:Octokit.SearchCodeRequest.Organizations">
            <summary>
            Limits searches to specific organizations.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-code/#search-within-a-users-or-organizations-repositories
            </remarks>
        </member>
        <member name="P:Octokit.SearchCodeRequest.Repos">
            <summary>
            Limits searches to a specific repository.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-code#users-organizations-and-repositories
            </remarks>
        </member>
        <member name="T:Octokit.SearchIssuesRequest">
            <summary>
            Searching Issues
            </summary>
        </member>
        <member name="M:Octokit.SearchIssuesRequest.#ctor">
            <summary>
            Search without specifying a keyword
            </summary>
        </member>
        <member name="M:Octokit.SearchIssuesRequest.#ctor(System.String)">
            <summary>
            Search using a specify keyword
            </summary>
            <param name="term">The term to filter on</param>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.SortField">
            <summary>
            Optional Sort field. One of comments, created, updated or merged
            If not provided, results are sorted by best match.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#sort-the-results
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Type">
            <summary>
            With this qualifier you can restrict the search to issues or pull request only.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-issues-or-pull-requests
            </remarks>
        </member>
        <member name="F:Octokit.SearchIssuesRequest._inQualifier">
            <summary>
            Qualifies which fields are searched. With this qualifier you can restrict
            the search to just the title, body, comments, or any combination of these.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#scope-the-search-fields
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Author">
            <summary>
            Finds issues created by a certain user.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-the-author-of-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Assignee">
            <summary>
            Finds issues that are assigned to a certain user.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-the-assignee-of-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Mentions">
            <summary>
            Finds issues that mention a certain user.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-a-mentioned-user-within-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Commenter">
            <summary>
            Finds issues that a certain user commented on.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-a-commenter-within-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Involves">
            <summary>
            Finds issues that were either created by a certain user, assigned to that user,
            mention that user, or were commented on by that user.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-a-user-thats-involved-within-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Team">
            <summary>
            Finds issues that @mention a team within the organization
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-a-team-thats-mentioned-within-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.State">
            <summary>
            Filter issues based on whether they’re open or closed.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-whether-an-issue-or-pull-request-is-open
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Labels">
            <summary>
            Filters issues based on the labels assigned.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-the-labels-on-an-issue
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.No">
            <summary>
            Searches for issues based on missing metadata.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-missing-metadata-on-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Language">
            <summary>
            Searches for issues in repositories that match a certain language.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-the-main-language-of-a-repository
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Is">
            <summary>
            Searches for issues using a more human syntax covering options like state, type, merged status, private/public repository
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-the-state-of-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Created">
            <summary>
            Filters issues based on times of creation.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-when-an-issue-or-pull-request-was-created-or-last-updated
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Updated">
            <summary>
            Filters issues based on times when they were last updated.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-when-an-issue-or-pull-request-was-created-or-last-updated
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Merged">
            <summary>
            Filters pull requests based on times when they were last merged.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-when-a-pull-request-was-merged
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Status">
            <summary>
            Filters pull requests based on the status of the commits.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-commit-status
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Head">
            <summary>
            Filters pull requests based on the branch they came from.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-branch-names
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Base">
            <summary>
            Filters pull requests based on the branch they are merging into.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-branch-names
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Closed">
            <summary>
            Filters issues based on times when they were last closed.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-when-an-issue-or-pull-request-was-closed
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Comments">
            <summary>
            Filters issues based on the quantity of comments.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues#comments
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.User">
            <summary>
            Limits searches to repositories owned by a certain user or organization.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-within-a-users-or-organizations-repositories
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Milestone">
            <summary>
            Gets or sets the milestone to filter issues based on
            </summary>
        </member>
        <member name="P:Octokit.SearchIssuesRequest.Archived">
            <summary>
            Filters issues or pull requests based on whether they are in an archived repository.
            </summary>
        </member>
        <member name="M:Octokit.SearchIssuesRequest.FormatLabel(System.String)">
            <summary>
            Wrap the label in quotes if it contains a space
            </summary>
            <param name="label">The input label</param>
            <returns></returns>
        </member>
        <member name="F:Octokit.IssueSearchSort.Comments">
            <summary>
            search by number of comments
            </summary>
        </member>
        <member name="F:Octokit.IssueSearchSort.Created">
            <summary>
            search by created
            </summary>
        </member>
        <member name="F:Octokit.IssueSearchSort.Updated">
            <summary>
            search by last updated
            </summary>
        </member>
        <member name="F:Octokit.IssueSearchSort.Merged">
            <summary>
            search by last merged
            </summary>
        </member>
        <member name="T:Octokit.SearchIssuesRequestExclusions">
            <summary>
            Searching Issues
            </summary>
        </member>
        <member name="M:Octokit.SearchIssuesRequestExclusions.#ctor">
            <summary>
            Exclusions for Issue Search
            </summary>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.Author">
            <summary>
            Excludes issues created by a certain user.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-the-author-of-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.Assignee">
            <summary>
            Excludes issues that are assigned to a certain user.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-the-assignee-of-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.Mentions">
            <summary>
            Excludes issues that mention a certain user.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-a-mentioned-user-within-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.Commenter">
            <summary>
            Excludes issues that a certain user commented on.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-a-commenter-within-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.Involves">
            <summary>
            Excludes issues that were either created by a certain user, assigned to that user, 
            mention that user, or were commented on by that user.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-a-user-thats-involved-within-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.State">
            <summary>
            Excludes issues based on open/closed state.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-whether-an-issue-or-pull-request-is-open
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.Labels">
            <summary>
            Excludes issues based on the labels assigned.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-the-labels-on-an-issue
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.Language">
            <summary>
            Excludes issues in repositories that match a certain language.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-by-the-main-language-of-a-repository
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.Status">
            <summary>
            Excludes pull requests based on the status of the commits.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-commit-status
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.Head">
            <summary>
            Excludes pull requests based on the branch they came from.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-branch-names
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.Base">
            <summary>
            Excludes pull requests based on the branch they are merging into.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues/#search-based-on-branch-names
            </remarks>
        </member>
        <member name="P:Octokit.SearchIssuesRequestExclusions.Milestone">
            <summary>
            Excludes issues which target the specified milestone.
            </summary>
            <remarks>
            https://help.github.com/articles/searching-issues-and-pull-requests/#search-by-milestone-on-an-issue-or-pull-request
            </remarks>
        </member>
        <member name="T:Octokit.SearchLabelsRequest">
            <summary>
            Search labels
            https://developer.github.com/v3/search/#search-labels
            </summary>
        </member>
        <member name="M:Octokit.SearchLabelsRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.SearchLabelsRequest"/> class.
            </summary>
        </member>
        <member name="M:Octokit.SearchLabelsRequest.#ctor(System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.SearchLabelsRequest"/> class.
            </summary>
            <param name="term">The search term.</param>
            <param name="repositoryId">The repository to search in</param>
        </member>
        <member name="P:Octokit.SearchLabelsRequest.SortField">
            <summary>
            Optional Sort field. One of created or updated.
            If not provided, results are sorted by best match.
            </summary>
        </member>
        <member name="P:Octokit.SearchLabelsRequest.RepositoryId">
            <summary>
            The repository to search in
            </summary>
        </member>
        <member name="F:Octokit.LabelSearchSort.Created">
            <summary>
            search by created
            </summary>
        </member>
        <member name="F:Octokit.LabelSearchSort.Updated">
            <summary>
            search by last updated
            </summary>
        </member>
        <member name="T:Octokit.SearchQualifierOperator">
            <summary>
            Used to qualify a search term.
            </summary>
        </member>
        <member name="F:Octokit.SearchQualifierOperator.GreaterThan">
            <summary>
            Greater than "&gt;"
            </summary>
        </member>
        <member name="F:Octokit.SearchQualifierOperator.LessThan">
            <summary>
            Less than "&lt;"
            </summary>
        </member>
        <member name="F:Octokit.SearchQualifierOperator.LessThanOrEqualTo">
            <summary>
            Less than or equal to. "&lt;="
            </summary>
        </member>
        <member name="F:Octokit.SearchQualifierOperator.GreaterThanOrEqualTo">
            <summary>
            Greater than or equal to. "&gt;="
            </summary>
        </member>
        <member name="T:Octokit.SearchRepositoriesRequest">
            <summary>
            Searching Repositories
            http://developer.github.com/v3/search/#search-repositories
            </summary>
        </member>
        <member name="M:Octokit.SearchRepositoriesRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.SearchRepositoriesRequest"/> class.
            </summary>
        </member>
        <member name="M:Octokit.SearchRepositoriesRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.SearchRepositoriesRequest"/> class.
            </summary>
            <param name="term">The search term.</param>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.SortField">
            <summary>
            For https://help.github.com/articles/searching-repositories#sorting
            Optional Sort field. One of stars, forks, or updated. If not provided, results are sorted by best match.
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.In">
            <summary>
            The in qualifier limits what fields are searched. With this qualifier you can restrict the search to just the repository name, description, README, or any combination of these. 
            Without the qualifier, only the name and description are searched.
            https://help.github.com/articles/searching-repositories#search-in
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.Forks">
            <summary>
            Filters repositories based on the number of forks, and/or whether forked repositories should be included in the results at all.
            https://help.github.com/articles/searching-repositories#forks
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.Fork">
            <summary>
            Filters repositories based whether forked repositories should be included in the results at all.
            Defaults to ExcludeForks
            https://help.github.com/articles/searching-repositories#forks
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.Size">
            <summary>
            The size qualifier finds repository's that match a certain size (in kilobytes).
            https://help.github.com/articles/searching-repositories#size
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.Language">
            <summary>
            Searches repositories based on the language they’re written in.
            https://help.github.com/articles/searching-repositories#languages
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.Stars">
            <summary>
            Searches repositories based on the number of stars.
            https://help.github.com/articles/searching-repositories#stars
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.User">
            <summary>
            Limits searches to a specific user or repository.
            https://help.github.com/articles/searching-repositories#users-organizations-and-repositories
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.Created">
            <summary>
            Filters repositories based on times of creation.
            https://help.github.com/articles/searching-repositories#created-and-last-updated
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.Updated">
            <summary>
            Filters repositories based on when they were last updated.
            https://help.github.com/articles/searching-repositories#created-and-last-updated
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.License">
            <summary>
            Filters repositories based on license
            https://help.github.com/articles/searching-repositories#search-by-license
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.Archived">
            <summary>
            Filters whether archived repositories should be included (true) or not (false).
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.Topic">
            <summary>
            Filters on whether repositories are tagged with the given topic.
            </summary>
        </member>
        <member name="P:Octokit.SearchRepositoriesRequest.Topics">
            <summary>
            Filters on the number of topics that a repository is associated with.
            </summary>
        </member>
        <member name="T:Octokit.InQualifier">
            <summary>
            https://help.github.com/articles/searching-repositories#search-in
            The in qualifier limits what fields are searched. With this qualifier you can restrict the search to just the 
            repository name, description, README, or any combination of these.
            </summary>
        </member>
        <member name="T:Octokit.Range">
            <summary>
            Helper class in generating the range values for a qualifier e.g. In or Size qualifiers
            </summary>
        </member>
        <member name="M:Octokit.Range.#ctor(System.Int32)">
            <summary>
            Matches repositories that are <param name="size">size</param> MB exactly
            </summary>
        </member>
        <member name="M:Octokit.Range.#ctor(System.Int32,System.Int32)">
            <summary>
            Matches repositories that are between <param name="minSize"/> and <param name="maxSize"/> KB
            </summary>
        </member>
        <member name="M:Octokit.Range.#ctor(System.Int32,Octokit.SearchQualifierOperator)">
            <summary>
            Matches repositories with regards to the size <param name="size"/> 
            We will use the <param name="op"/> to see what operator will be applied to the size qualifier
            </summary>
        </member>
        <member name="M:Octokit.Range.LessThan(System.Int32)">
            <summary>
            Helper class that build a <see cref="T:Octokit.Range"/> with a LessThan comparator used for filtering results
            </summary>
        </member>
        <member name="M:Octokit.Range.LessThanOrEquals(System.Int32)">
            <summary>
            Helper class that build a <see cref="T:Octokit.Range"/> with a LessThanOrEqual comparator used for filtering results
            </summary>
        </member>
        <member name="M:Octokit.Range.GreaterThan(System.Int32)">
            <summary>
            Helper class that build a <see cref="T:Octokit.Range"/> with a GreaterThan comparator used for filtering results
            </summary>
        </member>
        <member name="M:Octokit.Range.GreaterThanOrEquals(System.Int32)">
            <summary>
            Helper class that build a <see cref="T:Octokit.Range"/> with a GreaterThanOrEqualTo comparator used for filtering results
            </summary>
        </member>
        <member name="T:Octokit.DateRange">
            <summary>
            helper class in generating the date range values for the date qualifier e.g.
            https://help.github.com/articles/searching-repositories#created-and-last-updated
            </summary>
        </member>
        <member name="M:Octokit.DateRange.#ctor(System.DateTime,Octokit.SearchQualifierOperator)">
            <summary>
            Matches repositories with regards to the <param name="date"/>.
            We will use the <param name="op"/> to see what operator will be applied to the date qualifier
            </summary>
        </member>
        <member name="M:Octokit.DateRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Matches repositories with regards to both the <param name="from"/> and <param name="to"/> dates.
            </summary>
        </member>
        <member name="M:Octokit.DateRange.#ctor(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Matches repositories with regards to both the <param name="from"/> and <param name="to"/> date and time values.
            </summary>
        </member>
        <member name="M:Octokit.DateRange.#ctor(System.DateTimeOffset,Octokit.SearchQualifierOperator)">
            <summary>
            Matches repositories with regards to the <param name="dateTime"/>.
            We will use the <param name="op"/> to see what operator will be applied to the date qualifier
            </summary>
        </member>
        <member name="M:Octokit.DateRange.LessThan(System.DateTime)">
            <summary>
            helper method to create a LessThan Date Comparison
            e.g. &lt; 2011
            </summary>
            <param name="date">date to be used for comparison (times are ignored)</param>
            <returns><see cref="T:Octokit.DateRange"/></returns>
        </member>
        <member name="M:Octokit.DateRange.LessThanOrEquals(System.DateTime)">
            <summary>
            helper method to create a LessThanOrEqualTo Date Comparison
            e.g. &lt;= 2011
            </summary>
            <param name="date">date to be used for comparison (times are ignored)</param>
            <returns><see cref="T:Octokit.DateRange"/></returns>
        </member>
        <member name="M:Octokit.DateRange.GreaterThan(System.DateTime)">
            <summary>
            helper method to create a GreaterThan Date Comparison
            e.g. > 2011
            </summary>
            <param name="date">date to be used for comparison (times are ignored)</param>
            <returns><see cref="T:Octokit.DateRange"/></returns>
        </member>
        <member name="M:Octokit.DateRange.GreaterThanOrEquals(System.DateTime)">
            <summary>
            helper method to create a GreaterThanOrEqualTo Date Comparison
            e.g. >= 2011
            </summary>
            <param name="date">date to be used for comparison (times are ignored)</param>
            <returns><see cref="T:Octokit.DateRange"/></returns>
        </member>
        <member name="M:Octokit.DateRange.Between(System.DateTime,System.DateTime)">
            <summary>
            helper method to create a bounded Date Comparison
            e.g. 2015-08-01..2015-10-31
            </summary>
            <param name="from">earlier date of the two</param>
            <param name="to">latter date of the two</param>
            <returns><see cref="T:Octokit.DateRange"/></returns>
        </member>
        <member name="M:Octokit.DateRange.LessThan(System.DateTimeOffset)">
            <summary>
            helper method to create a LessThan DateTime Comparison
            e.g. &lt; 2011
            </summary>
            <param name="dateTime">datetime to be used for comparison (times are ignored)</param>
            <returns><see cref="T:Octokit.DateRange"/></returns>
        </member>
        <member name="M:Octokit.DateRange.LessThanOrEquals(System.DateTimeOffset)">
            <summary>
            helper method to create a LessThanOrEqualTo DateTime Comparison
            e.g. &lt;= 2011
            </summary>
            <param name="dateTime">datetime to be used for comparison (times are ignored)</param>
            <returns><see cref="T:Octokit.DateRange"/></returns>
        </member>
        <member name="M:Octokit.DateRange.GreaterThan(System.DateTimeOffset)">
            <summary>
            helper method to create a GreaterThan DateTime Comparison
            e.g. > 2011
            </summary>
            <param name="dateTime">datetime to be used for comparison (times are ignored)</param>
            <returns><see cref="T:Octokit.DateRange"/></returns>
        </member>
        <member name="M:Octokit.DateRange.GreaterThanOrEquals(System.DateTimeOffset)">
            <summary>
            helper method to create a GreaterThanOrEqualTo DateTime Comparison
            e.g. >= 2011
            </summary>
            <param name="dateTime">datetime to be used for comparison (times are ignored)</param>
            <returns><see cref="T:Octokit.DateRange"/></returns>
        </member>
        <member name="M:Octokit.DateRange.Between(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            helper method to create a bounded DateTime Comparison
            e.g. 2015-08-01..2015-10-31
            </summary>
            <param name="from">earlier datetime of the two</param>
            <param name="to">latter datetime of the two</param>
            <returns><see cref="T:Octokit.DateRange"/></returns>
        </member>
        <member name="T:Octokit.Language">
            <summary>
            Languages that can be searched on in GitHub
            https://help.github.com/articles/searching-repositories#languages
            </summary>
        </member>
        <member name="T:Octokit.RepoSearchLicense">
            <summary>
            Licenses than can be searched on GitHub
            https://help.github.com/articles/searching-repositories#search-by-license
            </summary>
        </member>
        <member name="T:Octokit.RepoSearchSort">
            <summary>
            sorting repositories by any of below
            https://help.github.com/articles/searching-repositories#sorting
            </summary>
        </member>
        <member name="F:Octokit.RepoSearchSort.Stars">
            <summary>
            search by number of stars
            </summary>
        </member>
        <member name="F:Octokit.RepoSearchSort.Forks">
            <summary>
            search by number of forks
            </summary>
        </member>
        <member name="F:Octokit.RepoSearchSort.Updated">
            <summary>
            search by last updated
            </summary>
        </member>
        <member name="T:Octokit.ForkQualifier">
            <summary>
            https://help.github.com/articles/searching-repositories#forks
            Specifying whether forked repositories should be included in results or not.
            </summary>
        </member>
        <member name="F:Octokit.ForkQualifier.OnlyForks">
            <summary>
            only search for forked repos
            </summary>
        </member>
        <member name="F:Octokit.ForkQualifier.IncludeForks">
            <summary>
            include forked repos into the search
            </summary>
        </member>
        <member name="T:Octokit.SearchUsersRequest">
            <summary>
            Searching Users
            </summary>
        </member>
        <member name="M:Octokit.SearchUsersRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.SearchUsersRequest"/> class.
            </summary>
            <param name="term">The search term.</param>
        </member>
        <member name="P:Octokit.SearchUsersRequest.SortField">
            <summary>
            Optional Sort field. One of followers, repositories, or joined. If not provided (null), results are sorted by best match.
            <remarks>https://help.github.com/articles/searching-users#sorting</remarks>
            </summary>
        </member>
        <member name="P:Octokit.SearchUsersRequest.Sort">
            <summary>
            The sort field as a string.
            </summary>
        </member>
        <member name="P:Octokit.SearchUsersRequest.Followers">
            <summary>
            Filter users based on the number of followers they have.
            <remarks>https://help.github.com/articles/searching-users#followers</remarks>       
            </summary>
        </member>
        <member name="P:Octokit.SearchUsersRequest.Created">
            <summary>
            Filter users based on when they joined.
            <remarks>https://help.github.com/articles/searching-users#created</remarks>       
            </summary>
        </member>
        <member name="P:Octokit.SearchUsersRequest.Location">
            <summary>
            Filter users by the location indicated in their profile.
            <remarks>https://help.github.com/articles/searching-users#location</remarks>       
            </summary>
        </member>
        <member name="P:Octokit.SearchUsersRequest.Repositories">
            <summary>
            Filters users based on the number of repositories they have.
            <remarks>https://help.github.com/articles/searching-users#repository-count</remarks>       
            </summary>
        </member>
        <member name="P:Octokit.SearchUsersRequest.Language">
            <summary>
            Search for users that have repositories that match a certain language.
            <remarks>https://help.github.com/articles/searching-users#language</remarks>       
            </summary>
        </member>
        <member name="P:Octokit.SearchUsersRequest.AccountType">
            <summary>
            With this qualifier you can restrict the search to just personal accounts or just organization accounts.
            <remarks>https://help.github.com/articles/searching-users#type</remarks>       
            </summary>
        </member>
        <member name="P:Octokit.SearchUsersRequest.In">
            <summary>
            Qualifies which fields are searched. With this qualifier you can restrict the search to just the username, public email, full name, or any combination of these.
            <remarks>https://help.github.com/articles/searching-users#search-in</remarks>       
            </summary>
        </member>
        <member name="T:Octokit.AccountSearchType">
            <summary>
            Account Type used to filter search result
            </summary>
        </member>
        <member name="F:Octokit.AccountSearchType.User">
            <summary>
             User account
            </summary>
        </member>
        <member name="F:Octokit.AccountSearchType.Org">
            <summary>
            Organization account
            </summary>
        </member>
        <member name="T:Octokit.UserInQualifier">
            <summary>
            User type to filter search results
            </summary>
        </member>
        <member name="F:Octokit.UserInQualifier.Username">
            <summary>
            Search by the username
            </summary>
        </member>
        <member name="F:Octokit.UserInQualifier.Email">
            <summary>
            Search by the user's email address
            </summary>
        </member>
        <member name="F:Octokit.UserInQualifier.Fullname">
            <summary>
            Search by the user's full name
            </summary>
        </member>
        <member name="T:Octokit.UsersSearchSort">
            <summary>
            
            </summary>
        </member>
        <member name="T:Octokit.SelectedRepositoryCollection">
            <summary>
            Represents request to set the repositories with visibility to the secrets in an organization.
            </summary>
        </member>
        <member name="P:Octokit.SelectedRepositoryCollection.SelectedRepositoryIds">
            <summary>
            List of repository Ids that should have visibility to the repository
            </summary>
        </member>
        <member name="T:Octokit.Signature">
            <summary>
            Information about an author or committer.
            </summary>
        </member>
        <member name="M:Octokit.Signature.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of Signature with the required values.
            </summary>
            <param name="name"></param>
            <param name="email"></param>
        </member>
        <member name="P:Octokit.Signature.Name">
            <summary>
            The full name of the author/committer.
            </summary>
        </member>
        <member name="P:Octokit.Signature.Email">
            <summary>
            The email address of the author/committer.
            </summary>
        </member>
        <member name="T:Octokit.StarredRequest">
            <summary>
            Used to retrieve and filter lists of stars.
            </summary>
        </member>
        <member name="M:Octokit.StarredRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.StarredRequest"/> class.
            </summary>
        </member>
        <member name="P:Octokit.StarredRequest.SortProperty">
            <summary>
            Gets or sets the sort property.
            </summary>
            <value>
            The sort property.
            </value>
        </member>
        <member name="P:Octokit.StarredRequest.SortDirection">
            <summary>
            Gets or sets the sort direction.
            </summary>
            <value>
            The sort direction.
            </value>
        </member>
        <member name="T:Octokit.StarredSort">
            <summary>
            Property to sort stars by.
            </summary>
        </member>
        <member name="F:Octokit.StarredSort.Created">
            <summary>
            Sort y the date the star was created.
            </summary>
        </member>
        <member name="F:Octokit.StarredSort.Updated">
            <summary>
            Sort by the date the star was last updated.
            </summary>
        </member>
        <member name="T:Octokit.StartMigrationRequest">
            <summary>
            Request body for starting a migration.
            </summary>
            <remarks>
            See <a href="https://developer.github.com/v3/migration/migrations/#start-a-migration">docs</a>
            for more information.
            </remarks>
        </member>
        <member name="M:Octokit.StartMigrationRequest.#ctor">
            <summary>
            Parameter-less constructor needed for SimpleJsonSerializer.
            </summary>
        </member>
        <member name="M:Octokit.StartMigrationRequest.#ctor(System.Collections.Generic.IReadOnlyList{System.String},System.Boolean,System.Boolean)">
            <summary>
            Instantiate a new Migration Request object.
            </summary>
            <param name="repositories">List of repositories in {owner}/{repo} format.</param>
            <param name="lockRepositories">To lock the repos or not.</param>
            <param name="excludeAttachments">To exclude the attachments or not.</param>
        </member>
        <member name="P:Octokit.StartMigrationRequest.Repositories">
            <summary>
            Required. A list of arrays indicating which repositories should be migrated.
            </summary>
        </member>
        <member name="P:Octokit.StartMigrationRequest.LockRepositories">
            <summary>
            Indicates whether repositories should be locked (to prevent manipulation) 
            while migrating data. Default: false.
            </summary>
        </member>
        <member name="P:Octokit.StartMigrationRequest.ExcludeAttachments">
            <summary>
            Indicates whether attachments should be excluded from the migration 
            (to reduce migration archive file size). Default: false.
            </summary>
        </member>
        <member name="T:Octokit.TeamMembersRequest">
            <summary>
            Used to filter requests for team members
            </summary>
        </member>
        <member name="P:Octokit.TeamMembersRequest.Role">
            <summary>
            Which membership roles to get
            </summary>
        </member>
        <member name="T:Octokit.TeamRoleFilter">
            <summary>
            Filtering by Roles within a Team
            </summary>
        </member>
        <member name="F:Octokit.TeamRoleFilter.Member">
            <summary>
            Regular Team Member
            </summary>
        </member>
        <member name="F:Octokit.TeamRoleFilter.Maintainer">
            <summary>
             Team Maintainer
            </summary>
        </member>
        <member name="F:Octokit.TeamRoleFilter.All">
            <summary>
            All Roles
            </summary>
        </member>
        <member name="T:Octokit.UpdateTeam">
            <summary>
            Used to update a team.
            </summary>
        </member>
        <member name="M:Octokit.UpdateTeam.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.UpdateTeam"/> class.
            </summary>
            <param name="name">The updated team name.</param>
        </member>
        <member name="P:Octokit.UpdateTeam.Name">
            <summary>
            The name of the team (required).
            </summary>
        </member>
        <member name="P:Octokit.UpdateTeam.Description">
            <summary>
            The description of the team.
            </summary>
        </member>
        <member name="P:Octokit.UpdateTeam.Privacy">
            <summary>
            The level of privacy this team should have (default: Secret)
            </summary>
        </member>
        <member name="P:Octokit.UpdateTeam.Permission">
            <summary>
            The permission that new repositories will be added to the team with when none is specified (default: Pull)
            Although permission can be one of : pull, push, or admin based on documentation, passing admin results in an error response.
            That's why TeamPermission does not contain an admin value.
            See the issue here https://github.com/github/rest-api-description/issues/1952
            </summary>
        </member>
        <member name="P:Octokit.UpdateTeam.ParentTeamId">
            <summary>
            Id of a team to set as the parent team
            </summary>
        </member>
        <member name="T:Octokit.UpdateTeamMembership">
            <summary>
            Used to filter requests for team members
            </summary>
        </member>
        <member name="P:Octokit.UpdateTeamMembership.Role">
            <summary>
            Which membership roles to get
            </summary>
        </member>
        <member name="T:Octokit.UpsertOrganizationSecret">
            <summary>
            Represents request to change the value of a secret for an organization.
            </summary>
        </member>
        <member name="P:Octokit.UpsertOrganizationSecret.Visibility">
            <summary>
            The visibility level of the secret
            </summary>
        </member>
        <member name="P:Octokit.UpsertOrganizationSecret.SelectedRepositoriesIds">
            <summary>
            The list of ids for the repositories with selected visibility to the secret
            </summary>
        </member>
        <member name="T:Octokit.UpsertRepositorySecret">
            <summary>
            Used to create or update a repository secret
            </summary>
        </member>
        <member name="P:Octokit.UpsertRepositorySecret.EncryptedValue">
            <summary>
            The encrypted value of the secret.
            </summary>
            <remarks>See the <a href="https://developer.github.com/v3/actions/secrets/#create-or-update-a-repository-secret">API documentation</a> for more information on how to encrypt the secret</remarks>
        </member>
        <member name="P:Octokit.UpsertRepositorySecret.KeyId">
            <summary>
            The id of the encryption key used to encrypt the secret.
            </summary>
            <remarks>Get key and id from <see cref="M:Octokit.RepositorySecretsClient.GetPublicKey(System.String,System.String)"/> and use the <a href="https://developer.github.com/v3/actions/secrets/#create-or-update-a-repository-secret">API documentation</a> for more information on how to encrypt the secret</remarks>
        </member>
        <member name="T:Octokit.UserRename">
            <summary>
            Describes the new login when renaming a user via the <see cref="M:Octokit.IUserAdministrationClient.Rename(System.String,Octokit.UserRename)"/> method.
            </summary>
        </member>
        <member name="M:Octokit.UserRename.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.UserRename"/> class.
            </summary>
            <param name="login">The new login for the user.</param>
        </member>
        <member name="P:Octokit.UserRename.Login">
            <summary>
            The new username for the user
            </summary>
        </member>
        <member name="T:Octokit.UserUpdate">
            <summary>
            Represents updatable fields on a user. Values that are null will not be sent in the request.
            Use string.empty if you want to clear a value.
            </summary>
        </member>
        <member name="P:Octokit.UserUpdate.Bio">
            <summary>
            This user's bio.
            </summary>
        </member>
        <member name="P:Octokit.UserUpdate.Blog">
            <summary>
            URL for this user's blog.
            </summary>
        </member>
        <member name="P:Octokit.UserUpdate.Company">
            <summary>
            The company this user's works for.
            </summary>
        </member>
        <member name="P:Octokit.UserUpdate.Email">
            <summary>
            This user's email.
            </summary>
        </member>
        <member name="P:Octokit.UserUpdate.Location">
            <summary>
            The geographic location of this user.
            </summary>
        </member>
        <member name="P:Octokit.UserUpdate.Name">
            <summary>
            This user's full name.
            </summary>
        </member>
        <member name="P:Octokit.UserUpdate.Hireable">
            <summary>
            Tells if this user is currently hireable.
            </summary>
        </member>
        <member name="M:Octokit.Variable.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.Variable"/> class.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">The value of the variable.</param>
        </member>
        <member name="P:Octokit.Variable.Name">
            <summary>
            Required. Gets or sets the name of the variable.
            </summary>
        </member>
        <member name="P:Octokit.Variable.Value">
            <summary>
            Required. Gets or sets the value of the variable.
            </summary>
        </member>
        <member name="T:Octokit.WorkflowRunJobsRequest">
            <summary>
            Details to filter a workflow run jobs request, such as by the latest attempt.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunJobsRequest.Filter">
            <summary>
            Filters jobs by their <c>completed_at</c> timestamp.
            </summary>
        </member>
        <member name="T:Octokit.WorkflowRunsRequest">
            <summary>
            Details to filter a workflow runs request, such as by branch or check suite Id.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunsRequest.Actor">
            <summary>
            Returns someone's workflow runs.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunsRequest.Branch">
            <summary>
            Returns workflow runs associated with a branch.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunsRequest.Event">
            <summary>
            Returns workflow run triggered by the event you specify.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunsRequest.HeadSha">
            <summary>
            Only returns workflow runs that are associated with the specified head SHA.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunsRequest.Status">
            <summary>
            Returns workflow runs with the check run status or conclusion that you specify.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunsRequest.Created">
            <summary>
            Returns workflow runs created within the given date-time range.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunsRequest.ExcludePullRequests">
            <summary>
            If true pull requests are omitted from the response.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunsRequest.CheckSuiteId">
            <summary>
            Returns workflow runs with the check_suite_id that you specify.
            </summary>
        </member>
        <member name="P:Octokit.AccessToken.Token">
            <summary>
            The access token
            </summary>
        </member>
        <member name="P:Octokit.AccessToken.ExpiresAt">
            <summary>
            The expiration date
            </summary>
        </member>
        <member name="T:Octokit.Account">
            <summary>
            Base class for a GitHub account, most often either a <see cref="T:Octokit.User"/> or <see cref="T:Octokit.Organization"/>.
            </summary>
        </member>
        <member name="P:Octokit.Account.AvatarUrl">
            <summary>
            URL of the account's avatar.
            </summary>
        </member>
        <member name="P:Octokit.Account.Bio">
            <summary>
            The account's bio.
            </summary>
        </member>
        <member name="P:Octokit.Account.Blog">
            <summary>
            URL of the account's blog.
            </summary>
        </member>
        <member name="P:Octokit.Account.Collaborators">
            <summary>
            Number of collaborators the account has.
            </summary>
        </member>
        <member name="P:Octokit.Account.Company">
            <summary>
            Company the account works for.
            </summary>
        </member>
        <member name="P:Octokit.Account.CreatedAt">
            <summary>
            Date the account was created.
            </summary>
        </member>
        <member name="P:Octokit.Account.DiskUsage">
            <summary>
            Amount of disk space the account is using.
            </summary>
        </member>
        <member name="P:Octokit.Account.Email">
            <summary>
            The account's email.
            </summary>
        </member>
        <member name="P:Octokit.Account.Followers">
            <summary>
            Number of followers the account has.
            </summary>
        </member>
        <member name="P:Octokit.Account.Following">
            <summary>
            Number of other users the account is following.
            </summary>
        </member>
        <member name="P:Octokit.Account.Hireable">
            <summary>
            Indicates whether the account is currently hireable.
            </summary>
            <value>True if the account is hireable; otherwise, false.</value>
        </member>
        <member name="P:Octokit.Account.HtmlUrl">
            <summary>
            The HTML URL for the account on github.com (or GitHub Enterprise).
            </summary>
        </member>
        <member name="P:Octokit.Account.Id">
            <summary>
            The account's system-wide unique Id.
            </summary>
        </member>
        <member name="P:Octokit.Account.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Account.Location">
            <summary>
            The account's geographic location.
            </summary>
        </member>
        <member name="P:Octokit.Account.Login">
            <summary>
            The account's login.
            </summary>
        </member>
        <member name="P:Octokit.Account.Name">
            <summary>
            The account's full name.
            </summary>
        </member>
        <member name="P:Octokit.Account.Type">
            <summary>
            The type of account associated with this entity
            </summary>
        </member>
        <member name="P:Octokit.Account.OwnedPrivateRepos">
            <summary>
            Number of private repos owned by the account.
            </summary>
        </member>
        <member name="P:Octokit.Account.Plan">
            <summary>
            Plan the account pays for.
            </summary>
        </member>
        <member name="P:Octokit.Account.PrivateGists">
            <summary>
            Number of private gists the account has created.
            </summary>
        </member>
        <member name="P:Octokit.Account.PublicGists">
            <summary>
            Number of public gists the account has created.
            </summary>
        </member>
        <member name="P:Octokit.Account.PublicRepos">
            <summary>
            Number of public repos the account owns.
            </summary>
        </member>
        <member name="P:Octokit.Account.TotalPrivateRepos">
            <summary>
            Total number of private repos the account owns.
            </summary>
        </member>
        <member name="P:Octokit.Account.Url">
            <summary>
            The account's API URL.
            </summary>
        </member>
        <member name="F:Octokit.AccountType.User">
            <summary>
             User account
            </summary>
        </member>
        <member name="F:Octokit.AccountType.Organization">
            <summary>
            Organization account
            </summary>
        </member>
        <member name="F:Octokit.AccountType.Bot">
            <summary>
            Bot account
            </summary>
        </member>
        <member name="F:Octokit.AccountType.Mannequin">
            <summary>
            Mannequin account - all user activity in the migrated repository (except Git commits) 
            			is attributed to placeholder identities called mannequins.
            </summary>
        </member>
        <member name="T:Octokit.Activity">
            <summary>
            An entry in the activity event stream
            </summary>
        </member>
        <member name="P:Octokit.Activity.Type">
            <summary>
            The type of the activity.
            </summary>
        </member>
        <member name="P:Octokit.Activity.Public">
            <summary>
            Whether the activity event is public or not.
            </summary>
        </member>
        <member name="P:Octokit.Activity.Repo">
            <summary>
            The repository associated with the activity event.
            </summary>
        </member>
        <member name="P:Octokit.Activity.Actor">
            <summary>
            The user associated with the activity event.
            </summary>
        </member>
        <member name="P:Octokit.Activity.Org">
            <summary>
            The organization associated with the activity event.
            </summary>
        </member>
        <member name="P:Octokit.Activity.CreatedAt">
            <summary>
            The date the activity event was created.
            </summary>
        </member>
        <member name="P:Octokit.Activity.Id">
            <summary>
            The activity event Id.
            </summary>
        </member>
        <member name="P:Octokit.Activity.Payload">
            <summary>
            The payload associated with the activity event.
            </summary>
        </member>
        <member name="T:Octokit.PushWebhookCommitter">
            <summary>
            Represents the author or committer to a Git commit. This is the information stored in Git and should not be
            confused with GitHub account information.
            </summary>
        </member>
        <member name="M:Octokit.PushWebhookCommitter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.PushWebhookCommitter"/> class.
            </summary>
        </member>
        <member name="M:Octokit.PushWebhookCommitter.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.PushWebhookCommitter"/> class.
            </summary>
            <param name="name">The full name of the author or committer.</param>
            <param name="email">The email.</param>
            <param name="username">The username associated with the account.</param>
        </member>
        <member name="P:Octokit.PushWebhookCommitter.Name">
            <summary>
            Gets the name of the author or committer.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Octokit.PushWebhookCommitter.Email">
            <summary>
            Gets the email of the author or committer.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Octokit.PushWebhookCommitter.Username">
            <summary>
            Gets the GitHub username associated with the commit
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="P:Octokit.StatusEventPayload.Name">
            <summary>
            The name of the repository.
            </summary>
        </member>
        <member name="P:Octokit.StatusEventPayload.Sha">
            <summary>
            The SHA of the reference.
            </summary>
        </member>
        <member name="P:Octokit.StatusEventPayload.CreatedAt">
            <summary>
            The date the commit status was created.
            </summary>
        </member>
        <member name="P:Octokit.StatusEventPayload.UpdatedAt">
            <summary>
            The date the commit status was updated.
            </summary>
        </member>
        <member name="P:Octokit.StatusEventPayload.State">
            <summary>
            The state of the commit
            </summary>
        </member>
        <member name="P:Octokit.StatusEventPayload.TargetUrl">
            <summary>
            URL associated with this status. GitHub.com displays this URL as a link to allow users to easily see the
            ‘source’ of the Status.
            </summary>
        </member>
        <member name="P:Octokit.StatusEventPayload.Description">
            <summary>
            Short description of the status.
            </summary>
        </member>
        <member name="P:Octokit.StatusEventPayload.Context">
            <summary>
            A string label to differentiate this status from the status of other systems.
            </summary>
        </member>
        <member name="P:Octokit.StatusEventPayload.Id">
            <summary>
            The unique identifier of the status.
            </summary>
        </member>
        <member name="P:Octokit.StatusEventPayload.Commit">
            <summary>
            The relevant commit.
            </summary>
        </member>
        <member name="P:Octokit.StatusEventPayload.Organization">
            <summary>
            The organization associated with the event.
            </summary>
        </member>
        <member name="P:Octokit.StatusEventPayload.Branches">
            <summary>
            The branches involved.
            </summary>
        </member>
        <member name="T:Octokit.AdditionsAndDeletions">
            <summary>
            Represents lines added and deleted at a given point in time
            </summary>
        </member>
        <member name="M:Octokit.AdditionsAndDeletions.#ctor(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Construct an instance of AdditionsAndDeletions
            </summary>
            <param name="additionsAndDeletions"></param>
            <exception cref="T:System.ArgumentException">If the list of data points is not 3 elements</exception>
        </member>
        <member name="P:Octokit.AdditionsAndDeletions.Timestamp">
            <summary>
            Date of the recorded activity
            </summary>
        </member>
        <member name="P:Octokit.AdditionsAndDeletions.Additions">
            <summary>
            Lines added for the given day
            </summary>
        </member>
        <member name="P:Octokit.AdditionsAndDeletions.Deletions">
            <summary>
            Lines deleted for the given day
            </summary>
        </member>
        <member name="T:Octokit.ApiError">
            <summary>
            Error payload from the API response
            </summary>
        </member>
        <member name="P:Octokit.ApiError.Message">
            <summary>
            The error message
            </summary>
        </member>
        <member name="P:Octokit.ApiError.DocumentationUrl">
            <summary>
            URL to the documentation for this error.
            </summary>
        </member>
        <member name="P:Octokit.ApiError.Errors">
            <summary>
            Additional details about the error
            </summary>
        </member>
        <member name="T:Octokit.Application">
            <summary>
            Represents an oauth application.
            </summary>
        </member>
        <member name="P:Octokit.Application.Name">
            <summary>
            <see cref="T:Octokit.Application"/> Name.
            </summary>
        </member>
        <member name="P:Octokit.Application.Url">
            <summary>
            The Url of this <see cref="T:Octokit.Application"/>.
            </summary>
        </member>
        <member name="T:Octokit.ApplicationAuthorization">
            <summary>
            Represents an oauth access given to a particular application.
            </summary>
        </member>
        <member name="P:Octokit.ApplicationAuthorization.Token">
            <summary>
            The oauth token (be careful with these, they are like passwords!).
            </summary>
            <remarks>
            This will return only return a value the first time
            the authorization is created. All subsequent API calls
            (for example, 'get' for an authorization) will return `null`
            </remarks>
        </member>
        <member name="P:Octokit.Artifact.Id">
            <summary>
            The artifact Id
            </summary>
        </member>
        <member name="P:Octokit.Artifact.NodeId">
            <summary>
            The artifact node Id
            </summary>
        </member>
        <member name="P:Octokit.Artifact.Name">
            <summary>
            The name of the artifact
            </summary>
        </member>
        <member name="P:Octokit.Artifact.SizeInBytes">
            <summary>
            The size of the artifact in bytes
            </summary>
        </member>
        <member name="P:Octokit.Artifact.Url">
            <summary>
            The url for retrieving the artifact information
            </summary>
        </member>
        <member name="P:Octokit.Artifact.ArchiveDownloadUrl">
            <summary>
            The url for downloading the artifact contents
            </summary>
        </member>
        <member name="P:Octokit.Artifact.Expired">
            <summary>
            True if the artifact has expired
            </summary>
        </member>
        <member name="P:Octokit.Artifact.CreatedAt">
            <summary>
            The date and time when the artifact was created
            </summary>
        </member>
        <member name="P:Octokit.Artifact.ExpiresAt">
            <summary>
            The date and time when the artifact expires
            </summary>
        </member>
        <member name="P:Octokit.Artifact.UpdatedAt">
            <summary>
            The date and time when the artifact was last updated
            </summary>
        </member>
        <member name="P:Octokit.Artifact.WorkflowRun">
            <summary>
            The workflow from where the artifact was created
            </summary>
        </member>
        <member name="P:Octokit.ArtifactWorkflowRun.Id">
            <summary>
            The workflow run Id
            </summary>
        </member>
        <member name="P:Octokit.ArtifactWorkflowRun.RepositoryId">
            <summary>
            The repository Id
            </summary>
        </member>
        <member name="P:Octokit.ArtifactWorkflowRun.HeadRepositoryId">
            <summary>
            The head repository Id
            </summary>
        </member>
        <member name="P:Octokit.ArtifactWorkflowRun.HeadBranch">
            <summary>
            The head branch
            </summary>
        </member>
        <member name="P:Octokit.ArtifactWorkflowRun.HeadSha">
            <summary>
            The head Sha
            </summary>
        </member>
        <member name="P:Octokit.Author.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="T:Octokit.Authorization">
            <summary>
            Represents an oauth access given to a particular application.
            </summary>
        </member>
        <member name="P:Octokit.Authorization.Id">
            <summary>
            The Id of this <see cref="T:Octokit.Authorization"/>.
            </summary>
        </member>
        <member name="P:Octokit.Authorization.Url">
            <summary>
            The API URL for this <see cref="T:Octokit.Authorization"/>.
            </summary>
        </member>
        <member name="P:Octokit.Authorization.Application">
            <summary>
            The <see cref="P:Octokit.Authorization.Application"/> that created this <see cref="T:Octokit.Authorization"/>.
            </summary>
        </member>
        <member name="P:Octokit.Authorization.TokenLastEight">
            <summary>
            The last eight characters of the user's token
            </summary>
        </member>
        <member name="P:Octokit.Authorization.HashedToken">
            <summary>
            Base-64 encoded representation of the SHA-256 digest of the token
            </summary>
        </member>
        <member name="P:Octokit.Authorization.Fingerprint">
            <summary>
            Optional parameter that allows an OAuth application to create
            multiple authorizations for a single user
            </summary>
        </member>
        <member name="P:Octokit.Authorization.Note">
            <summary>
            Notes about this particular <see cref="T:Octokit.Authorization"/>.
            </summary>
        </member>
        <member name="P:Octokit.Authorization.NoteUrl">
            <summary>
            A url for more information about notes.
            </summary>
        </member>
        <member name="P:Octokit.Authorization.CreatedAt">
            <summary>
            When this <see cref="T:Octokit.Authorization"/> was created.
            </summary>
        </member>
        <member name="P:Octokit.Authorization.UpdateAt">
            <summary>
            When this <see cref="T:Octokit.Authorization"/> was last updated.
            </summary>
        </member>
        <member name="P:Octokit.Authorization.Scopes">
            <summary>
            The scopes that this <see cref="T:Octokit.Authorization"/> has. This is the kind of access that the token allows.
            </summary>
        </member>
        <member name="T:Octokit.Autolink">
            <summary>
            Represents a repository Autolink object.
            </summary>
        </member>
        <member name="P:Octokit.Autolink.Id">
            <summary>
            The unique identifier of the autolink.
            </summary>
        </member>
        <member name="P:Octokit.Autolink.KeyPrefix">
            <summary>
            This prefix appended by certain characters will generate a link any time it is found in an issue, pull request, or commit.
            </summary>
        </member>
        <member name="P:Octokit.Autolink.UrlTemplate">
            <summary>
            The URL must contain &lt;num&gt; for the reference number. &lt;num&gt; matches different characters depending on the value of is_alphanumeric.
            </summary>
        </member>
        <member name="P:Octokit.Autolink.IsAlphanumeric">
            <summary>
            Whether this autolink reference matches alphanumeric characters. If true, the &lt;num&gt; parameter of the url_template matches alphanumeric characters A-Z (case insensitive), 0-9, and -. If false, this autolink reference only matches numeric characters.
            </summary>
        </member>
        <member name="P:Octokit.Blob.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Blob.Content">
            <summary>
            The content of the blob.
            </summary>
        </member>
        <member name="P:Octokit.Blob.Encoding">
            <summary>
            The encoding of the blob.
            </summary>
        </member>
        <member name="P:Octokit.Blob.Sha">
            <summary>
            The SHA of the blob.
            </summary>
        </member>
        <member name="P:Octokit.Blob.Size">
            <summary>
            The size of the blob.
            </summary>
        </member>
        <member name="P:Octokit.BlobReference.Sha">
            <summary>
            The SHA of the blob.
            </summary>
        </member>
        <member name="P:Octokit.Branch.Name">
            <summary>
            Name of this <see cref="T:Octokit.Branch"/>.
            </summary>
        </member>
        <member name="P:Octokit.Branch.Protected">
            <summary>
            Whether this <see cref="T:Octokit.Branch"/> is protected.
            </summary>
        </member>
        <member name="P:Octokit.Branch.Commit">
            <summary>
            The <see cref="T:Octokit.GitReference"/> history for this <see cref="T:Octokit.Branch"/>.
            </summary>
        </member>
        <member name="T:Octokit.BranchProtectionSettings">
            <summary>
            Protection details for a <see cref="T:Octokit.Branch"/>.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettings.RequiredStatusChecks">
            <summary>
            Status check settings for the protected branch
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettings.RequiredPullRequestReviews">
            <summary>
            Required review settings for the protected branch
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettings.Restrictions">
            <summary>
            Push access restrictions for the protected branch
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettings.EnforceAdmins">
            <summary>
            Specifies whether the protections applied to this branch also apply to repository admins
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettings.LockBranch">
            <summary>
            Indicates whether this branch is read-only.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettings.RequiredLinearHistory">
            <summary>
            Specifies whether a linear history is required
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettings.AllowForcePushes">
            <summary>
            Specifies whether force pushes are allowed
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettings.AllowDeletions">
            <summary>
            Specifies whether deletions are allowed
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettings.BlockCreations">
            <summary>
            Specifies whether creations can be blocked
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettings.RequiredConversationResolution">
            <summary>
            Specifies whether conversation resolution iss required
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionSettings.RequiredSignatures">
            <summary>
            Specifies whether signatures are required
            </summary>
        </member>
        <member name="T:Octokit.EnforceAdmins">
            <summary>
            Specifies whether the protections applied to this branch also apply to repository admins
            </summary>
        </member>
        <member name="T:Octokit.EnforceLock">
            <summary>
            Specifies whether the this branch also should be read-only.
            </summary>
        </member>
        <member name="T:Octokit.BranchProtectionRequiredStatusChecks">
            <summary>
            Specifies settings for status checks which must pass before branches can be merged into the protected branch
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredStatusChecks.Strict">
            <summary>
            Require branches to be up to date before merging
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredStatusChecks.Contexts">
            <summary>
            Require status checks to pass before merging
            </summary>
        </member>
        <member name="T:Octokit.BranchProtectionPushRestrictions">
            <summary>
            Specifies people or teams allowed to push to the protected branch. Required status checks will still prevent these people from merging if the checks fail
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionPushRestrictions.Teams">
            <summary>
            Push access is restricted to the specified Teams
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionPushRestrictions.Users">
            <summary>
            Push access is restricted to the specified Users
            </summary>
        </member>
        <member name="T:Octokit.BranchProtectionRequiredReviews">
            <summary>
            Specifies if pull request reviews are required before merging a pull request. Can optionally enforce the policy on repository administrators also.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviews.DismissalRestrictions">
            <summary>
            Specify which users and teams can dismiss pull request reviews.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviews.DismissStaleReviews">
            <summary>
            Dismiss approved reviews automatically when a new commit is pushed.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviews.RequireCodeOwnerReviews">
            <summary>
            Blocks merge until code owners have reviewed.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviews.RequiredApprovingReviewCount">
            <summary>
            Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviews.RequireLastPushApproval">
            <summary>
            Whether the most recent push must be approved by someone other than the person who pushed it. Default: false
            </summary>
        </member>
        <member name="T:Octokit.BranchProtectionRequiredReviewsDismissalRestrictions">
            <summary>
            Specifies people or teams allowed to push to the protected branch. Required status checks will still prevent these people from merging if the checks fail
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviewsDismissalRestrictions.Teams">
            <summary>
            The specified Teams that can dismiss reviews
            </summary>
        </member>
        <member name="P:Octokit.BranchProtectionRequiredReviewsDismissalRestrictions.Users">
            <summary>
            The specified Users who can dismiss reviews
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.Id">
            <summary>
            The Id of the check run
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.HeadSha">
            <summary>
            The SHA of the commit the check run is associated with
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.ExternalId">
            <summary>
            A reference for the run on the integrator's system
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.Url">
            <summary>
            The GitHub API URL of the check run
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.HtmlUrl">
            <summary>
            The GitHub.com URL of the check run
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.DetailsUrl">
            <summary>
            The URL of the integrator's site that has the full details of the check.
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.Status">
            <summary>
            The check run status
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.Conclusion">
            <summary>
            The final conclusion of the check
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.StartedAt">
            <summary>
            The time that the check run began
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.CompletedAt">
            <summary>
            The time the check run completed
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.Output">
            <summary>
            Descriptive details about the run
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.Name">
            <summary>
            The name of the check
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.CheckSuite">
            <summary>
            The check suite that is associated with this check run
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.App">
            <summary>
            The GitHub App that is associated with this check run
            </summary>
        </member>
        <member name="P:Octokit.CheckRun.PullRequests">
            <summary>
            The pull requests that are associated with this check run
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.Filename">
            <summary>
            The path of the file the annotation refers to
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.Path">
            <summary>
            The path of the file the annotation refers to
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.BlobHref">
            <summary>
            The file's full blob URL
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.StartLine">
            <summary>
            The start line of the annotation
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.EndLine">
            <summary>
            The end line of the annotation
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.StartColumn">
            <summary>
            The start line of the annotation
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.EndColumn">
            <summary>
            The end line of the annotation
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.WarningLevel">
            <summary>
            The warning level of the annotation. Can be one of notice, warning, or failure
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.AnnotationLevel">
            <summary>
            The level of the annotation. Can be one of notice, warning, or failure
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.Message">
            <summary>
            A short description of the feedback for these lines of code
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.Title">
            <summary>
            The title that represents the annotation
            </summary>
        </member>
        <member name="P:Octokit.CheckRunAnnotation.RawDetails">
            <summary>
            Details about this annotation
            </summary>
        </member>
        <member name="P:Octokit.CheckRunOutputResponse.Title">
            <summary>
            The title of the check run
            </summary>
        </member>
        <member name="P:Octokit.CheckRunOutputResponse.Summary">
            <summary>
            The summary of the check run
            </summary>
        </member>
        <member name="P:Octokit.CheckRunOutputResponse.Text">
            <summary>
            The details of the check run
            </summary>
        </member>
        <member name="P:Octokit.CheckRunOutputResponse.AnnotationsCount">
            <summary>
            The number of annotation entries for the check run (use <see cref="M:Octokit.ICheckRunsClient.GetAllAnnotations(System.String,System.String,System.Int64)"/> to get annotation details)
            </summary>
        </member>
        <member name="P:Octokit.CheckRunRequestedAction.Identifier">
            <summary>
            The Identifier of the check run requested action.
            </summary>
        </member>
        <member name="P:Octokit.CheckRunsResponse.TotalCount">
            <summary>
            The total number of check runs that match the request filter
            </summary>
        </member>
        <member name="P:Octokit.CheckRunsResponse.CheckRuns">
            <summary>
            The retrieved check runs
            </summary>
        </member>
        <member name="P:Octokit.CheckSuite.Id">
            <summary>
            The Id of the check suite
            </summary>
        </member>
        <member name="P:Octokit.CheckSuite.HeadBranch">
            <summary>
            The branch the check suite is associated with
            </summary>
        </member>
        <member name="P:Octokit.CheckSuite.HeadSha">
            <summary>
            The SHA of the head commit in the push that created the check suite
            </summary>
        </member>
        <member name="P:Octokit.CheckSuite.Status">
            <summary>
            The summarized status of the check runs included in the check suite
            </summary>
        </member>
        <member name="P:Octokit.CheckSuite.Conclusion">
            <summary>
            The summarized conclusion of the check runs included in the check suite
            </summary>
        </member>
        <member name="P:Octokit.CheckSuite.Url">
            <summary>
            The GitHub API URL of the check suite
            </summary>
        </member>
        <member name="P:Octokit.CheckSuite.Before">
            <summary>
            The hash of the commit prior to the push that created the check suite
            </summary>
        </member>
        <member name="P:Octokit.CheckSuite.After">
            <summary>
            The hash of the commit after the push that created the check suite (or HeadSha if no later commits exist)
            </summary>
        </member>
        <member name="P:Octokit.CheckSuite.PullRequests">
            <summary>
            The pull requests that are associated with the check suite
            </summary>
        </member>
        <member name="P:Octokit.CheckSuite.App">
            <summary>
            The GitHub App for the check suite
            </summary>
        </member>
        <member name="P:Octokit.CheckSuite.Repository">
            <summary>
            The repository for the check suite
            </summary>
        </member>
        <member name="P:Octokit.CheckSuitePreferencesResponse.Preferences">
            <summary>
            The check suite preferences
            </summary>
        </member>
        <member name="P:Octokit.CheckSuitePreferencesResponse.Repository">
            <summary>
            The repository the check suite preferences are related to
            </summary>
        </member>
        <member name="P:Octokit.CheckSuitesResponse.TotalCount">
            <summary>
            The total number of check suites that match the request filter
            </summary>
        </member>
        <member name="P:Octokit.CheckSuitesResponse.CheckSuites">
            <summary>
            The retrieved check suites
            </summary>
        </member>
        <member name="T:Octokit.CodeFrequency">
            <summary>
            Represents the summary of lines added and deleted
            </summary>
        </member>
        <member name="M:Octokit.CodeFrequency.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IList{System.Int64}})">
            <summary>
            Construct an instance of CodeFrequency
            </summary>
            <param name="rawFrequencies">Raw data </param>
        </member>
        <member name="P:Octokit.CodeFrequency.AdditionsAndDeletionsByWeek">
            <summary>
            A weekly aggregate of the number of additions and deletions pushed to a repository.
            </summary>
        </member>
        <member name="P:Octokit.Collaborator.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="T:Octokit.CollaboratorPermissionResponse">
            <summary>
            Based on "#/components/schemas/repository-collaborator-permission:
            </summary>
        </member>
        <member name="P:Octokit.CombinedCommitStatus.State">
            <summary>
            The combined state of the commits.
            </summary>
        </member>
        <member name="P:Octokit.CombinedCommitStatus.Sha">
            <summary>
            The SHA of the reference.
            </summary>
        </member>
        <member name="P:Octokit.CombinedCommitStatus.TotalCount">
            <summary>
            The total number of statuses.
            </summary>
        </member>
        <member name="P:Octokit.CombinedCommitStatus.Statuses">
            <summary>
            The statuses.
            </summary>
        </member>
        <member name="P:Octokit.CombinedCommitStatus.Repository">
            <summary>
            The repository of the reference.
            </summary>
        </member>
        <member name="P:Octokit.CommitActivity.Activity">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.Id">
            <summary>
            The issue comment Id.
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.Url">
            <summary>
            The URL for this repository comment.
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.HtmlUrl">
            <summary>
            The html URL for this repository comment.
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.Body">
            <summary>
            Details about the repository comment.
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.Path">
            <summary>
            Relative path of the file that was commented on.
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.Position">
            <summary>
            Line index in the diff that was commented on.
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.Line">
            <summary>
            The line number in the file that was commented on.
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.CommitId">
            <summary>
            The commit
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.User">
            <summary>
            The user that created the repository comment.
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.CreatedAt">
            <summary>
            The date the repository comment was created.
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.UpdatedAt">
            <summary>
            The date the repository comment was last updated.
            </summary>
        </member>
        <member name="P:Octokit.CommitComment.Reactions">
            <summary>
            The reaction summary for this comment.
            </summary>
        </member>
        <member name="T:Octokit.RepositoryContentInfo">
            <summary>
            Information about a file in a repository. It does not include the contents of the file.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContentInfo.Name">
            <summary>
            Name of the content.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContentInfo.Path">
            <summary>
            Path to this content.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContentInfo.Sha">
            <summary>
            SHA of this content.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContentInfo.Size">
            <summary>
            Size of the content.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContentInfo.Type">
            <summary>
            The type of this content. It might be a File, Directory, Submodule, or Symlink
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContentInfo.DownloadUrl">
            <summary>
            URL to the raw content
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContentInfo.Url">
            <summary>
            URL to this content
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContentInfo.GitUrl">
            <summary>
            The GIT URL to this content.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContentInfo.HtmlUrl">
            <summary>
            The URL to view this content on GitHub.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Id">
            <summary>
            The internal Id for this pull request (not the pull request number)
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Url">
            <summary>
            The URL for this pull request.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.HtmlUrl">
            <summary>
            The URL for the pull request page.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.DiffUrl">
            <summary>
            The URL for the pull request's diff (.diff) file.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.PatchUrl">
            <summary>
            The URL for the pull request's patch (.patch) file.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.IssueUrl">
            <summary>
            The URL for the specific pull request issue.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.StatusesUrl">
            <summary>
            The URL for the pull request statuses.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Number">
            <summary>
            The pull request number.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.State">
            <summary>
            Whether the pull request is open or closed. The default is <see cref="F:Octokit.ItemState.Open"/>.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Title">
            <summary>
            Title of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Body">
            <summary>
            The body (content) contained within the pull request.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.CreatedAt">
            <summary>
            When the pull request was created.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.UpdatedAt">
            <summary>
            When the pull request was last updated.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.ClosedAt">
            <summary>
            When the pull request was closed.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.MergedAt">
            <summary>
            When the pull request was merged.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Head">
            <summary>
            The HEAD reference for the pull request.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Base">
            <summary>
            The BASE reference for the pull request.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.User">
            <summary>
            The user who created the pull request.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Assignee">
            <summary>
            The user who is assigned the pull request.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Assignees">
             <summary>
            The multiple users this pull request is assigned to.
             </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Milestone">
            <summary>
            The milestone, if any, that this pull request is assigned to.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Draft">
            <summary>
            Whether or not the pull request is in a draft state, and cannot be merged.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.Merged">
            <summary>
            Whether or not the pull request has been merged.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.MergeCommitSha">
            <summary>
            The value of this field changes depending on the state of the pull request.
            Not Merged - the hash of the test commit used to determine mergeability.
            Merged with merge commit - the hash of said merge commit.
            Merged via squashing - the hash of the squashed commit added to the base branch.
            Merged via rebase - the hash of the commit that the base branch was updated to.
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.RequestedReviewers">
            <summary>
            Users requested for review
            </summary>
        </member>
        <member name="P:Octokit.CommitPullRequest.RequestedTeams">
            <summary>
            Teams requested for review
            </summary>
        </member>
        <member name="P:Octokit.CommitStatus.CreatedAt">
            <summary>
            The date the commit status was created.
            </summary>
        </member>
        <member name="P:Octokit.CommitStatus.UpdatedAt">
            <summary>
            The date the commit status was updated.
            </summary>
        </member>
        <member name="P:Octokit.CommitStatus.State">
            <summary>
            The state of the commit
            </summary>
        </member>
        <member name="P:Octokit.CommitStatus.TargetUrl">
            <summary>
            URL associated with this status. GitHub.com displays this URL as a link to allow users to easily see the
            ‘source’ of the Status.
            </summary>
        </member>
        <member name="P:Octokit.CommitStatus.Description">
            <summary>
            Short description of the status.
            </summary>
        </member>
        <member name="P:Octokit.CommitStatus.Context">
            <summary>
            A string label to differentiate this status from the status of other systems.
            </summary>
        </member>
        <member name="P:Octokit.CommitStatus.Id">
            <summary>
            The unique identifier of the status.
            </summary>
        </member>
        <member name="P:Octokit.CommitStatus.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.CommitStatus.Url">
            <summary>
            The URL of the status.
            </summary>
        </member>
        <member name="P:Octokit.CommitStatus.Creator">
            <summary>
            The user that created the status.
            </summary>
        </member>
        <member name="T:Octokit.CommitState">
            <summary>
            Represents the state of a commit.
            </summary>
        </member>
        <member name="F:Octokit.CommitState.Pending">
            <summary>
            The commit state is still being determined. A build server might set this when it starts a build.
            </summary>
        </member>
        <member name="F:Octokit.CommitState.Success">
            <summary>
            The build was successful for the commit.
            </summary>
        </member>
        <member name="F:Octokit.CommitState.Error">
            <summary>
            There was some error with the build.
            </summary>
        </member>
        <member name="F:Octokit.CommitState.Failure">
            <summary>
            The build completed and reports a failure.
            </summary>
        </member>
        <member name="T:Octokit.ContentType">
            <summary>
            The possible repository content types.
            </summary>
        </member>
        <member name="T:Octokit.Contributor">
            <summary>
            Represents a contributor on GitHub.
            </summary>
        </member>
        <member name="T:Octokit.BillingSettings">
            <summary>
            The billing settings for a Copilot-enabled organization.
            </summary>
        </member>
        <member name="P:Octokit.BillingSettings.SeatBreakdown">
            <summary>
            A summary of the current billing settings for the organization.
            </summary>
        </member>
        <member name="P:Octokit.BillingSettings.SeatManagementSetting">
            <summary>
            A string that indicates how seats are billed for the organization. 
            </summary>
        </member>
        <member name="P:Octokit.BillingSettings.PublicCodeSuggestions">
            <summary>
            A string that indicates if public code suggestions are enabled or blocked for the organization.
            </summary>
        </member>
        <member name="T:Octokit.CopilotSeat">
            <summary>
            Details about a Copilot seat allocated to an organization member.
            </summary>
        </member>
        <member name="P:Octokit.CopilotSeat.CreatedAt">
            <summary>
            Timestamp of when the assignee was last granted access to GitHub Copilot, in ISO 8601 format
            </summary>
        </member>
        <member name="P:Octokit.CopilotSeat.UpdatedAt">
            <summary>
            Timestamp of when the assignee's GitHub Copilot access was last updated, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Octokit.CopilotSeat.PendingCancellationDate">
            <summary>
            The pending cancellation date for the seat, in `YYYY-MM-DD` format. This will be null unless
            the assignee's Copilot access has been canceled during the current billing cycle.
            If the seat has been cancelled, this corresponds to the start of the organization's next billing cycle.
            </summary>
        </member>
        <member name="P:Octokit.CopilotSeat.LastActivityAt">
            <summary>
            Timestamp of user's last GitHub Copilot activity, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Octokit.CopilotSeat.LastActivityEditor">
            <summary>
            Last editor that was used by the user for a GitHub Copilot completion.
            </summary>
        </member>
        <member name="P:Octokit.CopilotSeat.Assignee">
            <summary>
            The assignee that has been granted access to GitHub Copilot
            </summary>
        </member>
        <member name="P:Octokit.CopilotSeat.AssigningTeam">
            <summary>
            The team that granted access to GitHub Copilot to the assignee. This will be null if the
            user was assigned a seat individually.
            </summary>
        </member>
        <member name="T:Octokit.CopilotSeatAllocation">
            <summary>
            Holds information about an API response after adding or removing seats for a Copilot-enabled organization.
            </summary>
        </member>
        <member name="P:Octokit.CopilotSeatAllocation.SeatsCancelled">
            <summary>
            The total number of seat assignments removed.
            </summary>
        </member>
        <member name="P:Octokit.CopilotSeatAllocation.SeatsCreated">
            <summary>
            The total number of seat assignments created.
            </summary>
        </member>
        <member name="P:Octokit.CopilotSeats.TotalSeats">
            <summary>
            Total number of Copilot For Business seats for the organization currently being billed
            </summary>
        </member>
        <member name="P:Octokit.CopilotSeats.Seats">
            <summary>
            Information about a Copilot Business seat assignment for a user, team, or organization.
            </summary>
        </member>
        <member name="T:Octokit.SeatBreakdown">
            <summary>
            The breakdown of Copilot Business seats for the organization.
            </summary>
        </member>
        <member name="P:Octokit.SeatBreakdown.Total">
            <summary>
            The total number of seats being billed for the organization as of the current billing cycle.
            </summary>
        </member>
        <member name="P:Octokit.SeatBreakdown.AddedThisCycle">
            <summary>
            Seats added during the current billing cycle
            </summary>
        </member>
        <member name="P:Octokit.SeatBreakdown.PendingInvitation">
            <summary>
            The number of seats that have been assigned to users that have not yet accepted an invitation to this organization.
            </summary>
        </member>
        <member name="P:Octokit.SeatBreakdown.PendingCancellation">
            <summary>
            The number of seats that are pending cancellation at the end of the current billing cycle.
            </summary>
        </member>
        <member name="P:Octokit.SeatBreakdown.ActiveThisCycle">
            <summary>
            The number of seats that have used Copilot during the current billing cycle.
            </summary>
        </member>
        <member name="P:Octokit.SeatBreakdown.InactiveThisCycle">
            <summary>
            The number of seats that have not used Copilot during the current billing cycle
            </summary>
        </member>
        <member name="T:Octokit.UserSeatAllocation">
            <summary>
            Holds information about user names to be added or removed from a Copilot-enabled organization.
            </summary>
        </member>
        <member name="P:Octokit.UserSeatAllocation.SelectedUsernames">
            <summary>
            One or more usernames to be added or removed from a Copilot-enabled organization.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.Id">
            <summary>
            Id of this deployment.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Deployment.Sha">
            <summary>
            The SHA recorded at creation time.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.Ref">
            <summary>
            The name of the ref. This can be a branch, tag, or SHA.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.Url">
            <summary>
            The API URL for this deployment.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.Creator">
            <summary>
            The <seealso cref="T:Octokit.User"/> that created the deployment.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.Payload">
            <summary>
            JSON payload with extra information about the deployment.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.CreatedAt">
            <summary>
            Date and time that the deployment was created.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.UpdatedAt">
            <summary>
            Date and time that the deployment was updated.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.Description">
            <summary>
            A short description of the deployment.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.StatusesUrl">
            <summary>
            The API URL for the <seealso cref="T:Octokit.DeploymentStatus"/>es of this deployment.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.RepositoryUrl">
            <summary>
            The API URL for the <seealso cref="T:Octokit.Repository"/> of this deployment.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.Environment">
            <summary>
            The name of the <seealso cref="P:Octokit.Deployment.Environment"/> that was deployed to (e.g., staging or production).
            </summary>
        </member>
        <member name="P:Octokit.Deployment.OriginalEnvironment">
            <summary>
            The name of the that was originally deployed to (e.g., staging or production).
            </summary>
        </member>
        <member name="P:Octokit.Deployment.TransientEnvironment">
            <summary>
            Indicates if the environment is specific to a deployment and will no longer exist at some point in the future.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.ProductionEnvironment">
            <summary>
            Indicates if the environment is one with which end users directly interact.
            </summary>
        </member>
        <member name="P:Octokit.Deployment.Task">
            <summary>
            Specifies a task to execute (e.g., deploy or deploy:migrations)
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.Id">
            <summary>
            Id of this deployment status.
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.Url">
            <summary>
            The API URL for this deployment status.
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.State">
            <summary>
            The state of this deployment status.
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.Creator">
            <summary>
            The <seealso cref="T:Octokit.User"/> that created this deployment status.
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.Payload">
            <summary>
            JSON payload with extra information about the deployment.
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.TargetUrl">
            <summary>
            The target URL of this deployment status. This URL should contain
            output to keep the user updated while the task is running or serve
            as historical information for what happened in the deployment
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.LogUrl">
            <summary>
            The target URL  of this deployment status. This URL should contain
            output to keep the user updated while the task is running or serve as
            historical information for what happened in the deployment
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.EnvironmentUrl">
            <summary>
            The URL for accessing your environment.
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.CreatedAt">
            <summary>
            The date and time that the status was created.
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.UpdatedAt">
            <summary>
            The date and time that the status was updated.
            </summary>
        </member>
        <member name="P:Octokit.DeploymentStatus.Description">
            <summary>
            A short description of the status.
            </summary>
        </member>
        <member name="T:Octokit.EmailAddress">
            <summary>
            A users email
            </summary>
        </member>
        <member name="P:Octokit.EmailAddress.Email">
            <summary>
            The email address
            </summary>
        </member>
        <member name="P:Octokit.EmailAddress.Verified">
            <summary>
            True if the email is verified; otherwise false
            </summary>
        </member>
        <member name="P:Octokit.EmailAddress.Primary">
            <summary>
            True if this is the users primary email; otherwise false
            </summary>
        </member>
        <member name="P:Octokit.EmailAddress.Visibility">
            <summary>
            "private" or "public" if the email address is the primary;
            otherwise null
            </summary>
        </member>
        <member name="T:Octokit.EmailVisibility">
            <summary>
            Represents the visibility of an email address.
            </summary>
        </member>
        <member name="F:Octokit.EmailVisibility.Public">
            <summary>
            Primary email address and is public
            </summary>
        </member>
        <member name="F:Octokit.EmailVisibility.Private">
            <summary>
            Primary email address and is private
            </summary>
        </member>
        <member name="T:Octokit.PreReceiveEnvironment">
            <summary>
            Describes a pre-receive environment.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironment.Id">
            <summary>
            Identifier for the pre-receive environment.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironment.Name">
            <summary>
            The name of the environment as displayed in the UI.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironment.Url">
            <summary>
            URL to the pre-receive environment.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironment.ImageUrl">
            <summary>
            URL to the tarball that will be downloaded and extracted.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironment.HtmlUrl">
            <summary>
            UI URL to the pre-receive environment.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironment.DefaultEnvironment">
            <summary>
            Whether this is the default environment that ships with GitHub Enterprise.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironment.CreatedAt">
            <summary>
            The time when the pre-receive environment was created.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironment.HooksCount">
            <summary>
            The number of pre-receive hooks that use this environment.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironment.Download">
            <summary>
            This environment's download status.
            </summary>
        </member>
        <member name="M:Octokit.PreReceiveEnvironment.ToUpdate">
            <summary>
            Prepares an <see cref="T:Octokit.UpdatePreReceiveEnvironment"/> for use when updating a pre-receive environment.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Octokit.PreReceiveEnvironmentDownload">
            <summary>
            Describes the current download state of a pre-receive environment image.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironmentDownload.Url">
            <summary>
            URL to the download status for a pre-receive environment.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironmentDownload.State">
            <summary>
            The state of the most recent download.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironmentDownload.Message">
            <summary>
            On failure, this will have any error messages produced.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveEnvironmentDownload.DownloadedAt">
            <summary>
            The time when the most recent download started.
            </summary>
        </member>
        <member name="T:Octokit.PreReceiveEnvironmentDownloadState">
            <summary>
            The state of the most recent download.
            </summary>
        </member>
        <member name="T:Octokit.PreReceiveHook">
            <summary>
            Describes a pre-receive hook.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveHook.Id">
            <summary>
            The identifier for the pre-receive hook.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveHook.Name">
            <summary>
            The name of the hook.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveHook.Enforcement">
            <summary>
            The state of enforcement for this hook.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveHook.Script">
            <summary>
            The script that the hook runs.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveHook.ScriptRepository">
            <summary>
            The GitHub repository where the script is kept.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveHook.Environment">
            <summary>
            The pre-receive environment where the script is executed.
            </summary>
        </member>
        <member name="P:Octokit.PreReceiveHook.AllowDownstreamConfiguration">
            <summary>
            Whether enforcement can be overridden at the org or repo level.
            </summary>
        </member>
        <member name="T:Octokit.PreReceiveHookEnforcement">
            <summary>
            The state of enforcement for a hook.
            </summary>
        </member>
        <member name="F:Octokit.PreReceiveHookEnforcement.Disabled">
            <summary>
            Indicates the pre-receive hook will not run.
            </summary>
        </member>
        <member name="F:Octokit.PreReceiveHookEnforcement.Enabled">
            <summary>
            Indicates it will run and reject any pushes that result in a non-zero status.
            </summary>
        </member>
        <member name="F:Octokit.PreReceiveHookEnforcement.Testing">
            <summary>
            Means the script will run but will not cause any pushes to be rejected.
            </summary>
        </member>
        <member name="T:Octokit.EnvironmentApproval">
            <summary>
            Represents an environment for a deployment approval.
            </summary>
        </member>
        <member name="P:Octokit.EnvironmentApproval.Id">
            <summary>
            The Id of the environment.
            </summary>
        </member>
        <member name="P:Octokit.EnvironmentApproval.NodeId">
            <summary>
            GraphQL Node Id.
            </summary>
        </member>
        <member name="P:Octokit.EnvironmentApproval.Name">
            <summary>
            The name of the environment.
            </summary>
        </member>
        <member name="P:Octokit.EnvironmentApproval.Url">
            <summary>
            The URL for this environment.
            </summary>
        </member>
        <member name="P:Octokit.EnvironmentApproval.HtmlUrl">
            <summary>
            The URL for the HTML view of this environment.
            </summary>
        </member>
        <member name="P:Octokit.EnvironmentApproval.CreatedAt">
            <summary>
            The time that the environment was created.
            </summary>
        </member>
        <member name="P:Octokit.EnvironmentApproval.UpdatedAt">
            <summary>
            The time that the environment was last updated.
            </summary>
        </member>
        <member name="T:Octokit.EnvironmentApprovals">
            <summary>
            Represents an environment for a deployment approval.
            </summary>
        </member>
        <member name="P:Octokit.EnvironmentApprovals.Environments">
            <summary>
            The list of environments that were approved or rejected.
            </summary>
        </member>
        <member name="P:Octokit.EnvironmentApprovals.User">
            <summary>
            The user that approved or rejected the deployments.
            </summary>
        </member>
        <member name="P:Octokit.EnvironmentApprovals.State">
            <summary>
            Whether deployment to the environment(s) was approved or rejected.
            </summary>
        </member>
        <member name="P:Octokit.EnvironmentApprovals.Comment">
            <summary>
            The comment submitted with the deployment review.
            </summary>
        </member>
        <member name="P:Octokit.EventInfo.Id">
            <summary>
            The id of the issue/pull request event.
            </summary>
        </member>
        <member name="P:Octokit.EventInfo.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.EventInfo.Url">
            <summary>
            The URL for this event.
            </summary>
        </member>
        <member name="P:Octokit.EventInfo.Actor">
            <summary>
            Always the User that generated the event.
            </summary>
        </member>
        <member name="P:Octokit.EventInfo.Assignee">
            <summary>
            The user that was assigned, if the event was 'Assigned'.
            </summary>
        </member>
        <member name="P:Octokit.EventInfo.Label">
            <summary>
            The label that was assigned, if the event was 'Labeled'
            </summary>
        </member>
        <member name="P:Octokit.EventInfo.Event">
            <summary>
            Identifies the actual type of Event that occurred.
            </summary>
        </member>
        <member name="P:Octokit.EventInfo.CommitId">
            <summary>
            The String SHA of a commit that referenced this Issue.
            </summary>
        </member>
        <member name="P:Octokit.EventInfo.CreatedAt">
            <summary>
            Date the event occurred for the issue/pull request.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.AddedToProject">
            <summary>
            The issue was added to a project board.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Assigned">
            <summary>
            The issue was assigned to the actor.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.AutomaticBaseChangeFailed">
            <summary>
            GitHub unsuccessfully attempted to automatically change the base branch of the pull request.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.AutomaticBaseChangeSucceeded">
            <summary>
            GitHub successfully attempted to automatically change the base branch of the pull request.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.BaseRefChanged">
            <summary>
            The base reference branch of the pull request changed.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Closed">
            <summary>
            The issue was closed by the actor. When the commit_id is present, it identifies the commit that
            closed the issue using “closes / fixes #NN” syntax.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Commented">
            <summary>
            A comment was added to the issue.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Committed">
            <summary>
            A commit was added to the pull request's HEAD branch.
            Only provided for pull requests.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Connected">
            <summary>
            An issue was connected.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.ConvertToDraft">
            <summary>
            The pull request was converted to draft mode.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.ConvertedNoteToIssue">
            <summary>
            The issue was created by converting a note in a project board to an issue.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Crossreferenced">
            <summary>
            The issue was referenced from another issue.
            The source attribute contains the id, actor, and
            url of the reference's source.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Demilestoned">
            <summary>
            The issue was removed from a milestone.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Deployed">
            <summary>
            The pull request was deployed.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.DeploymentEnvironmentChanged">
            <summary>
            The pull request deployment environment was changed.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Disconnected">
            <summary>
            The issue or pull request was unlinked from another issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.HeadRefDeleted">
            <summary>
            The pull request’s branch was deleted.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.HeadRefRestored">
            <summary>
            The pull request’s branch was restored.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.HeadRefForcePushed">
            <summary>
            The pull request’s branch was force pushed to.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Labeled">
            <summary>
            A label was added to the issue.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Locked">
            <summary>
            The issue was locked by the actor.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Mentioned">
            <summary>
            The actor was @mentioned in an issue body.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.MarkedAsDuplicate">
            <summary>
            A user with write permissions marked an issue as a duplicate of another issue or a pull request as a duplicate of another pull request.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Merged">
            <summary>
            The issue was merged by the actor. The commit_id attribute is the SHA1 of the HEAD commit that was merged.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Milestoned">
            <summary>
            The issue was added to a milestone.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.MovedColumnsInProject">
            <summary>
            The issue was moved between columns in a project board.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Pinned">
            <summary>
            An issue was pinned.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.ReadyForReview">
            <summary>
            The pull request is ready for review
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Referenced">
            <summary>
            The issue was referenced from a commit message. The commit_id attribute is the commit SHA1 of where
            that happened.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.RemovedFromProject">
            <summary>
            The issue was removed from a project board.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Renamed">
            <summary>
            The issue title was changed.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Reopened">
            <summary>
            The issue was reopened by the actor.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.ReviewDismissed">
            <summary>
            The actor dismissed a review from the pull request.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.ReviewRequested">
            <summary>
            The actor requested review from the subject on this pull request.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.ReviewRequestRemoved">
            <summary>
            The actor removed the review request for the subject on this pull request.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Reviewed">
            <summary>
            The issue was reviewed.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Subscribed">
            <summary>
            The actor subscribed to receive notifications for an issue.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Transferred">
            <summary>
            An issue was transferred.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Unassigned">
            <summary>
            The issue was unassigned to the actor.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Unlabeled">
            <summary>
            A label was removed from the issue.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Unlocked">
            <summary>
            The issue was unlocked by the actor.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.UnmarkedAsDuplicate">
            <summary>
            An issue that a user had previously marked as a duplicate of another issue is no longer considered a duplicate.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Unpinned">
            <summary>
            An issue was unpinned.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.Unsubscribed">
            <summary>
            The actor unsubscribed from notifications for an issue.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.UserBlocked">
            <summary>
            An organization owner blocked a user from the organization.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.LineCommented">
            <summary>
            A line comment was made.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.CommitCommented">
            <summary>
            A commit comment was made.
            </summary>
        </member>
        <member name="F:Octokit.EventInfoState.CommentDeleted">
            <summary>
            An issue comment was deleted.
            </summary>
        </member>
        <member name="T:Octokit.Feed">
            <summary>
            Lists all the feeds available to the authenticating user:
            </summary>
        </member>
        <member name="P:Octokit.Feed.TimelineUrl">
            <summary>
            The GitHub global public timeline
            </summary>
        </member>
        <member name="P:Octokit.Feed.UserUrl">
            <summary>
            The public timeline for any user, using URI template
            </summary>
        </member>
        <member name="P:Octokit.Feed.CurrentUserPublicUrl">
            <summary>
            The public timeline for the authenticated user
            </summary>
        </member>
        <member name="P:Octokit.Feed.CurrentUserUrl">
            <summary>
            The private timeline for the authenticated user
            </summary>
        </member>
        <member name="P:Octokit.Feed.CurrentUserActorUrl">
            <summary>
            The private timeline for activity created by the authenticated user
            </summary>
        </member>
        <member name="P:Octokit.Feed.CurrentUserOrganizationUrl">
            <summary>
            The private timeline for the authenticated user for a given organization, using URI template
            </summary>
        </member>
        <member name="P:Octokit.Feed.Links">
            <summary>
            List of feed urls including feed url and feed type, e.g. application/atom+xml
            </summary>
        </member>
        <member name="T:Octokit.FeedLinks">
            <summary>
            Collection of feeds including both url and type
            </summary>
        </member>
        <member name="P:Octokit.FeedLinks.Timeline">
            <summary>
            The GitHub global public timeline
            </summary>
        </member>
        <member name="P:Octokit.FeedLinks.User">
            <summary>
            The public timeline for any user, using URI template
            </summary>
        </member>
        <member name="P:Octokit.FeedLinks.CurrentUserPublic">
            <summary>
            The public timeline for the authenticated user
            </summary>
        </member>
        <member name="P:Octokit.FeedLinks.CurrentUser">
            <summary>
            The private timeline for the authenticated user
            </summary>
        </member>
        <member name="P:Octokit.FeedLinks.CurrentUserActor">
            <summary>
            The private timeline for activity created by the authenticated user
            </summary>
        </member>
        <member name="P:Octokit.FeedLinks.CurrentUserOrganization">
            <summary>
            The private timeline for the authenticated user for a given organization, using URI template
            </summary>
        </member>
        <member name="T:Octokit.FeedLink">
            <summary>
            Feed information including feed url and feed type
            </summary>
        </member>
        <member name="P:Octokit.FeedLink.Href">
            <summary>
            Link to feed
            </summary>
        </member>
        <member name="P:Octokit.FeedLink.Type">
            <summary>
            Feed type, e.g. application/atom+xml
            </summary>
        </member>
        <member name="T:Octokit.GeneratedReleaseNotes">
            <summary>
            Used to retrieve generated release notes.
            </summary>
            <remarks>
            API: https://docs.github.com/rest/releases/releases#generate-release-notes-content-for-a-release
            The generated release notes are not saved anywhere.
            They are intended to be generated and used when creating a new release.
            </remarks>
        </member>
        <member name="P:Octokit.GeneratedReleaseNotes.Name">
            <summary>
            Gets the name of the release.
            </summary>
            <value>
            The name of the relaese.
            </value>
        </member>
        <member name="P:Octokit.GeneratedReleaseNotes.Body">
            <summary>
            Gets the body of the release.
            </summary>
            <value>
            The body of the release.
            </value>
        </member>
        <member name="P:Octokit.Gist.Url">
            <summary>
            The API URL for this <see cref="T:Octokit.Gist"/>.
            </summary>
        </member>
        <member name="P:Octokit.Gist.Id">
            <summary>
            The Id of this <see cref="T:Octokit.Gist"/>.
            </summary>
            <remarks>
            Given a gist url of https://gist.github.com/UserName/1234 the Id would be '1234'.
            </remarks>
        </member>
        <member name="P:Octokit.Gist.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Gist.Description">
            <summary>
            A description of the <see cref="T:Octokit.Gist"/>.
            </summary>
        </member>
        <member name="P:Octokit.Gist.Public">
            <summary>
            Indicates if the <see cref="T:Octokit.Gist"/> is private or public.
            </summary>
        </member>
        <member name="P:Octokit.Gist.Owner">
            <summary>
            The <see cref="T:Octokit.User"/> who owns this <see cref="T:Octokit.Gist"/>.
            </summary>
            <remarks>
            Given a gist url of https://gist.github.com/UserName/1234 the Owner would be 'UserName'.
            </remarks>
        </member>
        <member name="P:Octokit.Gist.Files">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing all <see cref="T:Octokit.GistFile"/>s in this <see cref="T:Octokit.Gist"/>.
            </summary>
        </member>
        <member name="P:Octokit.Gist.Comments">
            <summary>
            The number of comments on this <see cref="T:Octokit.Gist"/>.
            </summary>
        </member>
        <member name="P:Octokit.Gist.CommentsUrl">
            <summary>
            A url to retrieve the comments for this <see cref="T:Octokit.Gist"/>.
            </summary>
        </member>
        <member name="P:Octokit.Gist.HtmlUrl">
            <summary>
            URL to view the gist on gist.github.com.
            </summary>
        </member>
        <member name="P:Octokit.Gist.GitPullUrl">
            <summary>
            The git url to pull from to retrieve the contents for this <see cref="T:Octokit.Gist"/>.
            </summary>
        </member>
        <member name="P:Octokit.Gist.GitPushUrl">
            <summary>
            The git url to push to when changing this <see cref="T:Octokit.Gist"/>.
            </summary>
        </member>
        <member name="P:Octokit.Gist.CreatedAt">
            <summary>
            The <see cref="T:System.DateTimeOffset"/> for when this <see cref="T:Octokit.Gist"/> was created.
            </summary>
        </member>
        <member name="P:Octokit.Gist.UpdatedAt">
            <summary>
            The <see cref="T:System.DateTimeOffset"/> for when this <see cref="T:Octokit.Gist"/> was last updated.
            </summary>
        </member>
        <member name="P:Octokit.Gist.Forks">
            <summary>
            A <see cref="T:System.Collections.Generic.IList`1"/> of all <see cref="T:Octokit.GistFork"/> that exist for this <see cref="T:Octokit.Gist"/>.
            </summary>
        </member>
        <member name="P:Octokit.Gist.History">
            <summary>
            A <see cref="T:System.Collections.Generic.IList`1"/> of all <see cref="T:Octokit.GistHistory"/> containing the full history for this <see cref="T:Octokit.Gist"/>.
            </summary>
        </member>
        <member name="T:Octokit.GistChangeStatus">
            <summary>
            Used by <see cref="T:Octokit.GistHistory"/> to indicate the level of change.
            </summary>
        </member>
        <member name="P:Octokit.GistChangeStatus.Deletions">
            <summary>
            The number of deletions that occurred as part of this change.
            </summary>
        </member>
        <member name="P:Octokit.GistChangeStatus.Additions">
            <summary>
            The number of additions that occurred as part of this change.
            </summary>
        </member>
        <member name="P:Octokit.GistChangeStatus.Total">
            <summary>
            The total number of changes.
            </summary>
        </member>
        <member name="P:Octokit.GistComment.Id">
            <summary>
            The gist comment id.
            </summary>
        </member>
        <member name="P:Octokit.GistComment.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.GistComment.Url">
            <summary>
            The URL for this gist comment.
            </summary>
        </member>
        <member name="P:Octokit.GistComment.Body">
            <summary>
            The body of this gist comment.
            </summary>t
        </member>
        <member name="P:Octokit.GistComment.User">
            <summary>
            The user that created this gist comment.
            </summary>
        </member>
        <member name="P:Octokit.GistComment.CreatedAt">
            <summary>
            The date this comment was created.
            </summary>
        </member>
        <member name="P:Octokit.GistComment.UpdatedAt">
            <summary>
            The date this comment was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GistFile.Size">
            <summary>
            The size in bytes of the file.
            </summary>
        </member>
        <member name="P:Octokit.GistFile.Filename">
            <summary>
            The name of the file
            </summary>
        </member>
        <member name="P:Octokit.GistFile.Type">
            <summary>
            The mime type of the file
            </summary>
        </member>
        <member name="P:Octokit.GistFile.Language">
            <summary>
            The programming language of the file, if any.
            </summary>
        </member>
        <member name="P:Octokit.GistFile.Content">
            <summary>
            The text content of the file.
            </summary>
        </member>
        <member name="P:Octokit.GistFile.RawUrl">
            <summary>
            The url to download the file.
            </summary>
        </member>
        <member name="P:Octokit.GistFork.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.GistFork.User">
            <summary>
            The <see cref="P:Octokit.GistFork.User"/> that created this <see cref="T:Octokit.GistFork"/>
            </summary>
        </member>
        <member name="P:Octokit.GistFork.Url">
            <summary>
            The API URL for this <see cref="T:Octokit.GistFork"/>.
            </summary>
        </member>
        <member name="P:Octokit.GistFork.CreatedAt">
            <summary>
            The <see cref="T:System.DateTimeOffset"/> for when this <see cref="T:Octokit.Gist"/> was created.
            </summary>
        </member>
        <member name="T:Octokit.GistHistory">
            <summary>
            A historical version of a <see cref="T:Octokit.Gist"/>
            </summary>
        </member>
        <member name="P:Octokit.GistHistory.Url">
            <summary>
            The url that can be used by the API to retrieve this version of the <see cref="T:Octokit.Gist"/>.
            </summary>
        </member>
        <member name="P:Octokit.GistHistory.Version">
            <summary>
            A git sha representing the version.
            </summary>
        </member>
        <member name="P:Octokit.GistHistory.User">
            <summary>
            The <see cref="P:Octokit.GistHistory.User"/> who create this version.
            </summary>
        </member>
        <member name="P:Octokit.GistHistory.ChangeStatus">
            <summary>
            A <see cref="T:Octokit.GistHistory"/> that represents the level of change for this <see cref="T:Octokit.GistHistory"/>.
            </summary>
        </member>
        <member name="P:Octokit.GistHistory.CommittedAt">
            <summary>
            The <see cref="T:System.DateTimeOffset"/> the version was created.
            </summary>
        </member>
        <member name="T:Octokit.GitHubApp">
            <summary>
            Represents a GitHub application.
            </summary>
        </member>
        <member name="P:Octokit.GitHubApp.Id">
            <summary>
            The Id of the GitHub App.
            </summary>
        </member>
        <member name="P:Octokit.GitHubApp.Slug">
            <summary>
            The url-friendly version of the GitHub App name.
            </summary>
        </member>
        <member name="P:Octokit.GitHubApp.Name">
            <summary>
            The Name of the GitHub App.
            </summary>
        </member>
        <member name="P:Octokit.GitHubApp.Owner">
            <summary>
            The Owner of the GitHub App.
            </summary>
        </member>
        <member name="P:Octokit.GitHubApp.Description">
            <summary>
            The Description of the GitHub App.
            </summary>
        </member>
        <member name="P:Octokit.GitHubApp.ExternalUrl">
            <summary>
            The URL to the GitHub App's external website.
            </summary>
        </member>
        <member name="P:Octokit.GitHubApp.HtmlUrl">
            <summary>
            The URL to view the GitHub App on GitHub.
            </summary>
        </member>
        <member name="P:Octokit.GitHubApp.CreatedAt">
            <summary>
            Date the GitHub App was created.
            </summary>
        </member>
        <member name="P:Octokit.GitHubApp.UpdatedAt">
            <summary>
            Date the GitHub App was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GitHubApp.Permissions">
            <summary>
            The Permissions granted to the Installation
            </summary>
        </member>
        <member name="P:Octokit.GitHubApp.Events">
            <summary>
            The Events subscribed to by the Installation
            </summary>
        </member>
        <member name="T:Octokit.GitHubCommit">
            <summary>
            An enhanced git commit containing links to additional resources
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommit.Author">
            <summary>
            Gets the GitHub account information for the commit author. It attempts to match the email
            address used in the commit with the email addresses registered with the GitHub account.
            If no account corresponds to the commit email, then this property is null.
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommit.Committer">
            <summary>
            Gets the GitHub account information for the commit committer. It attempts to match the email
            address used in the commit with the email addresses registered with the GitHub account.
            If no account corresponds to the commit email, then this property is null.
            </summary>
        </member>
        <member name="T:Octokit.GitHubCommitFile">
            <summary>
            The affected files in a <see cref="T:Octokit.GitHubCommit"/>.
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitFile.Filename">
            <summary>
            The name of the file
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitFile.Additions">
            <summary>
            Number of additions performed on the file.
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitFile.Deletions">
            <summary>
            Number of deletions performed on the file.
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitFile.Changes">
            <summary>
            Number of changes performed on the file.
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitFile.Status">
            <summary>
            File status, like modified, added, deleted.
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitFile.BlobUrl">
            <summary>
            The url to the file blob.
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitFile.ContentsUrl">
            <summary>
            The url to file contents API.
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitFile.RawUrl">
            <summary>
            The raw url to download the file.
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitFile.Sha">
            <summary>
            The SHA of the file.
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitFile.Patch">
            <summary>
            The patch associated with the commit
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitFile.PreviousFileName">
            <summary>
            The previous filename for a renamed file.
            </summary>
        </member>
        <member name="T:Octokit.GitHubCommitStats">
            <summary>
            An enhanced git commit containing links to additional resources
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitStats.Additions">
            <summary>
            The number of additions made within the commit
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitStats.Deletions">
            <summary>
            The number of deletions made within the commit
            </summary>
        </member>
        <member name="P:Octokit.GitHubCommitStats.Total">
            <summary>
            The total number of modifications within the commit
            </summary>
        </member>
        <member name="P:Octokit.GitReference.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.GitReference.Url">
            <summary>
            The URL associated with this reference.
            </summary>
        </member>
        <member name="P:Octokit.GitReference.Label">
            <summary>
            The reference label.
            </summary>
        </member>
        <member name="P:Octokit.GitReference.Ref">
            <summary>
            The reference identifier.
            </summary>
        </member>
        <member name="P:Octokit.GitReference.Sha">
            <summary>
            The sha value of the reference.
            </summary>
        </member>
        <member name="P:Octokit.GitReference.User">
            <summary>
            The user associated with this reference.
            </summary>
        </member>
        <member name="P:Octokit.GitReference.Repository">
            <summary>
            The repository associated with this reference.
            </summary>
        </member>
        <member name="T:Octokit.Installation">
            <summary>
            Represents an application installation.
            </summary>
            <remarks>
            For more information see https://docs.github.com/en/rest/apps/installations?apiVersion=2022-11-28#list-app-installations-accessible-to-the-user-access-token
            </remarks>
        </member>
        <member name="P:Octokit.Installation.Account">
            <summary>
            The user who owns the Installation.
            </summary>
        </member>
        <member name="P:Octokit.Installation.HtmlUrl">
            <summary>
            The URL to view the Installation on GitHub.
            </summary>
        </member>
        <member name="P:Octokit.Installation.AppId">
            <summary>
            The Id of the associated GitHub App.
            </summary>
        </member>
        <member name="P:Octokit.Installation.TargetId">
            <summary>
            The Id of the User/Organization the Installation is installed in
            </summary>
        </member>
        <member name="P:Octokit.Installation.TargetType">
            <summary>
            The type of the target (User or Organization)
            </summary>
        </member>
        <member name="P:Octokit.Installation.Permissions">
            <summary>
            The Permissions granted to the Installation
            </summary>
        </member>
        <member name="P:Octokit.Installation.Events">
            <summary>
            The Events subscribed to by the Installation
            </summary>
        </member>
        <member name="P:Octokit.Installation.SingleFileName">
            <summary>
            The single file the GitHub App can manage (when Permissions.SingleFile is set to read or write)
            </summary>
        </member>
        <member name="P:Octokit.Installation.RepositorySelection">
            <summary>
            The choice of repositories the installation is on. Can be either "selected" or "all".
            </summary>
        </member>
        <member name="P:Octokit.Installation.SuspendedBy">
            <summary>
            The user who suspended the Installation. Can be null if the Installation is not suspended.
            </summary>
        </member>
        <member name="P:Octokit.Installation.SuspendedAt">
            <summary>
            The date the Installation was suspended. Can be null if the Installation is not suspended.
            </summary>
        </member>
        <member name="P:Octokit.InstallationId.Id">
            <summary>
            The Installation Id.
            </summary>
        </member>
        <member name="T:Octokit.InstallationPermissions">
            <summary>
            The permissions granted to the user-to-server access token.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Actions">
            <summary>
            The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Administration">
            <summary>
            The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Checks">
            <summary>
            The level of permission to grant the access token for checks on code.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Contents">
            <summary>
            The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Deployments">
            <summary>
            The level of permission to grant the access token for deployments and deployment statuses.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Environments">
            <summary>
            The level of permission to grant the access token for managing repository environments.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Issues">
            <summary>
            The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Metadata">
            <summary>
            The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Packages">
            <summary>
            The level of permission to grant the access token for packages published to GitHub Packages.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Pages">
            <summary>
            The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.PullRequests">
            <summary>
            The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.RepositoryAnnouncementBanners">
            <summary>
            The level of permission to grant the access token to view and manage announcement banners for a repository.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.RepositoryHooks">
            <summary>
            The level of permission to grant the access token to manage the post-receive hooks for a repository.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.RepositoryProjects">
            <summary>
            The level of permission to grant the access token to manage repository projects, columns, and cards.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.SecretScanningAlerts">
            <summary>
            The level of permission to grant the access token to view and manage secret scanning alerts.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Secrets">
            <summary>
            The level of permission to grant the access token to manage repository secrets.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.SecurityEvents">
            <summary>
            The level of permission to grant the access token to view and manage security events like code scanning alerts.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.SingleFile">
            <summary>
            The level of permission to grant the access token to manage just a single file.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Statuses">
            <summary>
            The level of permission to grant the access token for commit statuses.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.VulnerabilityAlerts">
            <summary>
            The level of permission to grant the access token to manage Dependabot alerts.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Workflows">
            <summary>
            The level of permission to grant the access token to update GitHub Actions workflow files.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.Members">
            <summary>
            The level of permission to grant the access token for organization teams and members.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.OrganizationAdministration">
            <summary>
            The level of permission to grant the access token to manage access to an organization.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.OrganizationCustomRoles">
            <summary>
            The level of permission to grant the access token for custom roles management. This property is in beta and is subject to change.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.OrganizationAnnouncementBanners">
            <summary>
            The level of permission to grant the access token to view and manage announcement banners for an organization.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.OrganizationHooks">
            <summary>
            The level of permission to grant the access token to manage the post-receive hooks for an organization.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.OrganizationPlan">
            <summary>
            The level of permission to grant the access token for viewing an organization's plan.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.OrganizationProjects">
            <summary>
            The level of permission to grant the access token to manage organization projects and projects beta (where available).
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.OrganizationPackages">
            <summary>
            The level of permission to grant the access token for organization packages published to GitHub Packages.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.OrganizationSecrets">
            <summary>
            The level of permission to grant the access token to manage organization secrets.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.OrganizationSelfHostedRunners">
            <summary>
            The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.OrganizationUserBlocking">
            <summary>
            The level of permission to grant the access token to view and manage users blocked by the organization.
            </summary>
        </member>
        <member name="P:Octokit.InstallationPermissions.TeamDiscussions">
            <summary>
            The level of permission to grant the access token to manage team discussions and related comments.
            </summary>
        </member>
        <member name="P:Octokit.InstallationsResponse.TotalCount">
            <summary>
            The total number of check suites that match the request filter
            </summary>
        </member>
        <member name="P:Octokit.InstallationsResponse.Installations">
            <summary>
            The retrieved check suites
            </summary>
        </member>
        <member name="P:Octokit.Issue.Id">
            <summary>
            The internal Id for this issue (not the issue number)
            </summary>
        </member>
        <member name="P:Octokit.Issue.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Issue.Url">
            <summary>
            The URL for this issue.
            </summary>
        </member>
        <member name="P:Octokit.Issue.HtmlUrl">
            <summary>
            The URL for the HTML view of this issue.
            </summary>
        </member>
        <member name="P:Octokit.Issue.CommentsUrl">
            <summary>
            The Comments URL of this issue.
            </summary>
        </member>
        <member name="P:Octokit.Issue.EventsUrl">
            <summary>
            The Events URL of this issue.
            </summary>
        </member>
        <member name="P:Octokit.Issue.Number">
            <summary>
            The issue number.
            </summary>
        </member>
        <member name="P:Octokit.Issue.State">
            <summary>
            Whether the issue is open or closed.
            </summary>
        </member>
        <member name="P:Octokit.Issue.StateReason">
            <summary>
            The reason for the state change. Ignored unless <see cref="P:Octokit.Issue.State"/> is changed.
            </summary>
        </member>
        <member name="P:Octokit.Issue.Title">
            <summary>
            Title of the issue
            </summary>
        </member>
        <member name="P:Octokit.Issue.Body">
            <summary>
            Details about the issue.
            </summary>
        </member>
        <member name="P:Octokit.Issue.ClosedBy">
            <summary>
            Details about the user who has closed this issue.
            </summary>
        </member>
        <member name="P:Octokit.Issue.User">
            <summary>
            The user that created the issue.
            </summary>
        </member>
        <member name="P:Octokit.Issue.Labels">
            <summary>
            The set of labels applied to the issue
            </summary>
        </member>
        <member name="P:Octokit.Issue.Assignee">
            <summary>
            The user this issue is assigned to.
            </summary>
        </member>
        <member name="P:Octokit.Issue.Assignees">
             <summary>
            The multiple users this issue is assigned to.
             </summary>
        </member>
        <member name="P:Octokit.Issue.Milestone">
            <summary>
            The milestone, if any, that this issue is assigned to.
            </summary>
        </member>
        <member name="P:Octokit.Issue.Comments">
            <summary>
            The number of comments on the issue.
            </summary>
        </member>
        <member name="P:Octokit.Issue.ClosedAt">
            <summary>
            The date the issue was closed if closed.
            </summary>
        </member>
        <member name="P:Octokit.Issue.CreatedAt">
            <summary>
            The date the issue was created.
            </summary>
        </member>
        <member name="P:Octokit.Issue.UpdatedAt">
            <summary>
            The date the issue was last updated.
            </summary>
        </member>
        <member name="P:Octokit.Issue.Locked">
            <summary>
            If the issue is locked or not.
            </summary>
        </member>
        <member name="P:Octokit.Issue.Repository">
            <summary>
            The repository the issue comes from.
            </summary>
        </member>
        <member name="P:Octokit.Issue.Reactions">
            <summary>
            The reaction summary for this issue.
            </summary>
        </member>
        <member name="P:Octokit.Issue.ActiveLockReason">
            <summary>
            Reason that the conversation was locked.
            </summary>
        </member>
        <member name="P:Octokit.IssueComment.Id">
            <summary>
            The issue comment Id.
            </summary>
        </member>
        <member name="P:Octokit.IssueComment.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.IssueComment.Url">
            <summary>
            The URL for this issue comment.
            </summary>
        </member>
        <member name="P:Octokit.IssueComment.HtmlUrl">
            <summary>
            The html URL for this issue comment.
            </summary>
        </member>
        <member name="P:Octokit.IssueComment.Body">
            <summary>
            Details about the issue comment.
            </summary>
        </member>
        <member name="P:Octokit.IssueComment.CreatedAt">
            <summary>
            The date the issue comment was created.
            </summary>
        </member>
        <member name="P:Octokit.IssueComment.UpdatedAt">
            <summary>
            The date the issue comment was last updated.
            </summary>
        </member>
        <member name="P:Octokit.IssueComment.User">
            <summary>
            The user that created the issue comment.
            </summary>
        </member>
        <member name="P:Octokit.IssueComment.AuthorAssociation">
            <summary>
            The comment author association with repository.
            </summary>
        </member>
        <member name="P:Octokit.IssueComment.Reactions">
            <summary>
            The reaction summary for this comment.
            </summary>
        </member>
        <member name="F:Octokit.IssueCommentSort.Created">
            <summary>
            Sort by create date (default)
            </summary>
        </member>
        <member name="F:Octokit.IssueCommentSort.Updated">
            <summary>
            Sort by the date of the last update
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.Id">
            <summary>
            The id of the issue/pull request event.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.Url">
            <summary>
            The URL for this issue/pull request event.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.Actor">
            <summary>
            Always the User that generated the event.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.Assignee">
            <summary>
            The user that was assigned, if the event was 'Assigned'.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.Label">
            <summary>
            The label that was assigned, if the event was 'Labeled'
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.Event">
            <summary>
            Identifies the actual type of Event that occurred.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.CommitId">
            <summary>
            The String SHA of a commit that referenced this Issue.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.CommitUrl">
            <summary>
            The commit URL of a commit that referenced this issue.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.CreatedAt">
            <summary>
            Date the event occurred for the issue/pull request.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.Issue">
            <summary>
            The issue associated to this event.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.Rename">
            <summary>
            An object containing rename details
            Only provided for renamed events
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.ProjectCard">
            <summary>
            Information about the project card that triggered the event.
            The project_card attribute is not returned if someone deletes the project board, or if you do not have permission to view it.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.RequestedReviewer">
            <summary>
            The user that was requested to review the pull request.
            Only provided for "review_requested" and "review_request_removed" events.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.ReviewRequester">
            <summary>
            The user that requested the review for the pull request.
            Only provided for "review_requested" and "review_request_removed" events.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.Assigner">
            <summary>
            The user who performed the (un)assignment for the issue, if the event is assigned or unassigned.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.LockReason">
            <summary>
            The reason an issue or pull request conversation was locked, if one was provided.
            Only provided for "locked" and "unlocked" events.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.DismissedReview">
            <summary>
            Object containing dismissed review details.
            Only provided for "review_dismissed" events.
            </summary>
        </member>
        <member name="P:Octokit.IssueEvent.Milestone">
            <summary>
            Milestone object.
            Only provided for "milestoned" and "demilestoned" events.
            </summary>
        </member>
        <member name="P:Octokit.IssueEventProjectCard.Id">
            <summary>
            The identification number of the project card.
            </summary>
        </member>
        <member name="P:Octokit.IssueEventProjectCard.Url">
            <summary>
            The API URL of the project card, if the card still exists.
            Not included for removed_from_project events.
            </summary>
        </member>
        <member name="P:Octokit.IssueEventProjectCard.ProjectId">
            <summary>
            The identification number of the project.
            </summary>
        </member>
        <member name="P:Octokit.IssueEventProjectCard.ProjectUrl">
            <summary>
            The API URL of the project.
            </summary>
        </member>
        <member name="P:Octokit.IssueEventProjectCard.ColumnName">
            <summary>
            The name of the column that the card is listed in.
            </summary>
        </member>
        <member name="P:Octokit.IssueEventProjectCard.PreviousColumnName">
            <summary>
            The name of the column that the card was listed in prior to column_name
            Only returned for moved_columns_in_project events.
            </summary>
        </member>
        <member name="P:Octokit.Label.Id">
            <summary>
            Id of the label
            </summary>
        </member>
        <member name="P:Octokit.Label.Url">
            <summary>
            Url of the label
            </summary>
        </member>
        <member name="P:Octokit.Label.Name">
            <summary>
            Name of the label
            </summary>
        </member>
        <member name="P:Octokit.Label.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Label.Color">
            <summary>
            Color of the label
            </summary>
        </member>
        <member name="P:Octokit.Label.Description">
            <summary>
            Description of the label
            </summary>
        </member>
        <member name="P:Octokit.Label.Default">
            <summary>
            Is default label
            </summary>
        </member>
        <member name="P:Octokit.License.HtmlUrl">
            <summary>
            Url to the license on https://choosealicense.com
            </summary>
        </member>
        <member name="P:Octokit.License.Description">
            <summary>
            A description of the license.
            </summary>
        </member>
        <member name="P:Octokit.License.Category">
            <summary>
            A group or family that the license belongs to such as the GPL family of licenses.
            </summary>
        </member>
        <member name="P:Octokit.License.Implementation">
            <summary>
            Notes on how to properly apply the license.
            </summary>
        </member>
        <member name="P:Octokit.License.Required">
            <summary>
            Set of codes for what is required under the terms of the license. For example, "include-copyright"
            </summary>
        </member>
        <member name="P:Octokit.License.Permitted">
            <summary>
            Set of codes for what is permitted under the terms of the license. For example, "commercial-use"
            </summary>
        </member>
        <member name="P:Octokit.License.Forbidden">
            <summary>
            Set of codes for what is forbidden under the terms of the license. For example, "no-liability"
            </summary>
        </member>
        <member name="P:Octokit.License.Body">
            <summary>
            The text of the license
            </summary>
        </member>
        <member name="P:Octokit.LicenseMetadata.Key">
            <summary>
            Keyword for the given license (i.e. mit, gpl, cc)
            </summary>
        </member>
        <member name="P:Octokit.LicenseMetadata.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.LicenseMetadata.Name">
            <summary>
            Friendly name of the license.
            </summary>
        </member>
        <member name="P:Octokit.LicenseMetadata.SpdxId">
            <summary>
            SPDX license identifier.
            </summary>
        </member>
        <member name="P:Octokit.LicenseMetadata.Url">
            <summary>
            URL to retrieve details about a license.
            </summary>
        </member>
        <member name="P:Octokit.LicenseMetadata.Featured">
            <summary>
            Whether the license is one of the licenses featured on https://choosealicense.com
            </summary>
        </member>
        <member name="P:Octokit.ListArtifactsResponse.TotalCount">
            <summary>
            The number of artifacts found
            </summary>
        </member>
        <member name="P:Octokit.ListArtifactsResponse.Artifacts">
            <summary>
            The list of found artifacts
            </summary>
        </member>
        <member name="T:Octokit.MembershipState">
            <summary>
            States of a Team/Organization Membership
            </summary>
        </member>
        <member name="F:Octokit.MembershipState.Pending">
            <summary>
            The membership is pending
            </summary>
        </member>
        <member name="F:Octokit.MembershipState.Active">
            <summary>
            The membership is active
            </summary>
        </member>
        <member name="T:Octokit.Meta">
            <summary>
            Response from the /meta endpoint that provides information about GitHub.com or a GitHub Enterprise instance.
            </summary>
        </member>
        <member name="M:Octokit.Meta.#ctor">
            <summary>
            Create an instance of the Meta
            </summary>
        </member>
        <member name="M:Octokit.Meta.#ctor(System.Boolean,System.String,System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.String)">
            <summary>
            Create an instance of the Meta
            </summary>
            <param name="verifiablePasswordAuthentication">Whether authentication with username and password is supported.</param>
            <param name="gitHubServicesSha">The currently-deployed SHA of github-services.</param>
            <param name="hooks">An array of IP addresses in CIDR format specifying the addresses that incoming service hooks will originate from on GitHub.com.</param>
            <param name="web">An array of IP addresses in CIDR format specifying the Web servers for GitHub</param>
            <param name="api">An array of IP addresses in CIDR format specifying the Api servers for GitHub</param>
            <param name="git">An array of IP addresses in CIDR format specifying the Git servers for the GitHub server</param>
            <param name="packages">An array of IP addresses in CIDR format specifying the Packages servers for GitHub</param>
            <param name="pages">An array of IP addresses in CIDR format specifying the A records for GitHub Pages.</param>
            <param name="importer">An Array of IP addresses specifying the addresses that source imports will originate from on GitHub.com.</param>
            <param name="actions">An array of IP addresses in CIDR format specifying the Actions servers for GitHub</param>
            <param name="dependabot">An array of IP addresses in CIDR format specifying the Dependabot servers for GitHub</param>
            <param name="installedVersion">The installed version of GitHub Enterprise Server</param>
        </member>
        <member name="P:Octokit.Meta.VerifiablePasswordAuthentication">
            <summary>
            Whether authentication with username and password is supported. (GitHub Enterprise instances using CAS or
            OAuth for authentication will return false. Features like Basic Authentication with a username and
             password, sudo mode, and two-factor authentication are not supported on these servers.)
            </summary>
        </member>
        <member name="P:Octokit.Meta.GitHubServicesSha">
            <summary>
            The currently-deployed SHA of github-services.
            </summary>
        </member>
        <member name="P:Octokit.Meta.Hooks">
            <summary>
            An Array of IP addresses in CIDR format specifying the addresses that incoming service hooks will
            originate from on GitHub.com. Subscribe to the API Changes blog or follow @GitHubAPI on Twitter to get
            updated when this list changes.
            </summary>
        </member>
        <member name="P:Octokit.Meta.Web">
            <summary>
            An Array of IP addresses in CIDR format specifying the Web servers for GitHub.com.
            </summary>
        </member>
        <member name="P:Octokit.Meta.Api">
            <summary>
            An Array of IP addresses in CIDR format specifying the Api servers for GitHub.com.
            </summary>
        </member>
        <member name="P:Octokit.Meta.Git">
            <summary>
            An Array of IP addresses in CIDR format specifying the Git servers for GitHub.com.
            </summary>
        </member>
        <member name="P:Octokit.Meta.Packages">
            <summary>
            An Array of IP addresses in CIDR format specifying the Packages servers for GitHub.com.
            </summary>
        </member>
        <member name="P:Octokit.Meta.Pages">
            <summary>
            An Array of IP addresses in CIDR format specifying the A records for GitHub Pages.
            </summary>
        </member>
        <member name="P:Octokit.Meta.Importer">
            <summary>
            An Array of IP addresses specifying the addresses that source imports will originate from on GitHub.com.
            </summary>
        </member>
        <member name="P:Octokit.Meta.Actions">
            <summary>
            An Array of IP addresses in CIDR format specifying the Actions servers.
            </summary>
        </member>
        <member name="P:Octokit.Meta.Dependabot">
            <summary>
            An Array of IP addresses in CIDR format specifying the Dependabot servers.
            </summary>
        </member>
        <member name="P:Octokit.Meta.InstalledVersion">
            <summary>
            The installed version of GitHub Enterprise Server.
            </summary>
        </member>
        <member name="T:Octokit.Migration">
            <summary>
            Represents a migration.
            </summary>
            <remarks>
            See <a href="https://developer.github.com/v3/migration/migrations/#start-a-migration">docs</a>
            for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Migration.#ctor">
            <summary>
            Parameter-less constructore needed for SimpleJsonSerializer.
            </summary>
        </member>
        <member name="P:Octokit.Migration.Id">
            <summary>
            Id of migration.
            </summary>
        </member>
        <member name="P:Octokit.Migration.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Migration.Guid">
            <summary>
            Guid of migration.
            </summary>
        </member>
        <member name="P:Octokit.Migration.State">
            <summary>
            The state of migration. Can be one of pending, exporting, exported and failed.
            </summary>
        </member>
        <member name="P:Octokit.Migration.LockRepositories">
            <summary>
            Whether to lock repositories.
            </summary>
        </member>
        <member name="P:Octokit.Migration.ExcludeAttachments">
            <summary>
            Whether attachments are excluded or not.
            </summary>
        </member>
        <member name="P:Octokit.Migration.Url">
            <summary>
            URL of migration.
            </summary>
        </member>
        <member name="P:Octokit.Migration.CreatedAt">
            <summary>
            Time of migration creation.
            </summary>
        </member>
        <member name="P:Octokit.Migration.UpdatedAt">
            <summary>
            Time of migration updation.
            </summary>
        </member>
        <member name="P:Octokit.Migration.Repositories">
            <summary>
            List of locked repositories.
            </summary>
        </member>
        <member name="T:Octokit.Migration.MigrationState">
            <summary>
            State of a migration.
            </summary>
            <remarks>
            See: https://developer.github.com/v3/migration/migrations/#get-the-status-of-a-migration
            </remarks>
        </member>
        <member name="F:Octokit.Migration.MigrationState.Pending">
            <summary>
            The migration hasn't started yet.
            </summary>
        </member>
        <member name="F:Octokit.Migration.MigrationState.Exporting">
            <summary>
            The migration is in progress.
            </summary>
        </member>
        <member name="F:Octokit.Migration.MigrationState.Exported">
            <summary>
            The migration finished successfully.
            </summary>
        </member>
        <member name="F:Octokit.Migration.MigrationState.Failed">
            <summary>
            The migration failed.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.Url">
            <summary>
            The URL for this milestone.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.HtmlUrl">
            <summary>
            The Html page for this milestone.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.Id">
            <summary>
            The ID for this milestone.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.Number">
            <summary>
            The milestone number.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Milestone.State">
            <summary>
            Whether the milestone is open or closed.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.Title">
            <summary>
            Title of the milestone.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.Description">
            <summary>
            Optional description for the milestone.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.Creator">
            <summary>
            The user that created this milestone.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.OpenIssues">
            <summary>
            The number of open issues in this milestone.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.ClosedIssues">
            <summary>
            The number of closed issues in this milestone.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.CreatedAt">
            <summary>
            The date this milestone was created.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.DueOn">
            <summary>
            The date, if any, when this milestone is due.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.ClosedAt">
            <summary>
            The date, if any, when this milestone was closed.
            </summary>
        </member>
        <member name="P:Octokit.Milestone.UpdatedAt">
            <summary>
            The date, if any, when this milestone was updated.
            </summary>
        </member>
        <member name="P:Octokit.MiscellaneousRateLimit.Resources">
            <summary>
            Object of resources rate limits
            </summary>
        </member>
        <member name="P:Octokit.MiscellaneousRateLimit.Rate">
            <summary>
            Legacy rate limit - to be depreciated - https://developer.github.com/v3/rate_limit/#deprecation-notice
            </summary>
        </member>
        <member name="P:Octokit.OauthDeviceFlowResponse.DeviceCode">
            <summary>
            The device verification code is 40 characters and used to verify the device.
            </summary>
        </member>
        <member name="P:Octokit.OauthDeviceFlowResponse.UserCode">
            <summary>
            The user verification code is displayed on the device so the user can enter the code in a browser. This code is 8 characters with a hyphen in the middle.
            </summary>
        </member>
        <member name="P:Octokit.OauthDeviceFlowResponse.VerificationUri">
            <summary>
            The verification URL where users need to enter the UserCode: https://github.com/login/device.
            </summary>
        </member>
        <member name="P:Octokit.OauthDeviceFlowResponse.ExpiresIn">
            <summary>
            The number of seconds before the DeviceCode and UserCode expire. The default is 900 seconds or 15 minutes.
            </summary>
        </member>
        <member name="P:Octokit.OauthDeviceFlowResponse.Interval">
            <summary>
            The minimum number of seconds that must pass before you can make a new access token request (POST https://github.com/login/oauth/access_token) to complete the device authorization.
            For example, if the interval is 5, then you cannot make a new request until 5 seconds pass. If you make more than one request over 5 seconds, then you will hit the rate limit
            and receive a slow_down error.
            </summary>
        </member>
        <member name="M:Octokit.OauthToken.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.OauthToken"/> class.
            Use this constructor when you don't have a refreshToken.
            </summary>
            <param name="tokenType">The type of token returned by GitHub.</param>
            <param name="accessToken">The access token returned by GitHub.</param>
            <param name="scope">The auhtorization scope of the returned token.</param>
            <param name="error">The error code returned by the GitHub API.</param>
            <param name="errorDescription">The error message, if any, returned by the GitHub API.</param>
            <param name="errorUri">The GitHub documentation link, detailing the error message.</param>
        </member>
        <member name="M:Octokit.OauthToken.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Collections.Generic.IReadOnlyList{System.String},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.OauthToken"/> class.
            Use this constructor by default.
            </summary>
            <param name="tokenType">The type of token returned by GitHub.</param>
            <param name="accessToken">The access token returned by GitHub.</param>
            <param name="expiresIn">The amount of seconds, before the access token expires.</param>
            <param name="refreshToken">The refresh token returned by GitHub. Use this, to get a new access token if it expires.</param>
            <param name="refreshTokenExpiresIn">The amount of seconds, before the refresh token expires.</param>
            <param name="scope">The auhtorization scope of the returned token.</param>
            <param name="error">The error code returned by the GitHub API.</param>
            <param name="errorDescription">The error message, if any, returned by the GitHub API.</param>
            <param name="errorUri">The GitHub documentation link, detailing the error message.</param>
        </member>
        <member name="P:Octokit.OauthToken.TokenType">
            <summary>
            The type of OAuth token
            </summary>
        </member>
        <member name="P:Octokit.OauthToken.AccessToken">
            <summary>
            The secret OAuth access token. Use this to authenticate Octokit.net's client.
            </summary>
        </member>
        <member name="P:Octokit.OauthToken.ExpiresIn">
            <summary>
            The amount of seconds, until the acces token expires.
            </summary>
        </member>
        <member name="P:Octokit.OauthToken.RefreshToken">
            <summary>
            The secret refresh token.
            Use this to get a new access token, without going through the OAuth flow again.
            </summary>
        </member>
        <member name="P:Octokit.OauthToken.RefreshTokenExpiresIn">
            <summary>
            The amount of seconds, until the refresh token expires.
            </summary>
        </member>
        <member name="P:Octokit.OauthToken.Scope">
            <summary>
            The list of scopes the token includes.
            </summary>
        </member>
        <member name="P:Octokit.OauthToken.Error">
            <summary>
            Gets or sets the error code or the response.
            </summary>
        </member>
        <member name="P:Octokit.OauthToken.ErrorDescription">
            <summary>
            Gets or sets the error description.
            </summary>
        </member>
        <member name="P:Octokit.OauthToken.ErrorUri">
            <summary>
            Gets or sets the error uri.
            </summary>
        </member>
        <member name="P:Octokit.Organization.BillingAddress">
            <summary>
            The billing address for an organization. This is only returned when updating
            an organization.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationCredential.Login">
            <summary>
            User login that owns the underlying credential.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationCredential.CredentialId">
            <summary>
            Unique identifier for the credential.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationCredential.CredentialType">
            <summary>
            Human-readable description of the credential type.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationCredential.TokenLastEight">
            <summary>
            Last eight characters of the credential. Only included in responses with credential_type of personal access token.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationCredential.CredentialAuthorizedAt">
            <summary>
            Date when the credential was authorized for use.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationCredential.Scopes">
            <summary>
            List of oauth scopes the token has been granted.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationCredential.Fingerprint">
            <summary>
            Unique string to distinguish the credential. Only included in responses with credential_type of SSH Key.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationCredential.CredentialAccessedAt">
            <summary>
            Date when the credential was last accessed. May be null if it was never accessed
            </summary>
        </member>
        <member name="P:Octokit.OrganizationCredential.AuthorizedCredentialTitle">
            <summary>
            The title given to the ssh key. This will only be present when the credential is an ssh key.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationCredential.AuthorizedCredentialNote">
            <summary>
            The note given to the token. This will only be present when the credential is a token.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationCredential.AuthorizedCredentialExpiresAt">
            <summary>
            The expiry for the token. This will only be present when the credential is a token.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationMembershipInvitation.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="M:Octokit.OrganizationOidcSubjectClaim.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.OrganizationOidcSubjectClaim"/> class
            </summary>
            <param name="includeClaimKeys">Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.</param>
        </member>
        <member name="P:Octokit.OrganizationOidcSubjectClaim.IncludeClaimKeys">
            <summary>
            Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.
            </summary>
        </member>
        <member name="T:Octokit.OrganizationSecret">
            <summary>
            Represents an organization secret.
            Does not contain the secret value
            </summary>
        </member>
        <member name="P:Octokit.OrganizationSecret.Visibility">
            <summary>
            The visibility level of the secret within the organization
            </summary>
        </member>
        <member name="P:Octokit.OrganizationSecret.SelectedRepositoriesUrl">
            <summary>
            The URL to retrieve the list of selected repositories
            </summary>
        </member>
        <member name="T:Octokit.OrganizationSecretRepositoryCollection">
            <summary>
            Represents response of the repositories for a secret in an organization.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationSecretRepositoryCollection.Count">
            <summary>
            The total count of repositories with visibility to the secret in the organization
            </summary>
        </member>
        <member name="P:Octokit.OrganizationSecretRepositoryCollection.Repositories">
            <summary>
            The list of repositories with visibility to the secret in the organization
            </summary>
        </member>
        <member name="T:Octokit.OrganizationSecretsCollection">
            <summary>
            Represents response of secrets for an organization.
            </summary>
        </member>
        <member name="P:Octokit.OrganizationSecretsCollection.Count">
            <summary>
            The total count of secrets for the organization
            </summary>
        </member>
        <member name="P:Octokit.OrganizationSecretsCollection.Secrets">
            <summary>
            The list of secrets for the organization
            </summary>
        </member>
        <member name="P:Octokit.Package.Id">
            <summary>
            The Id of the package
            </summary>
        </member>
        <member name="P:Octokit.Package.Name">
            <summary>
            The Name of the package
            </summary>
        </member>
        <member name="P:Octokit.Package.PackageType">
            <summary>
            The Type of the package
            </summary>
        </member>
        <member name="P:Octokit.Package.Owner">
            <summary>
            The Owner of the package
            </summary>
        </member>
        <member name="P:Octokit.Package.VersionCount">
            <summary>
            The Version Count of the package
            </summary>
        </member>
        <member name="P:Octokit.Package.Visibility">
            <summary>
            The Visibility of the package
            </summary>
        </member>
        <member name="P:Octokit.Package.Url">
            <summary>
            The Url of the package
            </summary>
        </member>
        <member name="P:Octokit.Package.CreatedAt">
            <summary>
            The Date the package was first created
            </summary>
        </member>
        <member name="P:Octokit.Package.UpdatedAt">
            <summary>
            The Date the package was last updated
            </summary>
        </member>
        <member name="P:Octokit.Package.HtmlUrl">
            <summary>
            The Url of the package
            </summary>
        </member>
        <member name="F:Octokit.PagesBuildStatus.Null">
            <summary>
             The site has yet to be built
            </summary>
        </member>
        <member name="F:Octokit.PagesBuildStatus.Queued">
            <summary>
            The build has been requested but not yet begun
            </summary>
        </member>
        <member name="F:Octokit.PagesBuildStatus.Building">
            <summary>
            The build is in progress
            </summary>
        </member>
        <member name="F:Octokit.PagesBuildStatus.Built">
            <summary>
            The site has been built
            </summary>
        </member>
        <member name="F:Octokit.PagesBuildStatus.Errored">
            <summary>
            An error occurred during the build
            </summary>
        </member>
        <member name="T:Octokit.Page">
            <summary>
             Information about your GitHub Pages configuration
            </summary>
        </member>
        <member name="P:Octokit.Page.Url">
            <summary>
            The pages's API URL.
            </summary>
        </member>
        <member name="P:Octokit.Page.HtmlUrl">
            <summary>
            Absolute URL to the rendered site.
            </summary>
        </member>
        <member name="P:Octokit.Page.Status">
            <summary>
            Build status of the pages site.
            </summary>
        </member>
        <member name="P:Octokit.Page.CName">
            <summary>
            CName of the pages site. Will be null if no CName was provided by the user.
            </summary>
        </member>
        <member name="P:Octokit.Page.Custom404">
            <summary>
            Is a custom 404 page provided.
            </summary>
        </member>
        <member name="T:Octokit.PagesBuild">
            <summary>
            Metadata of a GitHub Pages build.
            </summary>
        </member>
        <member name="P:Octokit.PagesBuild.Url">
            <summary>
            The pages's API URL.
            </summary>
        </member>
        <member name="P:Octokit.PagesBuild.Status">
            <summary>
            The status of the build.
            </summary>
        </member>
        <member name="P:Octokit.PagesBuild.Error">
            <summary>
            Error details - if there was one.
            </summary>
        </member>
        <member name="P:Octokit.PagesBuild.Pusher">
            <summary>
            The user whose commit initiated the build.
            </summary>
        </member>
        <member name="P:Octokit.PagesBuild.Commit">
            <summary>
            Commit SHA.
            </summary>
        </member>
        <member name="P:Octokit.PagesBuild.Duration">
            <summary>
            Duration of the build
            </summary>
        </member>
        <member name="T:Octokit.Participation">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total in the last 52 weeks
            </summary>
        </member>
        <member name="P:Octokit.Participation.All">
            <summary>
            Returns the commit counts made each week, for the last 52 weeks
            </summary>
        </member>
        <member name="P:Octokit.Participation.Owner">
            <summary>
            Returns the commit counts made by the owner each week, for the last 52 weeks
            </summary>
        </member>
        <member name="M:Octokit.Participation.TotalCommitsByOwner">
            <summary>
            The total number of commits made by the owner in the last 52 weeks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.Participation.TotalCommitsByContributors">
            <summary>
            The total number of commits made by contributors in the last 52 weeks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.Participation.TotalCommits">
            <summary>
            The total number of commits made in the last 52 weeks.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Octokit.Plan">
            <summary>
            A plan (either paid or free) for a particular user
            </summary>
        </member>
        <member name="P:Octokit.Plan.Collaborators">
            <summary>
            The number of collaborators allowed with this plan.
            </summary>
            <remarks>This returns <see cref="T:System.Int64"/> because GitHub Enterprise uses a sentinel value of 999999999999 to denote an "unlimited" number of collaborators.</remarks>
        </member>
        <member name="P:Octokit.Plan.Name">
            <summary>
            The name of the plan.
            </summary>
        </member>
        <member name="P:Octokit.Plan.PrivateRepos">
            <summary>
            The number of private repositories allowed with this plan.
            </summary>
            <remarks>This returns <see cref="T:System.Int64"/> because GitHub Enterprise uses a sentinel value of 999999999999 to denote an "unlimited" number of plans.</remarks>
        </member>
        <member name="P:Octokit.Plan.Space">
            <summary>
            The amount of disk space allowed with this plan.
            </summary>
            <remarks>This returns <see cref="T:System.Int64"/> because GitHub Enterprise uses a sentinel value of 999999999999 to denote an "unlimited" amount of disk space.</remarks>
        </member>
        <member name="P:Octokit.Plan.BillingEmail">
            <summary>
            The billing email for the organization. Only has a value in response to editing an organization.
            </summary>
        </member>
        <member name="P:Octokit.Plan.FilledSeats">
            <summary>
            The number of seats filled on this plan
            </summary>
        </member>
        <member name="P:Octokit.Plan.Seats">
            <summary>
            The number of seats available for this plan
            </summary>
        </member>
        <member name="P:Octokit.Project.OwnerUrl">
            <summary>
            The URL for this projects repository.
            </summary>
        </member>
        <member name="P:Octokit.Project.HtmlUrl">
            <summary>
            The HTML URL for this project.
            </summary>
        </member>
        <member name="P:Octokit.Project.Url">
            <summary>
            The URL for this project.
            </summary>
        </member>
        <member name="P:Octokit.Project.Id">
            <summary>
            The Id for this project.
            </summary>
        </member>
        <member name="P:Octokit.Project.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Project.Name">
            <summary>
            The name for this project.
            </summary>
        </member>
        <member name="P:Octokit.Project.Body">
            <summary>
            The body for this project.
            </summary>
        </member>
        <member name="P:Octokit.Project.Number">
            <summary>
            The number for this project.
            </summary>
        </member>
        <member name="P:Octokit.Project.State">
            <summary>
            The current state of this project.
            </summary>
        </member>
        <member name="P:Octokit.Project.Creator">
            <summary>
            The user associated with this project.
            </summary>
        </member>
        <member name="P:Octokit.Project.CreatedAt">
            <summary>
            When this project was created.
            </summary>
        </member>
        <member name="P:Octokit.Project.UpdatedAt">
            <summary>
            When this project was last updated.
            </summary>
        </member>
        <member name="P:Octokit.ProjectCard.ColumnUrl">
            <summary>
            The URL for this cards column.
            </summary>
        </member>
        <member name="P:Octokit.ProjectCard.ContentUrl">
            <summary>
            The URL for this cards content.
            </summary>
        </member>
        <member name="P:Octokit.ProjectCard.Id">
            <summary>
            The Id for this card.
            </summary>
        </member>
        <member name="P:Octokit.ProjectCard.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.ProjectCard.Note">
            <summary>
            The note for this card.
            </summary>
        </member>
        <member name="P:Octokit.ProjectCard.Creator">
            <summary>
            The user associated with this card.
            </summary>
        </member>
        <member name="P:Octokit.ProjectCard.CreatedAt">
            <summary>
            When this card was created.
            </summary>
        </member>
        <member name="P:Octokit.ProjectCard.UpdatedAt">
            <summary>
            When this card was last updated.
            </summary>
        </member>
        <member name="P:Octokit.ProjectCard.Archived">
            <summary>
            Whether this card is archived.
            </summary>
        </member>
        <member name="P:Octokit.ProjectColumn.Id">
            <summary>
            The Id for this column.
            </summary>
        </member>
        <member name="P:Octokit.ProjectColumn.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.ProjectColumn.Name">
            <summary>
            The name for this column.
            </summary>
        </member>
        <member name="P:Octokit.ProjectColumn.ProjectUrl">
            <summary>
            The URL for this columns project.
            </summary>
        </member>
        <member name="P:Octokit.ProjectColumn.CreatedAt">
            <summary>
            When this column was created.
            </summary>
        </member>
        <member name="P:Octokit.ProjectColumn.UpdatedAt">
            <summary>
            When this column was last updated.
            </summary>
        </member>
        <member name="P:Octokit.PublicKey.Url">
            <remarks>
            Only visible for the current user, or with the correct OAuth scope
            </remarks>
        </member>
        <member name="P:Octokit.PublicKey.Title">
            <remarks>
            Only visible for the current user, or with the correct OAuth scope
            </remarks>
        </member>
        <member name="P:Octokit.PullRequest.Id">
            <summary>
            The internal Id for this pull request (not the pull request number)
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Url">
            <summary>
            The URL for this pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.HtmlUrl">
            <summary>
            The URL for the pull request page.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.DiffUrl">
            <summary>
            The URL for the pull request's diff (.diff) file.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.PatchUrl">
            <summary>
            The URL for the pull request's patch (.patch) file.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.IssueUrl">
            <summary>
            The URL for the specific pull request issue.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.StatusesUrl">
            <summary>
            The URL for the pull request statuses.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Number">
            <summary>
            The pull request number.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.State">
            <summary>
            Whether the pull request is open or closed. The default is <see cref="F:Octokit.ItemState.Open"/>.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Title">
            <summary>
            Title of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Body">
            <summary>
            The body (content) contained within the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.CreatedAt">
            <summary>
            When the pull request was created.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.UpdatedAt">
            <summary>
            When the pull request was last updated.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.ClosedAt">
            <summary>
            When the pull request was closed.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.MergedAt">
            <summary>
            When the pull request was merged.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Head">
            <summary>
            The HEAD reference for the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Base">
            <summary>
            The BASE reference for the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.User">
            <summary>
            The user who created the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Assignee">
            <summary>
            The user who is assigned the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Assignees">
             <summary>
            The multiple users this pull request is assigned to.
             </summary>
        </member>
        <member name="P:Octokit.PullRequest.Milestone">
            <summary>
            The milestone, if any, that this pull request is assigned to.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Draft">
            <summary>
            Whether or not the pull request is in a draft state, and cannot be merged.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Merged">
            <summary>
            Whether or not the pull request has been merged.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Mergeable">
            <summary>
            Whether or not the pull request can be merged.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.MergeableState">
            <summary>
            Provides extra information regarding the mergeability of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.MergedBy">
            <summary>
            The user who merged the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.MergeCommitSha">
            <summary>
            The value of this field changes depending on the state of the pull request.
            Not Merged - the hash of the test commit used to determine mergeability.
            Merged with merge commit - the hash of said merge commit.
            Merged via squashing - the hash of the squashed commit added to the base branch.
            Merged via rebase - the hash of the commit that the base branch was updated to.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Comments">
            <summary>
            Total number of comments contained in the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Commits">
            <summary>
            Total number of commits contained in the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Additions">
            <summary>
            Total number of additions contained in the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Deletions">
            <summary>
            Total number of deletions contained in the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.ChangedFiles">
            <summary>
            Total number of files changed in the pull request.
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.Locked">
            <summary>
            If the issue is locked or not
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.MaintainerCanModify">
            <summary>
            Whether maintainers of the base repository can push to the HEAD branch
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.RequestedReviewers">
            <summary>
            Users requested for review
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.RequestedTeams">
            <summary>
            Teams requested for review
            </summary>
        </member>
        <member name="P:Octokit.PullRequest.ActiveLockReason">
            <summary>
            Reason that the conversation was locked
            </summary>
        </member>
        <member name="T:Octokit.MergeableState">
            <summary>
            Provides extra information regarding the mergeability of a pull request
            </summary>
        </member>
        <member name="F:Octokit.MergeableState.Dirty">
            <summary>
            Merge conflict. Merging is blocked.
            </summary>
        </member>
        <member name="F:Octokit.MergeableState.Unknown">
            <summary>
            Mergeability was not checked yet. Merging is blocked.
            </summary>
        </member>
        <member name="F:Octokit.MergeableState.Blocked">
            <summary>
            Failing/missing required status check.  Merging is blocked.
            </summary>
        </member>
        <member name="F:Octokit.MergeableState.Behind">
            <summary>
            Head branch is behind the base branch. Only if required status checks is enabled but loose policy is not. Merging is blocked.
            </summary>
        </member>
        <member name="F:Octokit.MergeableState.Unstable">
            <summary>
            Failing/pending commit status that is not part of the required status checks. Merging is still allowed.
            </summary>
        </member>
        <member name="F:Octokit.MergeableState.HasHooks">
            <summary>
            GitHub Enterprise only, if a repo has custom pre-receive hooks. Merging is allowed.
            </summary>
        </member>
        <member name="F:Octokit.MergeableState.Clean">
            <summary>
            No conflicts, everything good. Merging is allowed.
            </summary>
        </member>
        <member name="F:Octokit.MergeableState.Draft">
            <summary>
            Not ready for review. Merging is blocked.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestCommit.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="T:Octokit.PullRequestMerge">
            <summary>
            Represents the response from an attempt to merge a pull request.
            </summary>
            <remarks>
            Note the request to merge is represented by <see cref="T:Octokit.MergePullRequest"/>
            API: https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button
            </remarks>
        </member>
        <member name="M:Octokit.PullRequestMerge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.PullRequestMerge"/> class.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestMerge.Sha">
            <summary>
            The sha reference of the commit.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestMerge.Merged">
            <summary>
            True if merged successfully, otherwise false.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestMerge.Message">
            <summary>
            The message that will be used for the merge commit.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReview.Id">
            <summary>
            The review Id.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReview.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReview.State">
            <summary>
            The state of the review
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReview.CommitId">
            <summary>
            The commit Id the review is associated with.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReview.User">
            <summary>
            The user that created the review.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReview.Body">
            <summary>
            The text of the review.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReview.HtmlUrl">
            <summary>
            The URL for this review on GitHub.com
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReview.PullRequestUrl">
            <summary>
            The URL for the pull request via the API.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReview.AuthorAssociation">
            <summary>
            The comment author association with repository.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReview.SubmittedAt">
            <summary>
            The time the review was submitted
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.Url">
            <summary>
            URL of the comment via the API.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.Id">
            <summary>
            The comment Id.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.DiffHunk">
            <summary>
            The diff hunk the comment is about.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.Path">
            <summary>
            The relative path of the file the comment is about.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.Position">
            <summary>
            The line index in the diff.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.OriginalPosition">
            <summary>
            The comment original position.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.CommitId">
            <summary>
            The commit Id the comment is associated with.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.OriginalCommitId">
            <summary>
            The original commit Id the comment is associated with.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.User">
            <summary>
            The user that created the comment.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.Body">
            <summary>
            The text of the comment.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.CreatedAt">
            <summary>
            The date the comment was created.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.UpdatedAt">
            <summary>
            The date the comment was last updated.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.HtmlUrl">
            <summary>
            The URL for this comment on GitHub.com
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.PullRequestUrl">
            <summary>
            The URL for the pull request via the API.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.Reactions">
            <summary>
            The reaction summary for this comment.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.InReplyToId">
            <summary>
            The Id of the comment this comment replys to.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.PullRequestReviewId">
            <summary>
            The Id of the pull request this comment belongs to.
            </summary>
        </member>
        <member name="P:Octokit.PullRequestReviewComment.AuthorAssociation">
            <summary>
            The comment author association with repository.
            </summary>
        </member>
        <member name="F:Octokit.PullRequestReviewCommentSort.Created">
            <summary>
            Sort by create date (default)
            </summary>
        </member>
        <member name="F:Octokit.PullRequestReviewCommentSort.Updated">
            <summary>
            Sort by the date of the last update
            </summary>
        </member>
        <member name="P:Octokit.PunchCard.PunchPoints">
            <summary>
            The raw punch card points
            </summary>
        </member>
        <member name="M:Octokit.PunchCard.GetCommitCountFor(System.DayOfWeek,System.Int32)">
            <summary>
            Gets the number of commits made on the specified day of the week
            at the hour of the day, over the lifetime of this repository
            </summary>
            <param name="dayOfWeek">The day of the week to query</param>
            <param name="hourOfDay">The hour in 24 hour time. 0-23.</param>
            <returns>The total number of commits made.</returns>
        </member>
        <member name="P:Octokit.Reaction.Id">
            <summary>
            The Id for this reaction.
            </summary>
        </member>
        <member name="P:Octokit.Reaction.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Reaction.User">
            <summary>
            Information about the user.
            </summary>
        </member>
        <member name="P:Octokit.Reaction.Content">
            <summary>
            The reaction type for this commit comment.
            </summary>
        </member>
        <member name="P:Octokit.Reference.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="T:Octokit.RefType">
            <summary>
            Represents the type of object created or deleted
            </summary>
        </member>
        <member name="F:Octokit.RefType.Repository">
            <summary>
            The object is of type repository
            </summary>
        </member>
        <member name="F:Octokit.RefType.Branch">
            <summary>
            The object is of type branch
            </summary>
        </member>
        <member name="F:Octokit.RefType.Tag">
            <summary>
            The object is of type tag
            </summary>
        </member>
        <member name="P:Octokit.Release.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.ReleaseAsset.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.RepositoriesResponse.TotalCount">
            <summary>
            The total number of check suites that match the request filter
            </summary>
        </member>
        <member name="P:Octokit.RepositoriesResponse.Repositories">
            <summary>
            The retrieved check suites
            </summary>
        </member>
        <member name="P:Octokit.Repository.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="T:Octokit.RepositoryContent">
            <summary>
            Represents a piece of content in the repository. This could be a submodule, a symlink, a directory, or a file.
            Look at the Type property to figure out which one it is.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContent.Encoding">
            <summary>
            The encoding of the content if this is a file. Typically "base64". Otherwise it's null.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContent.EncodedContent">
            <summary>
            The Base64 encoded content if this is a file. Otherwise it's null.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContent.Content">
            <summary>
            The unencoded content. Only access this if the content is expected to be text and not binary content.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContent.Target">
            <summary>
            Path to the target file in the repository if this is a symlink. Otherwise it's null.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContent.SubmoduleGitUrl">
            <summary>
            The location of the submodule repository if this is a submodule. Otherwise it's null.
            </summary>
        </member>
        <member name="T:Octokit.RepositoryContentChangeSet">
            <summary>
            The response from the Repository Contents API. The API assumes a dynamic client type so we need
            to model that.
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/</remarks>
        </member>
        <member name="P:Octokit.RepositoryContentChangeSet.Content">
            <summary>
            The content of the response.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContentChangeSet.Commit">
            <summary>
            The commit information for the content change.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryContentLicense.License">
            <summary>
            License information
            </summary>
        </member>
        <member name="T:Octokit.RepositoryContributor">
            <summary>
            Represents a users contributions on a GitHub repository.
            </summary>
        </member>
        <member name="T:Octokit.RepositoryInvitation">
            <summary>
            Repository invitations let you manage who you collaborate with.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryInvitation.Id">
            <summary>
            Unique identifier of the repository invitation.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryInvitation.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.RepositoryInvitation.Permissions">
            <summary>
            The permission associated with the invitation.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryInvitation.Expired">
            <summary>
            Whether or not the invitation has expired
            </summary>
        </member>
        <member name="P:Octokit.RepositoryInvitation.Url">
            <summary>
            URL for the repository invitation
            </summary>
        </member>
        <member name="M:Octokit.RepositoryOidcSubjectClaim.#ctor(System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.RepositoryOidcSubjectClaim"/> class
            </summary>
            <param name="useDefault">Whether to use the default template or not. If true, the IncludeClaimKeys field is ignored.</param>
            <param name="includeClaimKeys">Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.</param>
        </member>
        <member name="P:Octokit.RepositoryOidcSubjectClaim.UseDefault">
            <summary>
            Whether to use the default template or not. If true, the IncludeClaimKeys field is ignored.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryOidcSubjectClaim.IncludeClaimKeys">
            <summary>
            Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryPermissions.Admin">
            <summary>
            Whether the current user has administrative permissions
            </summary>
        </member>
        <member name="P:Octokit.RepositoryPermissions.Maintain">
            <summary>
            Whether the current user has maintain permissions
            </summary>
        </member>
        <member name="P:Octokit.RepositoryPermissions.Push">
            <summary>
            Whether the current user has push permissions
            </summary>
        </member>
        <member name="P:Octokit.RepositoryPermissions.Triage">
            <summary>
            Whether the current user has triage permissions
            </summary>
        </member>
        <member name="P:Octokit.RepositoryPermissions.Pull">
            <summary>
            Whether the current user has pull permissions
            </summary>
        </member>
        <member name="T:Octokit.RepositorySecret">
            <summary>
            Represents a repository secret.
            Does not contain the secret value
            </summary>
        </member>
        <member name="P:Octokit.RepositorySecret.Name">
            <summary>
            The name of the repository secret
            </summary>
        </member>
        <member name="P:Octokit.RepositorySecret.CreatedAt">
            <summary>
            The date and time that the secret was created
            </summary>
        </member>
        <member name="P:Octokit.RepositorySecret.UpdatedAt">
            <summary>
            The date and time the secret was last updated
            </summary>
        </member>
        <member name="T:Octokit.RepositorySecretsCollection">
            <summary>
            Represents response of secrets for a repository.
            </summary>
        </member>
        <member name="P:Octokit.RepositorySecretsCollection.TotalCount">
            <summary>
            The total count of secrets for the repository
            </summary>
        </member>
        <member name="P:Octokit.RepositorySecretsCollection.Secrets">
            <summary>
            The list of secrets for the repository
            </summary>
        </member>
        <member name="T:Octokit.RepositoryStar">
            <summary>
            Represents additional information about a star (such as creation time)
            </summary>
        </member>
        <member name="P:Octokit.RepositoryStar.StarredAt">
            <summary>
            The date the star was created.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryStar.Repo">
            <summary>
            The repository associated with the star.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryTag.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="T:Octokit.RepositoryVariable">
            <summary>
            Represents a repository variable.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryVariable.Name">
            <summary>
            The name of the repository variable
            </summary>
        </member>
        <member name="P:Octokit.RepositoryVariable.Value">
            <summary>
            The value of the repository variable
            </summary>
        </member>
        <member name="P:Octokit.RepositoryVariable.CreatedAt">
            <summary>
            The date and time that the variable was created
            </summary>
        </member>
        <member name="P:Octokit.RepositoryVariable.UpdatedAt">
            <summary>
            The date and time the variable was last updated
            </summary>
        </member>
        <member name="T:Octokit.RepositoryVariablesCollection">
            <summary>
            Represents response of variables for a repository.
            </summary>
        </member>
        <member name="P:Octokit.RepositoryVariablesCollection.TotalCount">
            <summary>
            The total count of variables for the repository
            </summary>
        </member>
        <member name="P:Octokit.RepositoryVariablesCollection.Variables">
            <summary>
            The list of variables for the repository
            </summary>
        </member>
        <member name="T:Octokit.RequestedReviews">
            <summary>
            Users and teams requested to review a pull request
            </summary>
        </member>
        <member name="P:Octokit.ResourceRateLimit.Core">
            <summary>
            Rate limits for core API
            </summary>
        </member>
        <member name="P:Octokit.ResourceRateLimit.Search">
            <summary>
            Rate Limits for Search API
            </summary>
        </member>
        <member name="P:Octokit.ResourceRateLimit.Graphql">
            <summary>
            Rate Limits for GraphQL API
            </summary>
        </member>
        <member name="P:Octokit.RunnerGroupResponse.TotalCount">
            <summary>
            The total number of runner groups.
            </summary>
        </member>
        <member name="P:Octokit.RunnerGroupResponse.RunnerGroups">
            <summary>
            The retrieved runner groups.
            </summary>
        </member>
        <member name="P:Octokit.RunnerResponse.TotalCount">
            <summary>
            The total number of runners.
            </summary>
        </member>
        <member name="P:Octokit.RunnerResponse.Runners">
            <summary>
            The retrieved runners.
            </summary>
        </member>
        <member name="P:Octokit.SearchCode.Name">
            <summary>
            file name
            </summary>
        </member>
        <member name="P:Octokit.SearchCode.Path">
            <summary>
            path to file
            </summary>
        </member>
        <member name="P:Octokit.SearchCode.Sha">
            <summary>
            Sha for file
            </summary>
        </member>
        <member name="P:Octokit.SearchCode.Url">
            <summary>
            api-url to file
            </summary>
        </member>
        <member name="P:Octokit.SearchCode.GitUrl">
            <summary>
            git-url to file
            </summary>
        </member>
        <member name="P:Octokit.SearchCode.HtmlUrl">
            <summary>
            html-url to file
            </summary>
        </member>
        <member name="P:Octokit.SearchCode.Repository">
            <summary>
            Repo where this file belongs to
            </summary>
        </member>
        <member name="T:Octokit.SecretsPublicKey">
            <summary>
            Represents the public key used to sign the secrets to post to GitHub
            </summary>
        </member>
        <member name="P:Octokit.SecretsPublicKey.KeyId">
            <summary>
            The id of this repository public key. Needed to create or update a secret
            </summary>
        </member>
        <member name="P:Octokit.SecretsPublicKey.Key">
            <summary>
            The public key for this repository
            </summary>
        </member>
        <member name="P:Octokit.Subscription.Subscribed">
            <summary>
            Determines if notifications should be received from this repository.
            </summary>
        </member>
        <member name="P:Octokit.Subscription.Ignored">
            <summary>
            Determines if all notifications should be blocked from this repository.
            </summary>
        </member>
        <member name="P:Octokit.Subscription.Reason">
            <summary>
            Url of the label
            </summary>
        </member>
        <member name="P:Octokit.Subscription.CreatedAt">
            <summary>
            The <see cref="T:System.DateTimeOffset"/> for when this <see cref="T:Octokit.Subscription"/> was created.
            </summary>
        </member>
        <member name="P:Octokit.Subscription.Url">
            <summary>
            The API URL for this <see cref="T:Octokit.Subscription"/>.
            </summary>
        </member>
        <member name="P:Octokit.Subscription.RepositoryUrl">
            <summary>
            The API URL for this <see cref="T:Octokit.Repository"/>.
            </summary>
        </member>
        <member name="T:Octokit.TaggedType">
            <summary>
            Represents the type of object being tagged
            </summary>
        </member>
        <member name="T:Octokit.Team">
            <summary>
            organization teams
            </summary>
        </member>
        <member name="P:Octokit.Team.Url">
            <summary>
            url for this team
            </summary>
        </member>
        <member name="P:Octokit.Team.HtmlUrl">
            <summary>
            The HTML URL for this team.
            </summary>
        </member>
        <member name="P:Octokit.Team.Id">
            <summary>
            team id
            </summary>
        </member>
        <member name="P:Octokit.Team.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.Team.Slug">
            <summary>
            team slug
            </summary>
        </member>
        <member name="P:Octokit.Team.Name">
            <summary>
            team name
            </summary>
        </member>
        <member name="P:Octokit.Team.Description">
            <summary>
            team description
            </summary>
        </member>
        <member name="P:Octokit.Team.Privacy">
            <summary>
            team privacy
            </summary>
        </member>
        <member name="P:Octokit.Team.Permission">
            <summary>
            Deprecated. The permission that new repositories will be added to the team with when none is specified
            </summary>
        </member>
        <member name="P:Octokit.Team.TeamRepositoryPermissions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Octokit.Team.MembersCount">
            <summary>
            how many members in this team
            </summary>
        </member>
        <member name="P:Octokit.Team.ReposCount">
            <summary>
            how many repo this team has access to
            </summary>
        </member>
        <member name="P:Octokit.Team.Organization">
            <summary>
            who this team belongs to
            </summary>
        </member>
        <member name="P:Octokit.Team.Parent">
            <summary>
            The parent team
            </summary>
        </member>
        <member name="P:Octokit.Team.LdapDistinguishedName">
            <summary>
            LDAP Binding (GitHub Enterprise only)
            </summary>
        </member>
        <member name="T:Octokit.TeamPrivacy">
            <summary>
            Used to describe a team's privacy level.
            </summary>
        </member>
        <member name="F:Octokit.TeamPrivacy.Secret">
            <summary>
            Only visible to organization owners and members of the team.
            </summary>
        </member>
        <member name="F:Octokit.TeamPrivacy.Closed">
            <summary>
            Visible to all members of the organization.
            </summary>
        </member>
        <member name="T:Octokit.TeamRole">
            <summary>
            Roles within a Team
            </summary>
        </member>
        <member name="F:Octokit.TeamRole.Member">
            <summary>
            Regular Team Member
            </summary>
        </member>
        <member name="F:Octokit.TeamRole.Maintainer">
            <summary>
             Team Maintainer
            </summary>
        </member>
        <member name="T:Octokit.TeamRepository">
            <summary>
            A teams's repository
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.Id">
            <summary>
            Unique identifier of the repository
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.Name">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.FullName">
            <summary>
            example: octocat/Hello-World
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.Private">
            <summary>
            hether the repository is private or public.
            default: false
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.HtmlUrl">
            <summary>
            format: uri
            example: https://github.com/octocat/Hello-World
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.Description">
            <summary>
            example: This your first repo!
            nullable: true
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.Url">
            <summary>
            format: uri
            example: https://api.github.com/repos/octocat/Hello-World
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.ArchiveUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.AssigneesUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.BlobsUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.BranchesUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.CollaboratorsUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.CommentsUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.CommitsUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.CompareUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.ContentsUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.ContributorsUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/contributors
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.DeploymentsUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/deployments
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.DownloadsUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/downloads
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.EventsUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/events
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.ForksUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/forks
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.GitCommitUrl">
            example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        </member>
        <member name="P:Octokit.TeamRepository.GitRefsUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.GitTagsUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.GitUrl">
            <summary>
            example: git:github.com/octocat/Hello-World.git
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.IssueCommentUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.IssueEventsUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.IssuesUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.KeysUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.LabelsUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.LanguagesUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/languages
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.MergesUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/merges
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.MilestonesUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.NotificationsUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.PullsUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.ReleasesUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.SshUrl">
            <summary>
            example: git @github.com:octocat/Hello-World.git
            
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.StargazersUrl">
            <summary>
             format: uri
             example: http://api.github.com/repos/octocat/Hello-World/stargazers
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.StatusesUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.SubscribersUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/subscribers
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.SubscriptionUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/subscription
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.TagsUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/tags
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.TeamsUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/teams
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.TreesUrl">
            <summary>
            example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.CloneUrl">
            <summary>
            example: https://github.com/octocat/Hello-World.git
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.MirrorUrl">
            <summary>
            format: uri
            example: git:git.example.com/octocat/Hello-World
            nullable: true
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.HooksUrl">
            <summary>
            format: uri
            example: http://api.github.com/repos/octocat/Hello-World/hooks
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.SvnUrl">
            <summary>
            format: uri
            example: https://svn.github.com/octocat/Hello-World
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.HomePage">
            <summary>
            format: uri
            example: https://github.com
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.DefaultBranch">
            <summary>
            he default branch of the repository.
            example: master
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.IsTemplate">
            <summary>
            Whether this repository acts as a template that can be used to generate new repositories
            default: false
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.HasIssues">
            <summary>
            Whether issues are enabled.
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.HasProjects">
            <summary>
            Whether projects are enabled.
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.HasWiki">
            <summary>
            Whether the wiki is enabled
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.HasDownloads">
            <summary>
            Whether downloads are enabled
            default: true
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.Archived">
            <summary>
            Whether the repository is archived
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.Disabled">
            <summary>
            Returns whether or not this repository disabled.
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.Visibility">
            <summary>
            The repository visibility: public, private, or internal.
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.PushedAt">
            <summary>
            format: date-time
            example: '2011-01-26T19:06:43Z'
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.CreatedAt">
            <summary>
            format: date-time
            example: '2011-01-26T19:01:12Z'
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.UpdatedAt">
            <summary>
            format: date-time
            example: '2011-01-26T19:14:43Z'
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.AllowRebaseMerge">
            <summary>
            Whether to allow rebase merges for pull requests.
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.TemplateRepository">
            <summary>
            Template repository (nullable)
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.AllowSquashMerge">
            <summary>
            Whether to allow squash merges for pull requests.
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.AllowAutoMerge">
            <summary>
            Whether to allow Auto-merge to be used on pull requests.
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.DeleteBranchOnMerge">
            <summary>
            Whether to delete head branches when pull requests are merged
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.AllowMergeCommit">
            <summary>
            hether to allow merge commits for pull requests.
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.AllowForking">
            <summary>
            Whether to allow forking this repo
            </summary>
        </member>
        <member name="P:Octokit.TeamRepository.WebCommitSignoffRequired">
            <summary>
            Whether to require contributors to sign off on web-based commits
            </summary>
        </member>
        <member name="P:Octokit.ThreadSubscription.Subscribed">
            <summary>
            Determines if notifications should be received from this repository.
            </summary>
        </member>
        <member name="P:Octokit.ThreadSubscription.Ignored">
            <summary>
            Determines if all notifications should be blocked from this repository.
            </summary>
        </member>
        <member name="P:Octokit.ThreadSubscription.Reason">
            <summary>
            Url of the label
            </summary>
        </member>
        <member name="P:Octokit.ThreadSubscription.CreatedAt">
            <summary>
            The <see cref="T:System.DateTimeOffset"/> for when this <see cref="T:Octokit.Subscription"/> was created.
            </summary>
        </member>
        <member name="P:Octokit.ThreadSubscription.Url">
            <summary>
            The API URL for this <see cref="T:Octokit.Subscription"/>.
            </summary>
        </member>
        <member name="P:Octokit.ThreadSubscription.ThreadUrl">
            <summary>
            The API URL for this thread.
            </summary>
        </member>
        <member name="P:Octokit.TimelineEventInfo.NodeId">
            <summary>
            GraphQL Node Id
            </summary>
        </member>
        <member name="P:Octokit.TimelineEventInfo.Source">
            <summary>
            The source of reference from another issue
            Only provided for cross-referenced events
            </summary>
        </member>
        <member name="P:Octokit.TimelineEventInfo.Rename">
            <summary>
            An object containing rename details
            Only provided for renamed events
            </summary>
        </member>
        <member name="P:Octokit.TimelineEventInfo.ProjectCard">
            <summary>
            The name of the column that the card was listed in prior to column_name.
            Only returned for moved_columns_in_project events
            </summary>
        </member>
        <member name="P:Octokit.TreeItem.Path">
            <summary>
            The path for this Tree Item.
            </summary>
        </member>
        <member name="P:Octokit.TreeItem.Mode">
            <summary>
            The mode of this Tree Item.
            </summary>
        </member>
        <member name="P:Octokit.TreeItem.Type">
            <summary>
            The type of this Tree Item.
            </summary>
        </member>
        <member name="P:Octokit.TreeItem.Size">
            <summary>
            The size of this Tree Item.
            </summary>
        </member>
        <member name="P:Octokit.TreeItem.Sha">
            <summary>
            The SHA of this Tree Item.
            </summary>
        </member>
        <member name="P:Octokit.TreeItem.Url">
            <summary>
            The URL of this Tree Item.
            </summary>
        </member>
        <member name="T:Octokit.FileMode">
            <summary>
            The file mode to associate with a tree item
            </summary>
        </member>
        <member name="F:Octokit.FileMode.File">
            <summary>
            Mark the tree item as a file (applicable to blobs only)
            </summary>
        </member>
        <member name="F:Octokit.FileMode.Executable">
            <summary>
            Mark the tree item as an executable (applicable to blobs only)
            </summary>
        </member>
        <member name="F:Octokit.FileMode.Subdirectory">
            <summary>
            Mark the tree item as a subdirectory (applicable to trees only)
            </summary>
        </member>
        <member name="F:Octokit.FileMode.Submodule">
            <summary>
            Mark the tree item as a submodule (applicable to commits only)
            </summary>
        </member>
        <member name="F:Octokit.FileMode.Symlink">
            <summary>
            Mark the tree item as a symlink (applicable to blobs only)
            </summary>
        </member>
        <member name="P:Octokit.TreeResponse.Sha">
            <summary>
            The SHA for this Tree response.
            </summary>
        </member>
        <member name="P:Octokit.TreeResponse.Url">
            <summary>
            The URL for this Tree response.
            </summary>
        </member>
        <member name="P:Octokit.TreeResponse.Tree">
            <summary>
            The list of Tree Items for this Tree response.
            </summary>
        </member>
        <member name="P:Octokit.TreeResponse.Truncated">
            <summary>
            Whether the response was truncated due to GitHub API limits.
            </summary>
        </member>
        <member name="T:Octokit.User">
            <summary>
            Represents a user on GitHub.
            </summary>
        </member>
        <member name="P:Octokit.User.SiteAdmin">
            <summary>
            Whether or not the user is an administrator of the site
            </summary>
        </member>
        <member name="P:Octokit.User.SuspendedAt">
            <summary>
            When the user was suspended, if at all (GitHub Enterprise)
            </summary>
        </member>
        <member name="P:Octokit.User.Suspended">
            <summary>
            Whether or not the user is currently suspended
            </summary>
        </member>
        <member name="P:Octokit.User.LdapDistinguishedName">
            <summary>
            LDAP Binding (GitHub Enterprise only)
            </summary>
        </member>
        <member name="P:Octokit.User.UpdatedAt">
            <summary>
            Date the user account was updated.
            </summary>
        </member>
        <member name="T:Octokit.UserRenameResponse">
            <summary>
            Represents the response information from a <see cref="M:Octokit.UserAdministrationClient.Rename(System.String,Octokit.UserRename)"/> operation
            </summary>
        </member>
        <member name="P:Octokit.UserRenameResponse.Message">
            <summary>
            Message indicating if the Rename request was queued
            </summary>
        </member>
        <member name="P:Octokit.UserRenameResponse.Url">
            <summary>
            Url to the user that will be renamed
            </summary>
        </member>
        <member name="T:Octokit.UserStar">
            <summary>
            Represents additional information about a star (such as creation time)
            </summary>
        </member>
        <member name="P:Octokit.UserStar.StarredAt">
            <summary>
            The date the star was created.
            </summary>
        </member>
        <member name="P:Octokit.UserStar.User">
            <summary>
            The user associated with the star.
            </summary>
        </member>
        <member name="T:Octokit.Verification">
            <summary>
            Represents a Signature Verification Object in Git Data Commit Payload.
            </summary>
        </member>
        <member name="P:Octokit.Verification.Verified">
            <summary>
            Does GitHub consider the signature in this commit to be verified?
            </summary>
        </member>
        <member name="P:Octokit.Verification.Reason">
            <summary>
            The reason for verified value.
            </summary>
        </member>
        <member name="P:Octokit.Verification.Signature">
            <summary>
            The signature that was extracted from the commit.
            </summary>
        </member>
        <member name="P:Octokit.Verification.Payload">
            <summary>
            The value that was signed.
            </summary>
        </member>
        <member name="P:Octokit.WeeklyCommitActivity.Days">
            <summary>
            The days array is a group of commits per day, starting on Sunday.
            </summary>
        </member>
        <member name="P:Octokit.WeeklyCommitActivity.Total">
            <summary>
            Totally number of commits made this week.
            </summary>
        </member>
        <member name="P:Octokit.WeeklyCommitActivity.Week">
            <summary>
            The week of commits
            </summary>
        </member>
        <member name="M:Octokit.WeeklyCommitActivity.GetCommitCountOn(System.DayOfWeek)">
            <summary>
            Get the number of commits made on any <see cref="T:System.DayOfWeek"/>
            </summary>
            <param name="dayOfWeek">The day of the week</param>
            <returns>The number of commits made</returns>
        </member>
        <member name="P:Octokit.Workflow.Id">
            <summary>
            The Id for this workflow.
            </summary>
        </member>
        <member name="P:Octokit.Workflow.NodeId">
            <summary>
            GraphQL Node Id.
            </summary>
        </member>
        <member name="P:Octokit.Workflow.Name">
            <summary>
            Name of the workflow.
            </summary>
        </member>
        <member name="P:Octokit.Workflow.Path">
            <summary>
            The path of the workflow file.
            </summary>
        </member>
        <member name="P:Octokit.Workflow.State">
            <summary>
            The state of the workflow.
            </summary>
        </member>
        <member name="P:Octokit.Workflow.CreatedAt">
            <summary>
            The time that the workflow was created.
            </summary>
        </member>
        <member name="P:Octokit.Workflow.UpdatedAt">
            <summary>
            The time that the workflow was last updated.
            </summary>
        </member>
        <member name="P:Octokit.Workflow.Url">
            <summary>
            The URL for this workflow.
            </summary>
        </member>
        <member name="P:Octokit.Workflow.HtmlUrl">
            <summary>
            The URL for the HTML view of this workflow.
            </summary>
        </member>
        <member name="P:Octokit.Workflow.BadgeUrl">
            <summary>
            The URL of the badge image for this workflow.
            </summary>
        </member>
        <member name="P:Octokit.Workflow.DeletedAt">
            <summary>
            The time that the workflow was deleted.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowBillable.Ubuntu">
            <summary>
            The Ubuntu billable timing.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowBillable.MacOS">
            <summary>
            The macOS billable timing.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowBillable.Windows">
            <summary>
            The Windows billable timing.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowBillableTiming.TotalMs">
            <summary>
            The total billable milliseconds.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.Id">
            <summary>
            The Id of the job.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.RunId">
            <summary>
            The Id of the associated workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.RunUrl">
            <summary>
            The run URL for this job.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.HeadSha">
            <summary>
            The SHA of the commit that is being run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.Url">
            <summary>
            The URL for this job.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.HtmlUrl">
            <summary>
            The URL for the HTML view of this job.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.NodeId">
            <summary>
            GraphQL Node Id.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.Status">
            <summary>
            The phase of the lifecycle that the job is currently in.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.Conclusion">
            <summary>
            The outcome of the job.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.CreatedAt">
            <summary>
            The time that the job was created.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.StartedAt">
            <summary>
            The time that the job started.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.CompletedAt">
            <summary>
            The time that the job finished.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.Name">
            <summary>
            Name of the workflow job.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.Steps">
            <summary>
            Steps in this job.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.CheckRunUrl">
            <summary>
            The URL for the check run for the job.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.Labels">
            <summary>
            Labels for the workflow job.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.RunnerId">
            <summary>
            The Id of the runner to which this job has been assigned.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.RunnerName">
            <summary>
            The name of the runner to which this job has been assigned.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.RunnerGroupId">
            <summary>
            The Id of the runner group to which this job has been assigned.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJob.RunnerGroupName">
            <summary>
            The name of the runner group to which this job has been assigned.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJobsResponse.TotalCount">
            <summary>
            The total number of workflow runs.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJobsResponse.Jobs">
            <summary>
            The retrieved workflow runs.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJobStep.Name">
            <summary>
            The name of the step.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJobStep.Number">
            <summary>
            The number of the step.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJobStep.Status">
            <summary>
            The phase of the lifecycle that the job is currently in.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJobStep.Conclusion">
            <summary>
            The outcome of the job.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJobStep.StartedAt">
            <summary>
            The time that the step started.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowJobStep.CompletedAt">
            <summary>
            The time that the step finished.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowReference.Path">
            <summary>
            The path of the workflow file.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowReference.Sha">
            <summary>
            The SHA of the workflow file.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowReference.Ref">
            <summary>
            The reference of the workflow file.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.Id">
            <summary>
            The ID of the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.Name">
            <summary>
            The name of the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.NodeId">
            <summary>
            GraphQL Node Id.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.CheckSuiteId">
            <summary>
            The ID of the associated check suite.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.CheckSuiteNodeId">
            <summary>
            The node ID of the associated check suite.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.HeadBranch">
            <summary>
            The head branch.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.HeadSha">
            <summary>
            The SHA of the head commit that points to the version of the workflow being run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.Path">
            <summary>
            The full path of the workflow.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.RunNumber">
            <summary>
            The auto incrementing run number for the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.Event">
            <summary>
            The event that triggered the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.DisplayTitle">
            <summary>
            The event-specific title associated with the run or the run-name if set.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.Status">
            <summary>
            The status of the the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.Conclusion">
            <summary>
            The conclusion of the the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.WorkflowId">
            <summary>
            The ID of the parent workflow.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.Url">
            <summary>
            The URL for this workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.HtmlUrl">
            <summary>
            The URL for the HTML view of this workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.PullRequests">
            <summary>
            Any associated pull requests.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.CreatedAt">
            <summary>
            The time that the workflow run was created.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.UpdatedAt">
            <summary>
            The time that the workflow run was last updated.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.Actor">
            <summary>
            The actor associated with the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.RunAttempt">
            <summary>
            Attempt number of the run, 1 for first attempt and higher if the workflow was re-run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.ReferencedWorkflows">
            <summary>
            Any associated pull requests.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.RunStartedAt">
            <summary>
            The time that the workflow run started.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.TriggeringActor">
            <summary>
            The actor that triggered the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.JobsUrl">
            <summary>
            The URL for this workflow run's job.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.LogsUrl">
            <summary>
            The URL for this workflow run's logs.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.CheckSuiteUrl">
            <summary>
            The URL for this workflow run's check suite.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.ArtifactsUrl">
            <summary>
            The URL for this workflow run's artifacts.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.CancelUrl">
            <summary>
            The URL to cancel this workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.RerunUrl">
            <summary>
            The URL to re-run this workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.PreviousAttemptUrl">
            <summary>
            The URL for this workflow run's previous run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.WorkflowUrl">
            <summary>
            The URL for this workflow run's workflow.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.HeadCommit">
            <summary>
            The head commit of the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.Repository">
            <summary>
            The repository associated with the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.HeadRepository">
            <summary>
            The head repository associated with the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRun.HeadRepositoryId">
            <summary>
            The ID of the head repository.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunBillable.Ubuntu">
            <summary>
            The Ubuntu billable timing.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunBillable.MacOS">
            <summary>
            The macOS billable timing.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunBillable.Windows">
            <summary>
            The Windows billable timing.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunBillableTiming.TotalMs">
            <summary>
            The total billable milliseconds.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunBillableTiming.Jobs">
            <summary>
            The total number of jobs.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunBillableTiming.JobRuns">
            <summary>
            The billable job runs.
            </summary>
        </member>
        <member name="T:Octokit.WorkflowRunJobsFilter">
            <summary>
            Filter jobs for a workflow run.
            </summary>
            <remarks>
            See https://developer.github.com/v3/actions/workflow-jobs/#list-jobs-for-a-workflow-run for details.
            </remarks>
        </member>
        <member name="F:Octokit.WorkflowRunJobsFilter.Latest">
            <summary>
            Returns jobs from the most recent execution of the workflow run.
            </summary>
        </member>
        <member name="F:Octokit.WorkflowRunJobsFilter.All">
            <summary>
            Returns all jobs for a workflow run, including from old executions of the workflow run.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunsResponse.TotalCount">
            <summary>
            The total number of workflow runs.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunsResponse.WorkflowRuns">
            <summary>
            The retrieved workflow runs.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunTiming.JobId">
            <summary>
            The job Id.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunTiming.DurationMs">
            <summary>
            The duration of the job in milliseconds.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunUsage.Billable">
            <summary>
            The billable usage.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowRunUsage.RunDurationMs">
            <summary>
            The total run duration in milliseconds.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowsResponse.TotalCount">
            <summary>
            The total number of workflows.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowsResponse.Workflows">
            <summary>
            The retrieved workflows.
            </summary>
        </member>
        <member name="P:Octokit.WorkflowUsage.Billable">
            <summary>
            The billable usage.
            </summary>
        </member>
        <member name="T:Octokit.JsonArray">
            <summary>
            Represents the json array.
            </summary>
        </member>
        <member name="M:Octokit.JsonArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.JsonArray"/> class.
            </summary>
        </member>
        <member name="M:Octokit.JsonArray.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.JsonArray"/> class.
            </summary>
            <param name="capacity">The capacity of the json array.</param>
        </member>
        <member name="M:Octokit.JsonArray.ToString">
            <summary>
            The json representation of the array.
            </summary>
            <returns>The json representation of the array.</returns>
        </member>
        <member name="T:Octokit.JsonObject">
            <summary>
            Represents the json object.
            </summary>
        </member>
        <member name="F:Octokit.JsonObject._members">
            <summary>
            The internal member dictionary.
            </summary>
        </member>
        <member name="M:Octokit.JsonObject.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Octokit.JsonObject"/>.
            </summary>
        </member>
        <member name="M:Octokit.JsonObject.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Octokit.JsonObject"/>.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1"/> for the type of the key.</param>
        </member>
        <member name="P:Octokit.JsonObject.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Octokit.JsonObject.Add(System.String,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Octokit.JsonObject.ContainsKey(System.String)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
                <c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Octokit.JsonObject.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="M:Octokit.JsonObject.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.JsonObject.TryGetValue(System.String,System.Object@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Octokit.JsonObject.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Octokit.JsonObject.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="M:Octokit.JsonObject.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Octokit.JsonObject.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Octokit.JsonObject.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Octokit.JsonObject.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="P:Octokit.JsonObject.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Octokit.JsonObject.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Octokit.JsonObject.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.JsonObject.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.JsonObject.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Octokit.JsonObject.ToString">
            <summary>
            Returns a json <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A json <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Octokit.SimpleJson">
             <summary>
             This class encodes and decodes JSON strings.
             Spec. details, see http://www.json.org/
            
             JSON uses Arrays and Objects. These correspond here to the data types JsonArray(IList&lt;object>) and JsonObject(IDictionary&lt;string,object>).
             All numbers are parsed to doubles.
             </summary>
        </member>
        <member name="M:Octokit.SimpleJson.DeserializeObject(System.String)">
            <summary>
            Parses the string json into a value
            </summary>
            <param name="json">A JSON string.</param>
            <returns>An IList&lt;object>, a IDictionary&lt;string,object>, a double, a string, null, true, or false</returns>
        </member>
        <member name="M:Octokit.SimpleJson.TryDeserializeObject(System.String,System.Object@)">
            <summary>
            Try parsing the json string into a value.
            </summary>
            <param name="json">
            A JSON string.
            </param>
            <param name="obj">
            The object.
            </param>
            <returns>
            Returns true if successfull otherwise false.
            </returns>
        </member>
        <member name="M:Octokit.SimpleJson.SerializeObject(System.Object,Octokit.IJsonSerializerStrategy)">
            <summary>
            Converts a IDictionary&lt;string,object> / IList&lt;object> object into a JSON string
            </summary>
            <param name="json">A IDictionary&lt;string,object> / IList&lt;object></param>
            <param name="jsonSerializerStrategy">Serializer strategy to use</param>
            <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>
        </member>
        <member name="M:Octokit.SimpleJson.IsNumeric(System.Object)">
            <summary>
            Determines if a given object is numeric in any way
            (can be integer, double, null, etc).
            </summary>
        </member>
        <member name="T:CopilotLicenseClient">
            <summary>
            A client for managing licenses for GitHub Copilot for Business
            </summary>
        </member>
        <member name="M:CopilotLicenseClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new GitHub Copilot for Business License API client.
            </summary>
            <param name="apiConnection">An API connection</param>
        </member>
        <member name="M:CopilotLicenseClient.Remove(System.String,System.String)">
            <summary>
            Removes a license for a user
            </summary>
            <param name="organization">The organization name</param>
            <param name="userName">The github users profile name to remove a license from</param>
            <returns>A <see cref="T:Octokit.CopilotSeatAllocation"/> instance with results</returns>
        </member>
        <member name="M:CopilotLicenseClient.Remove(System.String,Octokit.UserSeatAllocation)">
            <summary>
            Removes a license for one or many users
            </summary>
            <param name="organization">The organization name</param>
            <param name="userSeatAllocation">A <see cref="T:Octokit.UserSeatAllocation"/> instance, containing the names of the user(s) to remove licenses for</param>
            <returns>A <see cref="T:Octokit.CopilotSeatAllocation"/> instance with results</returns>
        </member>
        <member name="M:CopilotLicenseClient.Assign(System.String,System.String)">
            <summary>
            Assigns a license to a user
            </summary>
            <param name="organization">The organization name</param>
            <param name="userName">The github users profile name to add a license to</param>
            <returns>A <see cref="T:Octokit.CopilotSeatAllocation"/> instance with results</returns>
        </member>
        <member name="M:CopilotLicenseClient.Assign(System.String,Octokit.UserSeatAllocation)">
            <summary>
            Assigns a license for one or many users
            </summary>
            <param name="organization">The organization name</param>
            <param name="userSeatAllocation">A <see cref="T:Octokit.UserSeatAllocation"/> instance, containing the names of the user(s) to add licenses to</param>
            <returns>A <see cref="T:Octokit.CopilotSeatAllocation"/> instance with results</returns>
        </member>
        <member name="M:CopilotLicenseClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all of the currently allocated licenses for an organization
            </summary>
            <param name="organization">The organization</param>
            <param name="options">Options to control page size when making API requests</param>
            <returns>A list of <see cref="T:Octokit.CopilotSeats"/> instance containing the currently allocated user licenses.</returns>
        </member>
    </members>
</doc>
